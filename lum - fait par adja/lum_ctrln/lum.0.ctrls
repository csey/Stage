!typedef
  St_5 = enum {St_5_Opening, St_5_Opened, St_5_Closing, St_5_Closed};
  St_4 = enum {St_4_On, St_4_Off};
  St_3 = enum {St_3_Somebody, St_3_Nobody};
  St_2 = enum {St_2_Somebody, St_2_Nobody};
  St_1 = enum {St_1_On, St_1_Off};
  St = enum {St_Opening, St_Opened, St_Closing, St_Closed};
  LumValue = enum {Null, Low, Normal, High};
  Command = enum {Open, Close, SwitchOn, SwitchOff, Nothing};
  LampState = enum {On, Off};
  ShutterState = enum {Closed, Opened, Closing, Opening};
  
!input
  ck: St_5;
  ck_11: St_4;
  ck_14: St_3;
  pnr_2: bool;
  pnr_1: bool;
  pnr: bool;
  outlumbefore: LumValue;
  __init__: bool;
  ok: bool;
  property: bool;
  cmdShutter: Command;
  shutterstate: ShutterState;
  cmdLamp: Command;
  lampstate: LampState;
  presence: bool;
  stopdown: bool;
  stopup: bool;
  outdoorlum: LumValue;
  
!output
  copen: bool;
  con: bool;
  coff: bool;
  cclose: bool;
  
!local
  l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15: bool;
  
!definition
  copen = true;
  l0 = not ((outdoorlum = Normal)) and presence;
  l5 = (not ((ck_11 = St_4_Off)) or presence);
  l7 = not presence;
  l15 = not ((ck = St_5_Opened));
  cclose = l15;
  l1 = (if stopup then l0 else presence);
  l3 = (not ((ck_11 = St_4_Off)) or l0);
  l8 = ((outdoorlum = Normal) or l7);
  l11 = (not ((ck_11 = St_4_On)) or l7);
  l2 = (not ((ck_11 = St_4_Off)) or l1);
  l9 = (if stopup then l8 else l7);
  l13 = (not ((ck_11 = St_4_On)) or l8);
  l4 = (if (ck = St_5_Opened) then l3 else l2);
  l10 = (not ((ck_11 = St_4_On)) or l9);
  l6 = (if (ck = St_5_Closed) then l5 else l4);
  l12 = (if (ck = St_5_Closed) then l11 else l10);
  con = l6;
  l14 = (if (ck = St_5_Opened) then l13 else l12);
  coff = l14;
  
!assertion
  true;
