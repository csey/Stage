type st_19 = St_19_Eteint|St_19_Allumer
type st_18 = St_18_Zero|St_18_Troisieme|St_18_Quatrieme|St_18_Premier|
  St_18_Deuxieme|St_18_Cinquieme|St_18_Arriere
type st_17 = St_17_Stop|St_17_Move
type st_16 = St_16_PositionNuit|St_16_PositionNormale|St_16_PositionJour|
  St_16_Desacitve
type st_15 = St_15_Desactive|St_15_BalayageUnique|St_15_BalayageIntermittent|
  St_15_BalayageContiu
type st_14 = St_14_Desactive|St_14_Active
type st_13 = St_13_Idle|St_13_Detection
type st_12 = St_12_Vehicule|St_12_Pieton|St_12_Feu|St_12_Acceleration
type st_11 = St_11_Desactive|St_11_Active
type st_10 = St_10_Veilleuses|St_10_Phares|St_10_Idle|St_10_Codes
type st_9 = St_9_Veilleuses|St_9_Phares|St_9_Idle|St_9_Codes
type st_8 = St_8_Desactive|St_8_Active
type st_7 = St_7_Vehicule|St_7_Pieton|St_7_Feu|St_7_Acceleration
type st_6 = St_6_Idle|St_6_Detection
type st_5 = St_5_Desactive|St_5_Active
type st_4 = St_4_Desactive|St_4_BalayageUnique|St_4_BalayageIntermittent|
  St_4_BalayageContiu
type st_3 = St_3_PositionNuit|St_3_PositionNormale|St_3_PositionJour|
  St_3_Desacitve
type st_2 = St_2_Stop|St_2_Move
type st_1 = St_1_Zero|St_1_Troisieme|St_1_Quatrieme|St_1_Premier|
  St_1_Deuxieme|St_1_Cinquieme|St_1_Arriere
type st = St_Eteint|St_Allumer
type numero = Un|Deux|Trois|Quatre|Cinq|Six|PointMort
type lum = Null|Low|Normal|High
type couleur = Vert|Jaune|Rouge
type position = Ville|Autoroute
type etatPhares = Idle|Veilleuses|Codes|Phares
type cause = PresencePieton|Presencevehicule|Feu|None
type retro = Desactive|PositionJour|PositionNuit|PositionNormale
type typeBalayage = Deactivated|Intermittent|Contiu|Unique
node moteur(commande : bool; cle : bool) returns (etat : bool)
var v : bool; v_3 : bool; v_2 : bool; v_1 : bool; r_St_Eteint : bool;
    s_St_Eteint : st; r_St_Allumer : bool; s_St_Allumer : st; ck : st;
    nr_St_Eteint : bool; ns_St_Eteint : st; etat_St_Eteint : bool;
    nr_St_Allumer : bool; ns_St_Allumer : st; etat_St_Allumer : bool;
    ck_1 : st; s : st; ns : st; r : bool; nr : bool; pnr : bool;
let
  r = merge ck (St_Eteint -> r_St_Eteint)(St_Allumer -> r_St_Allumer);
  s = merge ck (St_Eteint -> s_St_Eteint)(St_Allumer -> s_St_Allumer);
  v = ((commande when St_Eteint(ck)) or (cle when St_Eteint(ck)));
  s_St_Eteint = if v then St_Allumer else St_Eteint;
  r_St_Eteint = if v then true else (pnr when St_Eteint(ck));
  v_1 = not((commande when St_Allumer(ck)));
  v_2 = not((cle when St_Allumer(ck)));
  v_3 = (v_1 & v_2);
  s_St_Allumer = if v_3 then St_Eteint else St_Allumer;
  r_St_Allumer = if v_3 then true else (pnr when St_Allumer(ck));
  ck = St_Allumer fby ns;
  nr = merge ck_1 (St_Eteint -> nr_St_Eteint)(St_Allumer -> nr_St_Allumer);
  ns = merge ck_1 (St_Eteint -> ns_St_Eteint)(St_Allumer -> ns_St_Allumer);
  etat =
    merge ck_1 (St_Eteint -> etat_St_Eteint)(St_Allumer -> etat_St_Allumer);
  ns_St_Eteint = St_Eteint;
  nr_St_Eteint = false;
  etat_St_Eteint = false;
  ns_St_Allumer = St_Allumer;
  nr_St_Allumer = false;
  etat_St_Allumer = true;
  ck_1 = s;
  pnr = false fby nr
tel

node vitesse(boiteDeVitesse : numero) returns (num : numero)
var v_18 : bool; v_17 : st_1; v_16 : bool; v_15 : st_1; v_14 : bool;
    v_13 : st_1; v_12 : bool; v_11 : st_1; v_10 : bool; v_9 : st_1;
    v_8 : bool; v_7 : bool; v_6 : bool; v_5 : bool; v_4 : bool; v : bool;
    v_34 : bool; v_33 : st_1; v_32 : bool; v_31 : st_1; v_30 : bool;
    v_29 : st_1; v_28 : bool; v_27 : st_1; v_26 : bool; v_25 : st_1;
    v_24 : bool; v_23 : bool; v_22 : bool; v_21 : bool; v_20 : bool;
    v_19 : bool; v_50 : bool; v_49 : st_1; v_48 : bool; v_47 : st_1;
    v_46 : bool; v_45 : st_1; v_44 : bool; v_43 : st_1; v_42 : bool;
    v_41 : st_1; v_40 : bool; v_39 : bool; v_38 : bool; v_37 : bool;
    v_36 : bool; v_35 : bool; v_66 : bool; v_65 : st_1; v_64 : bool;
    v_63 : st_1; v_62 : bool; v_61 : st_1; v_60 : bool; v_59 : st_1;
    v_58 : bool; v_57 : st_1; v_56 : bool; v_55 : bool; v_54 : bool;
    v_53 : bool; v_52 : bool; v_51 : bool; v_82 : bool; v_81 : st_1;
    v_80 : bool; v_79 : st_1; v_78 : bool; v_77 : st_1; v_76 : bool;
    v_75 : st_1; v_74 : bool; v_73 : st_1; v_72 : bool; v_71 : bool;
    v_70 : bool; v_69 : bool; v_68 : bool; v_67 : bool; v_98 : bool;
    v_97 : st_1; v_96 : bool; v_95 : st_1; v_94 : bool; v_93 : st_1;
    v_92 : bool; v_91 : st_1; v_90 : bool; v_89 : st_1; v_88 : bool;
    v_87 : bool; v_86 : bool; v_85 : bool; v_84 : bool; v_83 : bool;
    v_114 : bool; v_113 : st_1; v_112 : bool; v_111 : st_1; v_110 : bool;
    v_109 : st_1; v_108 : bool; v_107 : st_1; v_106 : bool; v_105 : st_1;
    v_104 : bool; v_103 : bool; v_102 : bool; v_101 : bool; v_100 : bool;
    v_99 : bool; r_St_1_Arriere : bool; s_St_1_Arriere : st_1;
    r_St_1_Cinquieme : bool; s_St_1_Cinquieme : st_1;
    r_St_1_Quatrieme : bool; s_St_1_Quatrieme : st_1;
    r_St_1_Troisieme : bool; s_St_1_Troisieme : st_1; r_St_1_Deuxieme : bool;
    s_St_1_Deuxieme : st_1; r_St_1_Premier : bool; s_St_1_Premier : st_1;
    r_St_1_Zero : bool; s_St_1_Zero : st_1; ck : st_1;
    nr_St_1_Arriere : bool; ns_St_1_Arriere : st_1;
    num_St_1_Arriere : numero; nr_St_1_Cinquieme : bool;
    ns_St_1_Cinquieme : st_1; num_St_1_Cinquieme : numero;
    nr_St_1_Quatrieme : bool; ns_St_1_Quatrieme : st_1;
    num_St_1_Quatrieme : numero; nr_St_1_Troisieme : bool;
    ns_St_1_Troisieme : st_1; num_St_1_Troisieme : numero;
    nr_St_1_Deuxieme : bool; ns_St_1_Deuxieme : st_1;
    num_St_1_Deuxieme : numero; nr_St_1_Premier : bool;
    ns_St_1_Premier : st_1; num_St_1_Premier : numero; nr_St_1_Zero : bool;
    ns_St_1_Zero : st_1; num_St_1_Zero : numero; ck_2 : st_1; s : st_1;
    ns : st_1; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_1_Arriere -> r_St_1_Arriere)(St_1_Cinquieme -> r_St_1_Cinquieme)
      (St_1_Quatrieme -> r_St_1_Quatrieme)
      (St_1_Troisieme -> r_St_1_Troisieme)(St_1_Deuxieme -> r_St_1_Deuxieme)
      (St_1_Premier -> r_St_1_Premier)(St_1_Zero -> r_St_1_Zero);
  s =
    merge ck
      (St_1_Arriere -> s_St_1_Arriere)(St_1_Cinquieme -> s_St_1_Cinquieme)
      (St_1_Quatrieme -> s_St_1_Quatrieme)
      (St_1_Troisieme -> s_St_1_Troisieme)(St_1_Deuxieme -> s_St_1_Deuxieme)
      (St_1_Premier -> s_St_1_Premier)(St_1_Zero -> s_St_1_Zero);
  v = ((boiteDeVitesse when St_1_Arriere(ck)) = Un);
  v_4 = ((boiteDeVitesse when St_1_Arriere(ck)) = Deux);
  v_5 = ((boiteDeVitesse when St_1_Arriere(ck)) = Quatre);
  v_6 = ((boiteDeVitesse when St_1_Arriere(ck)) = Trois);
  v_7 = ((boiteDeVitesse when St_1_Arriere(ck)) = Cinq);
  v_8 = ((boiteDeVitesse when St_1_Arriere(ck)) = PointMort);
  v_9 = if v_8 then St_1_Zero else St_1_Arriere;
  v_10 = if v_8 then true else (pnr when St_1_Arriere(ck));
  v_11 = if v_7 then St_1_Cinquieme else v_9;
  v_12 = if v_7 then true else v_10;
  v_13 = if v_6 then St_1_Troisieme else v_11;
  v_14 = if v_6 then true else v_12;
  v_15 = if v_5 then St_1_Troisieme else v_13;
  v_16 = if v_5 then true else v_14;
  v_17 = if v_4 then St_1_Deuxieme else v_15;
  v_18 = if v_4 then true else v_16;
  s_St_1_Arriere = if v then St_1_Premier else v_17;
  r_St_1_Arriere = if v then true else v_18;
  v_19 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Un);
  v_20 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Deux);
  v_21 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Quatre);
  v_22 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Trois);
  v_23 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Six);
  v_24 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = PointMort);
  v_25 = if v_24 then St_1_Zero else St_1_Cinquieme;
  v_26 = if v_24 then true else (pnr when St_1_Cinquieme(ck));
  v_27 = if v_23 then St_1_Arriere else v_25;
  v_28 = if v_23 then true else v_26;
  v_29 = if v_22 then St_1_Troisieme else v_27;
  v_30 = if v_22 then true else v_28;
  v_31 = if v_21 then St_1_Troisieme else v_29;
  v_32 = if v_21 then true else v_30;
  v_33 = if v_20 then St_1_Deuxieme else v_31;
  v_34 = if v_20 then true else v_32;
  s_St_1_Cinquieme = if v_19 then St_1_Premier else v_33;
  r_St_1_Cinquieme = if v_19 then true else v_34;
  v_35 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Un);
  v_36 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Deux);
  v_37 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Trois);
  v_38 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Cinq);
  v_39 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Six);
  v_40 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = PointMort);
  v_41 = if v_40 then St_1_Zero else St_1_Quatrieme;
  v_42 = if v_40 then true else (pnr when St_1_Quatrieme(ck));
  v_43 = if v_39 then St_1_Arriere else v_41;
  v_44 = if v_39 then true else v_42;
  v_45 = if v_38 then St_1_Cinquieme else v_43;
  v_46 = if v_38 then true else v_44;
  v_47 = if v_37 then St_1_Troisieme else v_45;
  v_48 = if v_37 then true else v_46;
  v_49 = if v_36 then St_1_Deuxieme else v_47;
  v_50 = if v_36 then true else v_48;
  s_St_1_Quatrieme = if v_35 then St_1_Premier else v_49;
  r_St_1_Quatrieme = if v_35 then true else v_50;
  v_51 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Un);
  v_52 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Deux);
  v_53 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Quatre);
  v_54 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Cinq);
  v_55 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Six);
  v_56 = ((boiteDeVitesse when St_1_Troisieme(ck)) = PointMort);
  v_57 = if v_56 then St_1_Zero else St_1_Troisieme;
  v_58 = if v_56 then true else (pnr when St_1_Troisieme(ck));
  v_59 = if v_55 then St_1_Arriere else v_57;
  v_60 = if v_55 then true else v_58;
  v_61 = if v_54 then St_1_Cinquieme else v_59;
  v_62 = if v_54 then true else v_60;
  v_63 = if v_53 then St_1_Quatrieme else v_61;
  v_64 = if v_53 then true else v_62;
  v_65 = if v_52 then St_1_Deuxieme else v_63;
  v_66 = if v_52 then true else v_64;
  s_St_1_Troisieme = if v_51 then St_1_Premier else v_65;
  r_St_1_Troisieme = if v_51 then true else v_66;
  v_67 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Un);
  v_68 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Trois);
  v_69 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Quatre);
  v_70 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Cinq);
  v_71 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Six);
  v_72 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = PointMort);
  v_73 = if v_72 then St_1_Zero else St_1_Deuxieme;
  v_74 = if v_72 then true else (pnr when St_1_Deuxieme(ck));
  v_75 = if v_71 then St_1_Arriere else v_73;
  v_76 = if v_71 then true else v_74;
  v_77 = if v_70 then St_1_Cinquieme else v_75;
  v_78 = if v_70 then true else v_76;
  v_79 = if v_69 then St_1_Quatrieme else v_77;
  v_80 = if v_69 then true else v_78;
  v_81 = if v_68 then St_1_Troisieme else v_79;
  v_82 = if v_68 then true else v_80;
  s_St_1_Deuxieme = if v_67 then St_1_Premier else v_81;
  r_St_1_Deuxieme = if v_67 then true else v_82;
  v_83 = ((boiteDeVitesse when St_1_Premier(ck)) = Deux);
  v_84 = ((boiteDeVitesse when St_1_Premier(ck)) = Trois);
  v_85 = ((boiteDeVitesse when St_1_Premier(ck)) = Quatre);
  v_86 = ((boiteDeVitesse when St_1_Premier(ck)) = Cinq);
  v_87 = ((boiteDeVitesse when St_1_Premier(ck)) = Six);
  v_88 = ((boiteDeVitesse when St_1_Premier(ck)) = PointMort);
  v_89 = if v_88 then St_1_Zero else St_1_Premier;
  v_90 = if v_88 then true else (pnr when St_1_Premier(ck));
  v_91 = if v_87 then St_1_Arriere else v_89;
  v_92 = if v_87 then true else v_90;
  v_93 = if v_86 then St_1_Cinquieme else v_91;
  v_94 = if v_86 then true else v_92;
  v_95 = if v_85 then St_1_Quatrieme else v_93;
  v_96 = if v_85 then true else v_94;
  v_97 = if v_84 then St_1_Troisieme else v_95;
  v_98 = if v_84 then true else v_96;
  s_St_1_Premier = if v_83 then St_1_Deuxieme else v_97;
  r_St_1_Premier = if v_83 then true else v_98;
  v_99 = ((boiteDeVitesse when St_1_Zero(ck)) = Deux);
  v_100 = ((boiteDeVitesse when St_1_Zero(ck)) = Trois);
  v_101 = ((boiteDeVitesse when St_1_Zero(ck)) = Quatre);
  v_102 = ((boiteDeVitesse when St_1_Zero(ck)) = Cinq);
  v_103 = ((boiteDeVitesse when St_1_Zero(ck)) = Six);
  v_104 = ((boiteDeVitesse when St_1_Zero(ck)) = Un);
  v_105 = if v_104 then St_1_Premier else St_1_Zero;
  v_106 = if v_104 then true else (pnr when St_1_Zero(ck));
  v_107 = if v_103 then St_1_Arriere else v_105;
  v_108 = if v_103 then true else v_106;
  v_109 = if v_102 then St_1_Cinquieme else v_107;
  v_110 = if v_102 then true else v_108;
  v_111 = if v_101 then St_1_Quatrieme else v_109;
  v_112 = if v_101 then true else v_110;
  v_113 = if v_100 then St_1_Troisieme else v_111;
  v_114 = if v_100 then true else v_112;
  s_St_1_Zero = if v_99 then St_1_Deuxieme else v_113;
  r_St_1_Zero = if v_99 then true else v_114;
  ck = St_1_Zero fby ns;
  nr =
    merge ck_2
      (St_1_Arriere -> nr_St_1_Arriere)(St_1_Cinquieme -> nr_St_1_Cinquieme)
      (St_1_Quatrieme -> nr_St_1_Quatrieme)
      (St_1_Troisieme -> nr_St_1_Troisieme)
      (St_1_Deuxieme -> nr_St_1_Deuxieme)(St_1_Premier -> nr_St_1_Premier)
      (St_1_Zero -> nr_St_1_Zero);
  ns =
    merge ck_2
      (St_1_Arriere -> ns_St_1_Arriere)(St_1_Cinquieme -> ns_St_1_Cinquieme)
      (St_1_Quatrieme -> ns_St_1_Quatrieme)
      (St_1_Troisieme -> ns_St_1_Troisieme)
      (St_1_Deuxieme -> ns_St_1_Deuxieme)(St_1_Premier -> ns_St_1_Premier)
      (St_1_Zero -> ns_St_1_Zero);
  num =
    merge ck_2
      (St_1_Arriere -> num_St_1_Arriere)
      (St_1_Cinquieme -> num_St_1_Cinquieme)
      (St_1_Quatrieme -> num_St_1_Quatrieme)
      (St_1_Troisieme -> num_St_1_Troisieme)
      (St_1_Deuxieme -> num_St_1_Deuxieme)(St_1_Premier -> num_St_1_Premier)
      (St_1_Zero -> num_St_1_Zero);
  ns_St_1_Arriere = St_1_Arriere;
  nr_St_1_Arriere = false;
  num_St_1_Arriere = Six;
  ns_St_1_Cinquieme = St_1_Cinquieme;
  nr_St_1_Cinquieme = false;
  num_St_1_Cinquieme = Cinq;
  ns_St_1_Quatrieme = St_1_Quatrieme;
  nr_St_1_Quatrieme = false;
  num_St_1_Quatrieme = Quatre;
  ns_St_1_Troisieme = St_1_Troisieme;
  nr_St_1_Troisieme = false;
  num_St_1_Troisieme = Trois;
  ns_St_1_Deuxieme = St_1_Deuxieme;
  nr_St_1_Deuxieme = false;
  num_St_1_Deuxieme = Deux;
  ns_St_1_Premier = St_1_Premier;
  nr_St_1_Premier = false;
  num_St_1_Premier = Un;
  ns_St_1_Zero = St_1_Zero;
  nr_St_1_Zero = false;
  num_St_1_Zero = PointMort;
  ck_2 = s;
  pnr = false fby nr
tel

node acceleration(frein : bool; accelerateur : bool) returns (avance : bool)
var r_St_2_Stop : bool; s_St_2_Stop : st_2; r_St_2_Move : bool;
    s_St_2_Move : st_2; ck : st_2; nr_St_2_Stop : bool; ns_St_2_Stop : st_2;
    avance_St_2_Stop : bool; nr_St_2_Move : bool; ns_St_2_Move : st_2;
    avance_St_2_Move : bool; ck_3 : st_2; s : st_2; ns : st_2; r : bool;
    nr : bool; pnr : bool;
let
  r = merge ck (St_2_Stop -> r_St_2_Stop)(St_2_Move -> r_St_2_Move);
  s = merge ck (St_2_Stop -> s_St_2_Stop)(St_2_Move -> s_St_2_Move);
  s_St_2_Stop =
    if (accelerateur when St_2_Stop(ck)) then St_2_Move else St_2_Stop;
  r_St_2_Stop =
    if (accelerateur when St_2_Stop(ck))
    then true
    else (pnr when St_2_Stop(ck));
  s_St_2_Move = if (frein when St_2_Move(ck)) then St_2_Stop else St_2_Move;
  r_St_2_Move =
    if (frein when St_2_Move(ck)) then true else (pnr when St_2_Move(ck));
  ck = St_2_Move fby ns;
  nr = merge ck_3 (St_2_Stop -> nr_St_2_Stop)(St_2_Move -> nr_St_2_Move);
  ns = merge ck_3 (St_2_Stop -> ns_St_2_Stop)(St_2_Move -> ns_St_2_Move);
  avance =
    merge ck_3 (St_2_Stop -> avance_St_2_Stop)(St_2_Move -> avance_St_2_Move);
  ns_St_2_Stop = St_2_Stop;
  nr_St_2_Stop = false;
  avance_St_2_Stop = false;
  ns_St_2_Move = St_2_Move;
  nr_St_2_Move = false;
  avance_St_2_Move = true;
  ck_3 = s;
  pnr = false fby nr
tel

node retroviseurs(normal : bool; jour : bool; nuit : bool)
returns (gerer : bool; sortie : retro)
var v_122 : bool; v_121 : st_3; v_120 : bool; v_119 : st_3; v_118 : bool;
    v_117 : bool; v_116 : bool; v_115 : bool; v : bool; v_131 : bool;
    v_130 : st_3; v_129 : bool; v_128 : st_3; v_127 : bool; v_126 : bool;
    v_125 : bool; v_124 : bool; v_123 : bool; v_140 : bool; v_139 : st_3;
    v_138 : bool; v_137 : st_3; v_136 : bool; v_135 : bool; v_134 : bool;
    v_133 : bool; v_132 : bool; v_144 : bool; v_143 : st_3; v_142 : bool;
    v_141 : st_3; r_St_3_PositionNuit : bool; s_St_3_PositionNuit : st_3;
    r_St_3_PositionJour : bool; s_St_3_PositionJour : st_3;
    r_St_3_PositionNormale : bool; s_St_3_PositionNormale : st_3;
    r_St_3_Desacitve : bool; s_St_3_Desacitve : st_3; ck : st_3;
    nr_St_3_PositionNuit : bool; ns_St_3_PositionNuit : st_3;
    sortie_St_3_PositionNuit : retro; gerer_St_3_PositionNuit : bool;
    nr_St_3_PositionJour : bool; ns_St_3_PositionJour : st_3;
    sortie_St_3_PositionJour : retro; gerer_St_3_PositionJour : bool;
    nr_St_3_PositionNormale : bool; ns_St_3_PositionNormale : st_3;
    sortie_St_3_PositionNormale : retro; gerer_St_3_PositionNormale : bool;
    nr_St_3_Desacitve : bool; ns_St_3_Desacitve : st_3;
    sortie_St_3_Desacitve : retro; gerer_St_3_Desacitve : bool; ck_4 : st_3;
    s : st_3; ns : st_3; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_3_PositionNuit -> r_St_3_PositionNuit)
      (St_3_PositionJour -> r_St_3_PositionJour)
      (St_3_PositionNormale -> r_St_3_PositionNormale)
      (St_3_Desacitve -> r_St_3_Desacitve);
  s =
    merge ck
      (St_3_PositionNuit -> s_St_3_PositionNuit)
      (St_3_PositionJour -> s_St_3_PositionJour)
      (St_3_PositionNormale -> s_St_3_PositionNormale)
      (St_3_Desacitve -> s_St_3_Desacitve);
  v = not((normal when St_3_PositionNuit(ck)));
  v_115 = not((jour when St_3_PositionNuit(ck)));
  v_116 = (v & v_115);
  v_117 = not((nuit when St_3_PositionNuit(ck)));
  v_118 = (v_116 & v_117);
  v_119 = if v_118 then St_3_Desacitve else St_3_PositionNuit;
  v_120 = if v_118 then true else (pnr when St_3_PositionNuit(ck));
  v_121 =
    if (normal when St_3_PositionNuit(ck))
    then St_3_PositionNormale
    else v_119;
  v_122 = if (normal when St_3_PositionNuit(ck)) then true else v_120;
  s_St_3_PositionNuit =
    if (jour when St_3_PositionNuit(ck)) then St_3_PositionJour else v_121;
  r_St_3_PositionNuit =
    if (jour when St_3_PositionNuit(ck)) then true else v_122;
  v_123 = not((normal when St_3_PositionJour(ck)));
  v_124 = not((jour when St_3_PositionJour(ck)));
  v_125 = (v_123 & v_124);
  v_126 = not((nuit when St_3_PositionJour(ck)));
  v_127 = (v_125 & v_126);
  v_128 = if v_127 then St_3_Desacitve else St_3_PositionJour;
  v_129 = if v_127 then true else (pnr when St_3_PositionJour(ck));
  v_130 =
    if (nuit when St_3_PositionJour(ck)) then St_3_PositionNuit else v_128;
  v_131 = if (nuit when St_3_PositionJour(ck)) then true else v_129;
  s_St_3_PositionJour =
    if (normal when St_3_PositionJour(ck))
    then St_3_PositionNormale
    else v_130;
  r_St_3_PositionJour =
    if (normal when St_3_PositionJour(ck)) then true else v_131;
  v_132 = not((normal when St_3_PositionNormale(ck)));
  v_133 = not((jour when St_3_PositionNormale(ck)));
  v_134 = (v_132 & v_133);
  v_135 = not((nuit when St_3_PositionNormale(ck)));
  v_136 = (v_134 & v_135);
  v_137 = if v_136 then St_3_Desacitve else St_3_PositionNormale;
  v_138 = if v_136 then true else (pnr when St_3_PositionNormale(ck));
  v_139 =
    if (nuit when St_3_PositionNormale(ck)) then St_3_PositionNuit else v_137;
  v_140 = if (nuit when St_3_PositionNormale(ck)) then true else v_138;
  s_St_3_PositionNormale =
    if (jour when St_3_PositionNormale(ck)) then St_3_PositionJour else v_139;
  r_St_3_PositionNormale =
    if (jour when St_3_PositionNormale(ck)) then true else v_140;
  v_141 =
    if (normal when St_3_Desacitve(ck))
    then St_3_PositionNormale
    else St_3_Desacitve;
  v_142 =
    if (normal when St_3_Desacitve(ck))
    then true
    else (pnr when St_3_Desacitve(ck));
  v_143 = if (nuit when St_3_Desacitve(ck)) then St_3_PositionNuit else v_141;
  v_144 = if (nuit when St_3_Desacitve(ck)) then true else v_142;
  s_St_3_Desacitve =
    if (jour when St_3_Desacitve(ck)) then St_3_PositionJour else v_143;
  r_St_3_Desacitve = if (jour when St_3_Desacitve(ck)) then true else v_144;
  ck = St_3_Desacitve fby ns;
  nr =
    merge ck_4
      (St_3_PositionNuit -> nr_St_3_PositionNuit)
      (St_3_PositionJour -> nr_St_3_PositionJour)
      (St_3_PositionNormale -> nr_St_3_PositionNormale)
      (St_3_Desacitve -> nr_St_3_Desacitve);
  ns =
    merge ck_4
      (St_3_PositionNuit -> ns_St_3_PositionNuit)
      (St_3_PositionJour -> ns_St_3_PositionJour)
      (St_3_PositionNormale -> ns_St_3_PositionNormale)
      (St_3_Desacitve -> ns_St_3_Desacitve);
  sortie =
    merge ck_4
      (St_3_PositionNuit -> sortie_St_3_PositionNuit)
      (St_3_PositionJour -> sortie_St_3_PositionJour)
      (St_3_PositionNormale -> sortie_St_3_PositionNormale)
      (St_3_Desacitve -> sortie_St_3_Desacitve);
  gerer =
    merge ck_4
      (St_3_PositionNuit -> gerer_St_3_PositionNuit)
      (St_3_PositionJour -> gerer_St_3_PositionJour)
      (St_3_PositionNormale -> gerer_St_3_PositionNormale)
      (St_3_Desacitve -> gerer_St_3_Desacitve);
  ns_St_3_PositionNuit = St_3_PositionNuit;
  nr_St_3_PositionNuit = false;
  sortie_St_3_PositionNuit = PositionNuit;
  gerer_St_3_PositionNuit = true;
  ns_St_3_PositionJour = St_3_PositionJour;
  nr_St_3_PositionJour = false;
  sortie_St_3_PositionJour = PositionJour;
  gerer_St_3_PositionJour = true;
  ns_St_3_PositionNormale = St_3_PositionNormale;
  nr_St_3_PositionNormale = false;
  sortie_St_3_PositionNormale = PositionNormale;
  gerer_St_3_PositionNormale = true;
  ns_St_3_Desacitve = St_3_Desacitve;
  nr_St_3_Desacitve = false;
  sortie_St_3_Desacitve = Desactive;
  gerer_St_3_Desacitve = false;
  ck_4 = s;
  pnr = false fby nr
tel

node essuieGlace(con : bool; cclose : bool; densite : lum)
returns (etat : typeBalayage)
var v_151 : bool; v_150 : st_4; v_149 : bool; v_148 : st_4; v_147 : bool;
    v_146 : bool; v_145 : bool; v : bool; v_159 : bool; v_158 : st_4;
    v_157 : bool; v_156 : st_4; v_155 : bool; v_154 : bool; v_153 : bool;
    v_152 : bool; v_167 : bool; v_166 : st_4; v_165 : bool; v_164 : st_4;
    v_163 : bool; v_162 : bool; v_161 : bool; v_160 : bool;
    r_St_4_BalayageContiu : bool; s_St_4_BalayageContiu : st_4;
    r_St_4_BalayageIntermittent : bool; s_St_4_BalayageIntermittent : st_4;
    r_St_4_BalayageUnique : bool; s_St_4_BalayageUnique : st_4;
    r_St_4_Desactive : bool; s_St_4_Desactive : st_4; ck : st_4;
    nr_St_4_BalayageContiu : bool; ns_St_4_BalayageContiu : st_4;
    etat_St_4_BalayageContiu : typeBalayage;
    nr_St_4_BalayageIntermittent : bool; ns_St_4_BalayageIntermittent : st_4;
    etat_St_4_BalayageIntermittent : typeBalayage;
    nr_St_4_BalayageUnique : bool; ns_St_4_BalayageUnique : st_4;
    etat_St_4_BalayageUnique : typeBalayage; nr_St_4_Desactive : bool;
    ns_St_4_Desactive : st_4; etat_St_4_Desactive : typeBalayage;
    ck_5 : st_4; s : st_4; ns : st_4; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_4_BalayageContiu -> r_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> r_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> r_St_4_BalayageUnique)
      (St_4_Desactive -> r_St_4_Desactive);
  s =
    merge ck
      (St_4_BalayageContiu -> s_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> s_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> s_St_4_BalayageUnique)
      (St_4_Desactive -> s_St_4_Desactive);
  v = ((densite when St_4_BalayageContiu(ck)) = Low);
  v_145 = ((con when St_4_BalayageContiu(ck)) & v);
  v_146 = ((densite when St_4_BalayageContiu(ck)) = Normal);
  v_147 = ((con when St_4_BalayageContiu(ck)) & v_146);
  v_148 = if v_147 then St_4_BalayageIntermittent else St_4_BalayageContiu;
  v_149 = if v_147 then true else (pnr when St_4_BalayageContiu(ck));
  v_150 = if v_145 then St_4_BalayageUnique else v_148;
  v_151 = if v_145 then true else v_149;
  s_St_4_BalayageContiu =
    if (cclose when St_4_BalayageContiu(ck)) then St_4_Desactive else v_150;
  r_St_4_BalayageContiu =
    if (cclose when St_4_BalayageContiu(ck)) then true else v_151;
  v_152 = ((densite when St_4_BalayageIntermittent(ck)) = High);
  v_153 = ((con when St_4_BalayageIntermittent(ck)) & v_152);
  v_154 = ((densite when St_4_BalayageIntermittent(ck)) = Low);
  v_155 = ((con when St_4_BalayageIntermittent(ck)) & v_154);
  v_156 = if v_155 then St_4_BalayageUnique else St_4_BalayageIntermittent;
  v_157 = if v_155 then true else (pnr when St_4_BalayageIntermittent(ck));
  v_158 = if v_153 then St_4_BalayageContiu else v_156;
  v_159 = if v_153 then true else v_157;
  s_St_4_BalayageIntermittent =
    if (cclose when St_4_BalayageIntermittent(ck))
    then St_4_Desactive
    else v_158;
  r_St_4_BalayageIntermittent =
    if (cclose when St_4_BalayageIntermittent(ck)) then true else v_159;
  v_160 = ((densite when St_4_BalayageUnique(ck)) = High);
  v_161 = ((con when St_4_BalayageUnique(ck)) & v_160);
  v_162 = ((densite when St_4_BalayageUnique(ck)) = Normal);
  v_163 = ((con when St_4_BalayageUnique(ck)) & v_162);
  v_164 = if v_163 then St_4_BalayageIntermittent else St_4_BalayageUnique;
  v_165 = if v_163 then true else (pnr when St_4_BalayageUnique(ck));
  v_166 = if v_161 then St_4_BalayageContiu else v_164;
  v_167 = if v_161 then true else v_165;
  s_St_4_BalayageUnique =
    if (cclose when St_4_BalayageUnique(ck)) then St_4_Desactive else v_166;
  r_St_4_BalayageUnique =
    if (cclose when St_4_BalayageUnique(ck)) then true else v_167;
  s_St_4_Desactive =
    if (con when St_4_Desactive(ck))
    then St_4_BalayageUnique
    else St_4_Desactive;
  r_St_4_Desactive =
    if (con when St_4_Desactive(ck))
    then true
    else (pnr when St_4_Desactive(ck));
  ck = St_4_Desactive fby ns;
  nr =
    merge ck_5
      (St_4_BalayageContiu -> nr_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> nr_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> nr_St_4_BalayageUnique)
      (St_4_Desactive -> nr_St_4_Desactive);
  ns =
    merge ck_5
      (St_4_BalayageContiu -> ns_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> ns_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> ns_St_4_BalayageUnique)
      (St_4_Desactive -> ns_St_4_Desactive);
  etat =
    merge ck_5
      (St_4_BalayageContiu -> etat_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> etat_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> etat_St_4_BalayageUnique)
      (St_4_Desactive -> etat_St_4_Desactive);
  ns_St_4_BalayageContiu = St_4_BalayageContiu;
  nr_St_4_BalayageContiu = false;
  etat_St_4_BalayageContiu = Contiu;
  ns_St_4_BalayageIntermittent = St_4_BalayageIntermittent;
  nr_St_4_BalayageIntermittent = false;
  etat_St_4_BalayageIntermittent = Intermittent;
  ns_St_4_BalayageUnique = St_4_BalayageUnique;
  nr_St_4_BalayageUnique = false;
  etat_St_4_BalayageUnique = Unique;
  ns_St_4_Desactive = St_4_Desactive;
  nr_St_4_Desactive = false;
  etat_St_4_Desactive = Deactivated;
  ck_5 = s;
  pnr = false fby nr
tel

node accident(detectionAccident : bool)
returns (airbag : bool; emissionAppelUrgence : bool)
var v : bool; r_St_5_Active : bool; s_St_5_Active : st_5;
    r_St_5_Desactive : bool; s_St_5_Desactive : st_5; ck : st_5;
    nr_St_5_Active : bool; ns_St_5_Active : st_5;
    emissionAppelUrgence_St_5_Active : bool; airbag_St_5_Active : bool;
    nr_St_5_Desactive : bool; ns_St_5_Desactive : st_5;
    emissionAppelUrgence_St_5_Desactive : bool; airbag_St_5_Desactive : bool;
    ck_6 : st_5; s : st_5; ns : st_5; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_5_Active -> r_St_5_Active)(St_5_Desactive -> r_St_5_Desactive);
  s =
    merge ck
      (St_5_Active -> s_St_5_Active)(St_5_Desactive -> s_St_5_Desactive);
  v = not((detectionAccident when St_5_Active(ck)));
  s_St_5_Active = if v then St_5_Active else St_5_Active;
  r_St_5_Active = if v then true else (pnr when St_5_Active(ck));
  s_St_5_Desactive =
    if (detectionAccident when St_5_Desactive(ck))
    then St_5_Active
    else St_5_Desactive;
  r_St_5_Desactive =
    if (detectionAccident when St_5_Desactive(ck))
    then true
    else (pnr when St_5_Desactive(ck));
  ck = St_5_Desactive fby ns;
  nr =
    merge ck_6
      (St_5_Active -> nr_St_5_Active)(St_5_Desactive -> nr_St_5_Desactive);
  ns =
    merge ck_6
      (St_5_Active -> ns_St_5_Active)(St_5_Desactive -> ns_St_5_Desactive);
  emissionAppelUrgence =
    merge ck_6
      (St_5_Active -> emissionAppelUrgence_St_5_Active)
      (St_5_Desactive -> emissionAppelUrgence_St_5_Desactive);
  airbag =
    merge ck_6
      (St_5_Active -> airbag_St_5_Active)
      (St_5_Desactive -> airbag_St_5_Desactive);
  ns_St_5_Active = St_5_Active;
  nr_St_5_Active = false;
  airbag_St_5_Active = true;
  emissionAppelUrgence_St_5_Active = true;
  ns_St_5_Desactive = St_5_Desactive;
  nr_St_5_Desactive = false;
  airbag_St_5_Desactive = false;
  emissionAppelUrgence_St_5_Desactive = false;
  ck_6 = s;
  pnr = false fby nr
tel

node avertissement(detectionDepassementLigne : bool;
                    detectionVolantLibre : bool;
                    detectionDefaillanceTechnique : bool;
                    detectionVehiculeAngleMort : bool)
returns (depassementLigne : bool; volantLibre : bool;
          defaillanceTechnique : bool; dangerAngleMort : bool)
var v_173 : bool; v_172 : bool; v_171 : bool; v_170 : bool; v_169 : bool;
    v_168 : bool; v : bool; v_176 : bool; v_175 : bool; v_174 : bool;
    r_St_6_Detection : bool; s_St_6_Detection : st_6; r_St_6_Idle : bool;
    s_St_6_Idle : st_6; ck : st_6; nr_St_6_Detection : bool;
    ns_St_6_Detection : st_6; dangerAngleMort_St_6_Detection : bool;
    defaillanceTechnique_St_6_Detection : bool;
    volantLibre_St_6_Detection : bool;
    depassementLigne_St_6_Detection : bool; nr_St_6_Idle : bool;
    ns_St_6_Idle : st_6; dangerAngleMort_St_6_Idle : bool;
    defaillanceTechnique_St_6_Idle : bool; volantLibre_St_6_Idle : bool;
    depassementLigne_St_6_Idle : bool; ck_7 : st_6; s : st_6; ns : st_6;
    r : bool; nr : bool; pnr : bool;
let
  r = merge ck (St_6_Detection -> r_St_6_Detection)(St_6_Idle -> r_St_6_Idle);
  s = merge ck (St_6_Detection -> s_St_6_Detection)(St_6_Idle -> s_St_6_Idle);
  v = not((detectionDepassementLigne when St_6_Detection(ck)));
  v_168 = not((detectionVolantLibre when St_6_Detection(ck)));
  v_169 = (v & v_168);
  v_170 = not((detectionDefaillanceTechnique when St_6_Detection(ck)));
  v_171 = (v_169 & v_170);
  v_172 = not((detectionVehiculeAngleMort when St_6_Detection(ck)));
  v_173 = (v_171 & v_172);
  s_St_6_Detection = if v_173 then St_6_Idle else St_6_Detection;
  r_St_6_Detection = if v_173 then true else (pnr when St_6_Detection(ck));
  v_174 =
    ((detectionDepassementLigne when St_6_Idle(ck)) or
     (detectionVolantLibre when St_6_Idle(ck)));
  v_175 = (v_174 or (detectionDefaillanceTechnique when St_6_Idle(ck)));
  v_176 = (v_175 or (detectionVehiculeAngleMort when St_6_Idle(ck)));
  s_St_6_Idle = if v_176 then St_6_Detection else St_6_Idle;
  r_St_6_Idle = if v_176 then true else (pnr when St_6_Idle(ck));
  ck = St_6_Idle fby ns;
  nr =
    merge ck_7
      (St_6_Detection -> nr_St_6_Detection)(St_6_Idle -> nr_St_6_Idle);
  ns =
    merge ck_7
      (St_6_Detection -> ns_St_6_Detection)(St_6_Idle -> ns_St_6_Idle);
  dangerAngleMort =
    merge ck_7
      (St_6_Detection -> dangerAngleMort_St_6_Detection)
      (St_6_Idle -> dangerAngleMort_St_6_Idle);
  defaillanceTechnique =
    merge ck_7
      (St_6_Detection -> defaillanceTechnique_St_6_Detection)
      (St_6_Idle -> defaillanceTechnique_St_6_Idle);
  volantLibre =
    merge ck_7
      (St_6_Detection -> volantLibre_St_6_Detection)
      (St_6_Idle -> volantLibre_St_6_Idle);
  depassementLigne =
    merge ck_7
      (St_6_Detection -> depassementLigne_St_6_Detection)
      (St_6_Idle -> depassementLigne_St_6_Idle);
  ns_St_6_Detection = St_6_Detection;
  nr_St_6_Detection = false;
  depassementLigne_St_6_Detection =
    (detectionDepassementLigne when St_6_Detection(ck_7));
  volantLibre_St_6_Detection =
    (detectionVolantLibre when St_6_Detection(ck_7));
  defaillanceTechnique_St_6_Detection =
    (detectionDefaillanceTechnique when St_6_Detection(ck_7));
  dangerAngleMort_St_6_Detection =
    (detectionVehiculeAngleMort when St_6_Detection(ck_7));
  ns_St_6_Idle = St_6_Idle;
  nr_St_6_Idle = false;
  depassementLigne_St_6_Idle = false;
  volantLibre_St_6_Idle = false;
  defaillanceTechnique_St_6_Idle = false;
  dangerAngleMort_St_6_Idle = false;
  ck_7 = s;
  pnr = false fby nr
tel

node securite(presencePieton : bool; presencevehicule : bool; feu : couleur)
returns (frein : bool; causeFreinage : cause)
var v_186 : bool; v_185 : st_7; v_184 : bool; v_183 : st_7; v_182 : bool;
    v_181 : bool; v_180 : bool; v_179 : bool; v_178 : bool; v_177 : bool;
    v : bool; v_201 : bool; v_200 : st_7; v_199 : bool; v_198 : st_7;
    v_197 : bool; v_196 : bool; v_195 : bool; v_194 : bool; v_193 : bool;
    v_192 : bool; v_191 : bool; v_190 : bool; v_189 : bool; v_188 : bool;
    v_187 : bool; v_218 : bool; v_217 : st_7; v_216 : bool; v_215 : st_7;
    v_214 : bool; v_213 : bool; v_212 : bool; v_211 : bool; v_210 : bool;
    v_209 : bool; v_208 : bool; v_207 : bool; v_206 : bool; v_205 : bool;
    v_204 : bool; v_203 : bool; v_202 : bool; v_230 : bool; v_229 : st_7;
    v_228 : bool; v_227 : st_7; v_226 : bool; v_225 : bool; v_224 : bool;
    v_223 : bool; v_222 : bool; v_221 : bool; v_220 : bool; v_219 : bool;
    r_St_7_Feu : bool; s_St_7_Feu : st_7; r_St_7_Vehicule : bool;
    s_St_7_Vehicule : st_7; r_St_7_Pieton : bool; s_St_7_Pieton : st_7;
    r_St_7_Acceleration : bool; s_St_7_Acceleration : st_7; ck : st_7;
    nr_St_7_Feu : bool; ns_St_7_Feu : st_7; causeFreinage_St_7_Feu : cause;
    frein_St_7_Feu : bool; nr_St_7_Vehicule : bool; ns_St_7_Vehicule : st_7;
    causeFreinage_St_7_Vehicule : cause; frein_St_7_Vehicule : bool;
    nr_St_7_Pieton : bool; ns_St_7_Pieton : st_7;
    causeFreinage_St_7_Pieton : cause; frein_St_7_Pieton : bool;
    nr_St_7_Acceleration : bool; ns_St_7_Acceleration : st_7;
    causeFreinage_St_7_Acceleration : cause; frein_St_7_Acceleration : bool;
    ck_8 : st_7; s : st_7; ns : st_7; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_7_Feu -> r_St_7_Feu)(St_7_Vehicule -> r_St_7_Vehicule)
      (St_7_Pieton -> r_St_7_Pieton)
      (St_7_Acceleration -> r_St_7_Acceleration);
  s =
    merge ck
      (St_7_Feu -> s_St_7_Feu)(St_7_Vehicule -> s_St_7_Vehicule)
      (St_7_Pieton -> s_St_7_Pieton)
      (St_7_Acceleration -> s_St_7_Acceleration);
  v = not((presencePieton when St_7_Feu(ck)));
  v_177 = not((presencevehicule when St_7_Feu(ck)));
  v_178 = (v & v_177);
  v_179 = ((feu when St_7_Feu(ck)) = Vert);
  v_180 = (v_178 & v_179);
  v_181 = not((presencePieton when St_7_Feu(ck)));
  v_182 = (v_181 & (presencevehicule when St_7_Feu(ck)));
  v_183 = if v_182 then St_7_Vehicule else St_7_Feu;
  v_184 = if v_182 then true else (pnr when St_7_Feu(ck));
  v_185 = if (presencePieton when St_7_Feu(ck)) then St_7_Pieton else v_183;
  v_186 = if (presencePieton when St_7_Feu(ck)) then true else v_184;
  s_St_7_Feu = if v_180 then St_7_Acceleration else v_185;
  r_St_7_Feu = if v_180 then true else v_186;
  v_187 = not((presencePieton when St_7_Vehicule(ck)));
  v_188 = not((presencevehicule when St_7_Vehicule(ck)));
  v_189 = (v_187 & v_188);
  v_190 = ((feu when St_7_Vehicule(ck)) = Vert);
  v_191 = (v_189 & v_190);
  v_192 = not((presencePieton when St_7_Vehicule(ck)));
  v_193 = not((presencevehicule when St_7_Vehicule(ck)));
  v_194 = (v_192 & v_193);
  v_195 = ((feu when St_7_Vehicule(ck)) = Vert);
  v_196 = not(v_195);
  v_197 = (v_194 & v_196);
  v_198 = if v_197 then St_7_Feu else St_7_Vehicule;
  v_199 = if v_197 then true else (pnr when St_7_Vehicule(ck));
  v_200 =
    if (presencePieton when St_7_Vehicule(ck)) then St_7_Pieton else v_198;
  v_201 = if (presencePieton when St_7_Vehicule(ck)) then true else v_199;
  s_St_7_Vehicule = if v_191 then St_7_Acceleration else v_200;
  r_St_7_Vehicule = if v_191 then true else v_201;
  v_202 = not((presencePieton when St_7_Pieton(ck)));
  v_203 = not((presencevehicule when St_7_Pieton(ck)));
  v_204 = (v_202 & v_203);
  v_205 = ((feu when St_7_Pieton(ck)) = Vert);
  v_206 = (v_204 & v_205);
  v_207 = not((presencePieton when St_7_Pieton(ck)));
  v_208 = (v_207 & (presencevehicule when St_7_Pieton(ck)));
  v_209 = not((presencePieton when St_7_Pieton(ck)));
  v_210 = not((presencevehicule when St_7_Pieton(ck)));
  v_211 = (v_209 & v_210);
  v_212 = ((feu when St_7_Pieton(ck)) = Vert);
  v_213 = not(v_212);
  v_214 = (v_211 & v_213);
  v_215 = if v_214 then St_7_Feu else St_7_Pieton;
  v_216 = if v_214 then true else (pnr when St_7_Pieton(ck));
  v_217 = if v_208 then St_7_Vehicule else v_215;
  v_218 = if v_208 then true else v_216;
  s_St_7_Pieton = if v_206 then St_7_Acceleration else v_217;
  r_St_7_Pieton = if v_206 then true else v_218;
  v_219 = not((presencePieton when St_7_Acceleration(ck)));
  v_220 = (v_219 & (presencevehicule when St_7_Acceleration(ck)));
  v_221 = not((presencePieton when St_7_Acceleration(ck)));
  v_222 = not((presencevehicule when St_7_Acceleration(ck)));
  v_223 = (v_221 & v_222);
  v_224 = ((feu when St_7_Acceleration(ck)) = Vert);
  v_225 = not(v_224);
  v_226 = (v_223 & v_225);
  v_227 = if v_226 then St_7_Feu else St_7_Acceleration;
  v_228 = if v_226 then true else (pnr when St_7_Acceleration(ck));
  v_229 = if v_220 then St_7_Vehicule else v_227;
  v_230 = if v_220 then true else v_228;
  s_St_7_Acceleration =
    if (presencePieton when St_7_Acceleration(ck))
    then St_7_Pieton
    else v_229;
  r_St_7_Acceleration =
    if (presencePieton when St_7_Acceleration(ck)) then true else v_230;
  ck = St_7_Acceleration fby ns;
  nr =
    merge ck_8
      (St_7_Feu -> nr_St_7_Feu)(St_7_Vehicule -> nr_St_7_Vehicule)
      (St_7_Pieton -> nr_St_7_Pieton)
      (St_7_Acceleration -> nr_St_7_Acceleration);
  ns =
    merge ck_8
      (St_7_Feu -> ns_St_7_Feu)(St_7_Vehicule -> ns_St_7_Vehicule)
      (St_7_Pieton -> ns_St_7_Pieton)
      (St_7_Acceleration -> ns_St_7_Acceleration);
  causeFreinage =
    merge ck_8
      (St_7_Feu -> causeFreinage_St_7_Feu)
      (St_7_Vehicule -> causeFreinage_St_7_Vehicule)
      (St_7_Pieton -> causeFreinage_St_7_Pieton)
      (St_7_Acceleration -> causeFreinage_St_7_Acceleration);
  frein =
    merge ck_8
      (St_7_Feu -> frein_St_7_Feu)(St_7_Vehicule -> frein_St_7_Vehicule)
      (St_7_Pieton -> frein_St_7_Pieton)
      (St_7_Acceleration -> frein_St_7_Acceleration);
  ns_St_7_Feu = St_7_Feu;
  nr_St_7_Feu = false;
  causeFreinage_St_7_Feu = Feu;
  frein_St_7_Feu = true;
  ns_St_7_Vehicule = St_7_Vehicule;
  nr_St_7_Vehicule = false;
  causeFreinage_St_7_Vehicule = Presencevehicule;
  frein_St_7_Vehicule = true;
  ns_St_7_Pieton = St_7_Pieton;
  nr_St_7_Pieton = false;
  causeFreinage_St_7_Pieton = PresencePieton;
  frein_St_7_Pieton = true;
  ns_St_7_Acceleration = St_7_Acceleration;
  nr_St_7_Acceleration = false;
  causeFreinage_St_7_Acceleration = None;
  frein_St_7_Acceleration = false;
  ck_8 = s;
  pnr = false fby nr
tel

node temperature(deactivated : bool; capteur : float)
returns (qt : float; etat : bool)
var v : bool; r_St_8_Desactive : bool; s_St_8_Desactive : st_8;
    r_St_8_Active : bool; s_St_8_Active : st_8; ck : st_8;
    nr_St_8_Desactive : bool; ns_St_8_Desactive : st_8;
    etat_St_8_Desactive : bool; qt_St_8_Desactive : float;
    nr_St_8_Active : bool; ns_St_8_Active : st_8; etat_St_8_Active : bool;
    qt_St_8_Active : float; ck_9 : st_8; s : st_8; ns : st_8; r : bool;
    nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_8_Desactive -> r_St_8_Desactive)(St_8_Active -> r_St_8_Active);
  s =
    merge ck
      (St_8_Desactive -> s_St_8_Desactive)(St_8_Active -> s_St_8_Active);
  v = not((deactivated when St_8_Desactive(ck)));
  s_St_8_Desactive = if v then St_8_Active else St_8_Desactive;
  r_St_8_Desactive = if v then true else (pnr when St_8_Desactive(ck));
  s_St_8_Active =
    if (deactivated when St_8_Active(ck))
    then St_8_Desactive
    else St_8_Active;
  r_St_8_Active =
    if (deactivated when St_8_Active(ck))
    then true
    else (pnr when St_8_Active(ck));
  ck = St_8_Active fby ns;
  nr =
    merge ck_9
      (St_8_Desactive -> nr_St_8_Desactive)(St_8_Active -> nr_St_8_Active);
  ns =
    merge ck_9
      (St_8_Desactive -> ns_St_8_Desactive)(St_8_Active -> ns_St_8_Active);
  etat =
    merge ck_9
      (St_8_Desactive -> etat_St_8_Desactive)
      (St_8_Active -> etat_St_8_Active);
  qt =
    merge ck_9
      (St_8_Desactive -> qt_St_8_Desactive)(St_8_Active -> qt_St_8_Active);
  ns_St_8_Desactive = St_8_Desactive;
  nr_St_8_Desactive = false;
  qt_St_8_Desactive = 0.000000;
  etat_St_8_Desactive = false;
  ns_St_8_Active = St_8_Active;
  nr_St_8_Active = false;
  qt_St_8_Active = (19.000000 -. (capteur when St_8_Active(ck_9)));
  etat_St_8_Active = true;
  ck_9 = s;
  pnr = false fby nr
tel

node controleurPhares(tdn : bool; tin : bool; cpn : bool)
returns (codes : bool; phares : bool; veilleuses : bool; etat : etatPhares)
var v_231 : bool; v : st_9; v_233 : bool; v_232 : st_9; r_St_9_Phares : bool;
    s_St_9_Phares : st_9; r_St_9_Codes : bool; s_St_9_Codes : st_9;
    r_St_9_Veilleuses : bool; s_St_9_Veilleuses : st_9; r_St_9_Idle : bool;
    s_St_9_Idle : st_9; ck : st_9; nr_St_9_Phares : bool;
    ns_St_9_Phares : st_9; etat_St_9_Phares : etatPhares;
    veilleuses_St_9_Phares : bool; phares_St_9_Phares : bool;
    codes_St_9_Phares : bool; nr_St_9_Codes : bool; ns_St_9_Codes : st_9;
    etat_St_9_Codes : etatPhares; veilleuses_St_9_Codes : bool;
    phares_St_9_Codes : bool; codes_St_9_Codes : bool;
    nr_St_9_Veilleuses : bool; ns_St_9_Veilleuses : st_9;
    etat_St_9_Veilleuses : etatPhares; veilleuses_St_9_Veilleuses : bool;
    phares_St_9_Veilleuses : bool; codes_St_9_Veilleuses : bool;
    nr_St_9_Idle : bool; ns_St_9_Idle : st_9; etat_St_9_Idle : etatPhares;
    veilleuses_St_9_Idle : bool; phares_St_9_Idle : bool;
    codes_St_9_Idle : bool; ck_10 : st_9; s : st_9; ns : st_9; r : bool;
    nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_9_Phares -> r_St_9_Phares)(St_9_Codes -> r_St_9_Codes)
      (St_9_Veilleuses -> r_St_9_Veilleuses)(St_9_Idle -> r_St_9_Idle);
  s =
    merge ck
      (St_9_Phares -> s_St_9_Phares)(St_9_Codes -> s_St_9_Codes)
      (St_9_Veilleuses -> s_St_9_Veilleuses)(St_9_Idle -> s_St_9_Idle);
  s_St_9_Phares =
    if (cpn when St_9_Phares(ck)) then St_9_Codes else St_9_Phares;
  r_St_9_Phares =
    if (cpn when St_9_Phares(ck)) then true else (pnr when St_9_Phares(ck));
  v = if (cpn when St_9_Codes(ck)) then St_9_Phares else St_9_Codes;
  v_231 =
    if (cpn when St_9_Codes(ck)) then true else (pnr when St_9_Codes(ck));
  s_St_9_Codes = if (tin when St_9_Codes(ck)) then St_9_Veilleuses else v;
  r_St_9_Codes = if (tin when St_9_Codes(ck)) then true else v_231;
  v_232 =
    if (tdn when St_9_Veilleuses(ck)) then St_9_Codes else St_9_Veilleuses;
  v_233 =
    if (tdn when St_9_Veilleuses(ck))
    then true
    else (pnr when St_9_Veilleuses(ck));
  s_St_9_Veilleuses =
    if (tin when St_9_Veilleuses(ck)) then St_9_Idle else v_232;
  r_St_9_Veilleuses = if (tin when St_9_Veilleuses(ck)) then true else v_233;
  s_St_9_Idle =
    if (tdn when St_9_Idle(ck)) then St_9_Veilleuses else St_9_Idle;
  r_St_9_Idle =
    if (tdn when St_9_Idle(ck)) then true else (pnr when St_9_Idle(ck));
  ck = St_9_Idle fby ns;
  nr =
    merge ck_10
      (St_9_Phares -> nr_St_9_Phares)(St_9_Codes -> nr_St_9_Codes)
      (St_9_Veilleuses -> nr_St_9_Veilleuses)(St_9_Idle -> nr_St_9_Idle);
  ns =
    merge ck_10
      (St_9_Phares -> ns_St_9_Phares)(St_9_Codes -> ns_St_9_Codes)
      (St_9_Veilleuses -> ns_St_9_Veilleuses)(St_9_Idle -> ns_St_9_Idle);
  etat =
    merge ck_10
      (St_9_Phares -> etat_St_9_Phares)(St_9_Codes -> etat_St_9_Codes)
      (St_9_Veilleuses -> etat_St_9_Veilleuses)(St_9_Idle -> etat_St_9_Idle);
  veilleuses =
    merge ck_10
      (St_9_Phares -> veilleuses_St_9_Phares)
      (St_9_Codes -> veilleuses_St_9_Codes)
      (St_9_Veilleuses -> veilleuses_St_9_Veilleuses)
      (St_9_Idle -> veilleuses_St_9_Idle);
  phares =
    merge ck_10
      (St_9_Phares -> phares_St_9_Phares)(St_9_Codes -> phares_St_9_Codes)
      (St_9_Veilleuses -> phares_St_9_Veilleuses)
      (St_9_Idle -> phares_St_9_Idle);
  codes =
    merge ck_10
      (St_9_Phares -> codes_St_9_Phares)(St_9_Codes -> codes_St_9_Codes)
      (St_9_Veilleuses -> codes_St_9_Veilleuses)
      (St_9_Idle -> codes_St_9_Idle);
  ns_St_9_Phares = St_9_Phares;
  nr_St_9_Phares = false;
  codes_St_9_Phares = false;
  phares_St_9_Phares = true;
  veilleuses_St_9_Phares = false;
  etat_St_9_Phares = Phares;
  ns_St_9_Codes = St_9_Codes;
  nr_St_9_Codes = false;
  codes_St_9_Codes = true;
  phares_St_9_Codes = false;
  veilleuses_St_9_Codes = false;
  etat_St_9_Codes = Codes;
  ns_St_9_Veilleuses = St_9_Veilleuses;
  nr_St_9_Veilleuses = false;
  codes_St_9_Veilleuses = false;
  phares_St_9_Veilleuses = false;
  veilleuses_St_9_Veilleuses = true;
  etat_St_9_Veilleuses = Veilleuses;
  ns_St_9_Idle = St_9_Idle;
  nr_St_9_Idle = false;
  codes_St_9_Idle = false;
  phares_St_9_Idle = false;
  veilleuses_St_9_Idle = false;
  etat_St_9_Idle = Idle;
  ck_10 = s;
  pnr = false fby nr
tel

node automobile(cleVoiture : bool; commandeVoiture : bool;
                 capteurPluie : bool; detectionAccident : bool;
                 detectionLigne : bool; detectionVolantLibre : bool;
                 detectionDefaillanceTechnique : bool;
                 detectionAngleMort : bool; detectionPresencePieton : bool;
                 detectionPresencevehicule : bool;
                 desactiveRegulateurTemperature : bool; lumiere : lum;
                 densitePluie : lum; capteurTemperature : float;
                 capteurDectecteurFeu : couleur)
returns (moteur : bool; avance : bool; retroviseurActive : bool;
          etatRegulateurTemperature : bool; accident : bool; ligne : bool;
          volantLibre : bool; defaillanceTechnique : bool; angleMort : bool;
          freinage : bool; property : bool; causeFreinage : cause;
          vitesses : numero; quantiteRegule : float; phares : etatPhares;
          retroviseurStatus : retro; essuieGlace : typeBalayage)
contract
  
  assume true@ enforce property]
                 with (con : bool; cclose : bool; td : bool; ti : bool;
                        cp : bool; frein : bool; accelerateur : bool;
                        normal : bool; jour : bool; nuit : bool;
                        boiteDeVitesse : numero)
                 var v_245 : bool; v_248 : bool; v_247 : bool; v_246 : bool;
                     r_9_St_19_Eteint : bool; s_9_St_19_Eteint : st_19;
                     r_9_St_19_Allumer : bool; s_9_St_19_Allumer : st_19;
                     ck : st_19; nr_9_St_19_Eteint : bool;
                     ns_9_St_19_Eteint : st_19; etat_St_19_Eteint : bool;
                     nr_9_St_19_Allumer : bool; ns_9_St_19_Allumer : st_19;
                     etat_St_19_Allumer : bool; ck_11 : st_19; v_264 : bool;
                     v_263 : st_18; v_262 : bool; v_261 : st_18;
                     v_260 : bool; v_259 : st_18; v_258 : bool;
                     v_257 : st_18; v_256 : bool; v_255 : st_18;
                     v_254 : bool; v_253 : bool; v_252 : bool; v_251 : bool;
                     v_250 : bool; v_249 : bool; v_280 : bool; v_279 : st_18;
                     v_278 : bool; v_277 : st_18; v_276 : bool;
                     v_275 : st_18; v_274 : bool; v_273 : st_18;
                     v_272 : bool; v_271 : st_18; v_270 : bool; v_269 : bool;
                     v_268 : bool; v_267 : bool; v_266 : bool; v_265 : bool;
                     v_296 : bool; v_295 : st_18; v_294 : bool;
                     v_293 : st_18; v_292 : bool; v_291 : st_18;
                     v_290 : bool; v_289 : st_18; v_288 : bool;
                     v_287 : st_18; v_286 : bool; v_285 : bool; v_284 : bool;
                     v_283 : bool; v_282 : bool; v_281 : bool; v_312 : bool;
                     v_311 : st_18; v_310 : bool; v_309 : st_18;
                     v_308 : bool; v_307 : st_18; v_306 : bool;
                     v_305 : st_18; v_304 : bool; v_303 : st_18;
                     v_302 : bool; v_301 : bool; v_300 : bool; v_299 : bool;
                     v_298 : bool; v_297 : bool; v_328 : bool; v_327 : st_18;
                     v_326 : bool; v_325 : st_18; v_324 : bool;
                     v_323 : st_18; v_322 : bool; v_321 : st_18;
                     v_320 : bool; v_319 : st_18; v_318 : bool; v_317 : bool;
                     v_316 : bool; v_315 : bool; v_314 : bool; v_313 : bool;
                     v_344 : bool; v_343 : st_18; v_342 : bool;
                     v_341 : st_18; v_340 : bool; v_339 : st_18;
                     v_338 : bool; v_337 : st_18; v_336 : bool;
                     v_335 : st_18; v_334 : bool; v_333 : bool; v_332 : bool;
                     v_331 : bool; v_330 : bool; v_329 : bool; v_360 : bool;
                     v_359 : st_18; v_358 : bool; v_357 : st_18;
                     v_356 : bool; v_355 : st_18; v_354 : bool;
                     v_353 : st_18; v_352 : bool; v_351 : st_18;
                     v_350 : bool; v_349 : bool; v_348 : bool; v_347 : bool;
                     v_346 : bool; v_345 : bool; r_8_St_18_Arriere : bool;
                     s_8_St_18_Arriere : st_18; r_8_St_18_Cinquieme : bool;
                     s_8_St_18_Cinquieme : st_18; r_8_St_18_Quatrieme : bool;
                     s_8_St_18_Quatrieme : st_18; r_8_St_18_Troisieme : bool;
                     s_8_St_18_Troisieme : st_18; r_8_St_18_Deuxieme : bool;
                     s_8_St_18_Deuxieme : st_18; r_8_St_18_Premier : bool;
                     s_8_St_18_Premier : st_18; r_8_St_18_Zero : bool;
                     s_8_St_18_Zero : st_18; ck_12 : st_18;
                     nr_8_St_18_Arriere : bool; ns_8_St_18_Arriere : st_18;
                     num_St_18_Arriere : numero; nr_8_St_18_Cinquieme : bool;
                     ns_8_St_18_Cinquieme : st_18;
                     num_St_18_Cinquieme : numero;
                     nr_8_St_18_Quatrieme : bool;
                     ns_8_St_18_Quatrieme : st_18;
                     num_St_18_Quatrieme : numero;
                     nr_8_St_18_Troisieme : bool;
                     ns_8_St_18_Troisieme : st_18;
                     num_St_18_Troisieme : numero;
                     nr_8_St_18_Deuxieme : bool; ns_8_St_18_Deuxieme : st_18;
                     num_St_18_Deuxieme : numero; nr_8_St_18_Premier : bool;
                     ns_8_St_18_Premier : st_18; num_St_18_Premier : numero;
                     nr_8_St_18_Zero : bool; ns_8_St_18_Zero : st_18;
                     num_St_18_Zero : numero; ck_13 : st_18;
                     r_7_St_17_Stop : bool; s_7_St_17_Stop : st_17;
                     r_7_St_17_Move : bool; s_7_St_17_Move : st_17;
                     ck_14 : st_17; nr_7_St_17_Stop : bool;
                     ns_7_St_17_Stop : st_17; avance_1_St_17_Stop : bool;
                     nr_7_St_17_Move : bool; ns_7_St_17_Move : st_17;
                     avance_1_St_17_Move : bool; ck_15 : st_17; v_369 : bool;
                     v_368 : st_16; v_367 : bool; v_366 : st_16;
                     v_365 : bool; v_364 : bool; v_363 : bool; v_362 : bool;
                     v_361 : bool; v_378 : bool; v_377 : st_16; v_376 : bool;
                     v_375 : st_16; v_374 : bool; v_373 : bool; v_372 : bool;
                     v_371 : bool; v_370 : bool; v_387 : bool; v_386 : st_16;
                     v_385 : bool; v_384 : st_16; v_383 : bool; v_382 : bool;
                     v_381 : bool; v_380 : bool; v_379 : bool; v_391 : bool;
                     v_390 : st_16; v_389 : bool; v_388 : st_16;
                     r_6_St_16_PositionNuit : bool;
                     s_6_St_16_PositionNuit : st_16;
                     r_6_St_16_PositionJour : bool;
                     s_6_St_16_PositionJour : st_16;
                     r_6_St_16_PositionNormale : bool;
                     s_6_St_16_PositionNormale : st_16;
                     r_6_St_16_Desacitve : bool; s_6_St_16_Desacitve : st_16;
                     ck_16 : st_16; nr_6_St_16_PositionNuit : bool;
                     ns_6_St_16_PositionNuit : st_16;
                     sortie_St_16_PositionNuit : retro;
                     gerer_St_16_PositionNuit : bool;
                     nr_6_St_16_PositionJour : bool;
                     ns_6_St_16_PositionJour : st_16;
                     sortie_St_16_PositionJour : retro;
                     gerer_St_16_PositionJour : bool;
                     nr_6_St_16_PositionNormale : bool;
                     ns_6_St_16_PositionNormale : st_16;
                     sortie_St_16_PositionNormale : retro;
                     gerer_St_16_PositionNormale : bool;
                     nr_6_St_16_Desacitve : bool;
                     ns_6_St_16_Desacitve : st_16;
                     sortie_St_16_Desacitve : retro;
                     gerer_St_16_Desacitve : bool; ck_17 : st_16;
                     v_399 : bool; v_398 : st_15; v_397 : bool;
                     v_396 : st_15; v_395 : bool; v_394 : bool; v_393 : bool;
                     v_392 : bool; v_407 : bool; v_406 : st_15; v_405 : bool;
                     v_404 : st_15; v_403 : bool; v_402 : bool; v_401 : bool;
                     v_400 : bool; v_415 : bool; v_414 : st_15; v_413 : bool;
                     v_412 : st_15; v_411 : bool; v_410 : bool; v_409 : bool;
                     v_408 : bool; r_5_St_15_BalayageContiu : bool;
                     s_5_St_15_BalayageContiu : st_15;
                     r_5_St_15_BalayageIntermittent : bool;
                     s_5_St_15_BalayageIntermittent : st_15;
                     r_5_St_15_BalayageUnique : bool;
                     s_5_St_15_BalayageUnique : st_15;
                     r_5_St_15_Desactive : bool; s_5_St_15_Desactive : st_15;
                     ck_18 : st_15; nr_5_St_15_BalayageContiu : bool;
                     ns_5_St_15_BalayageContiu : st_15;
                     etat_1_St_15_BalayageContiu : typeBalayage;
                     nr_5_St_15_BalayageIntermittent : bool;
                     ns_5_St_15_BalayageIntermittent : st_15;
                     etat_1_St_15_BalayageIntermittent : typeBalayage;
                     nr_5_St_15_BalayageUnique : bool;
                     ns_5_St_15_BalayageUnique : st_15;
                     etat_1_St_15_BalayageUnique : typeBalayage;
                     nr_5_St_15_Desactive : bool;
                     ns_5_St_15_Desactive : st_15;
                     etat_1_St_15_Desactive : typeBalayage; ck_19 : st_15;
                     v_416 : bool; r_4_St_14_Active : bool;
                     s_4_St_14_Active : st_14; r_4_St_14_Desactive : bool;
                     s_4_St_14_Desactive : st_14; ck_20 : st_14;
                     nr_4_St_14_Active : bool; ns_4_St_14_Active : st_14;
                     emissionAppelUrgence_St_14_Active : bool;
                     airbag_St_14_Active : bool; nr_4_St_14_Desactive : bool;
                     ns_4_St_14_Desactive : st_14;
                     emissionAppelUrgence_St_14_Desactive : bool;
                     airbag_St_14_Desactive : bool; ck_21 : st_14;
                     v_423 : bool; v_422 : bool; v_421 : bool; v_420 : bool;
                     v_419 : bool; v_418 : bool; v_417 : bool; v_426 : bool;
                     v_425 : bool; v_424 : bool; r_3_St_13_Detection : bool;
                     s_3_St_13_Detection : st_13; r_3_St_13_Idle : bool;
                     s_3_St_13_Idle : st_13; ck_22 : st_13;
                     nr_3_St_13_Detection : bool;
                     ns_3_St_13_Detection : st_13;
                     dangerAngleMort_St_13_Detection : bool;
                     defaillanceTechnique_1_St_13_Detection : bool;
                     volantLibre_1_St_13_Detection : bool;
                     depassementLigne_St_13_Detection : bool;
                     nr_3_St_13_Idle : bool; ns_3_St_13_Idle : st_13;
                     dangerAngleMort_St_13_Idle : bool;
                     defaillanceTechnique_1_St_13_Idle : bool;
                     volantLibre_1_St_13_Idle : bool;
                     depassementLigne_St_13_Idle : bool; ck_23 : st_13;
                     v_437 : bool; v_436 : st_12; v_435 : bool;
                     v_434 : st_12; v_433 : bool; v_432 : bool; v_431 : bool;
                     v_430 : bool; v_429 : bool; v_428 : bool; v_427 : bool;
                     v_452 : bool; v_451 : st_12; v_450 : bool;
                     v_449 : st_12; v_448 : bool; v_447 : bool; v_446 : bool;
                     v_445 : bool; v_444 : bool; v_443 : bool; v_442 : bool;
                     v_441 : bool; v_440 : bool; v_439 : bool; v_438 : bool;
                     v_469 : bool; v_468 : st_12; v_467 : bool;
                     v_466 : st_12; v_465 : bool; v_464 : bool; v_463 : bool;
                     v_462 : bool; v_461 : bool; v_460 : bool; v_459 : bool;
                     v_458 : bool; v_457 : bool; v_456 : bool; v_455 : bool;
                     v_454 : bool; v_453 : bool; v_481 : bool; v_480 : st_12;
                     v_479 : bool; v_478 : st_12; v_477 : bool; v_476 : bool;
                     v_475 : bool; v_474 : bool; v_473 : bool; v_472 : bool;
                     v_471 : bool; v_470 : bool; r_2_St_12_Feu : bool;
                     s_2_St_12_Feu : st_12; r_2_St_12_Vehicule : bool;
                     s_2_St_12_Vehicule : st_12; r_2_St_12_Pieton : bool;
                     s_2_St_12_Pieton : st_12; r_2_St_12_Acceleration : bool;
                     s_2_St_12_Acceleration : st_12; ck_24 : st_12;
                     nr_2_St_12_Feu : bool; ns_2_St_12_Feu : st_12;
                     causeFreinage_1_St_12_Feu : cause;
                     frein_2_St_12_Feu : bool; nr_2_St_12_Vehicule : bool;
                     ns_2_St_12_Vehicule : st_12;
                     causeFreinage_1_St_12_Vehicule : cause;
                     frein_2_St_12_Vehicule : bool; nr_2_St_12_Pieton : bool;
                     ns_2_St_12_Pieton : st_12;
                     causeFreinage_1_St_12_Pieton : cause;
                     frein_2_St_12_Pieton : bool;
                     nr_2_St_12_Acceleration : bool;
                     ns_2_St_12_Acceleration : st_12;
                     causeFreinage_1_St_12_Acceleration : cause;
                     frein_2_St_12_Acceleration : bool; ck_25 : st_12;
                     v_482 : bool; r_1_St_11_Desactive : bool;
                     s_1_St_11_Desactive : st_11; r_1_St_11_Active : bool;
                     s_1_St_11_Active : st_11; ck_26 : st_11;
                     nr_1_St_11_Desactive : bool;
                     ns_1_St_11_Desactive : st_11;
                     etat_2_St_11_Desactive : bool;
                     qt_St_11_Desactive : float; nr_1_St_11_Active : bool;
                     ns_1_St_11_Active : st_11; etat_2_St_11_Active : bool;
                     qt_St_11_Active : float; ck_27 : st_11; v_484 : bool;
                     v_483 : st_10; v_486 : bool; v_485 : st_10;
                     r_St_10_Phares : bool; s_St_10_Phares : st_10;
                     r_St_10_Codes : bool; s_St_10_Codes : st_10;
                     r_St_10_Veilleuses : bool; s_St_10_Veilleuses : st_10;
                     r_St_10_Idle : bool; s_St_10_Idle : st_10;
                     ck_28 : st_10; nr_St_10_Phares : bool;
                     ns_St_10_Phares : st_10;
                     etat_3_St_10_Phares : etatPhares;
                     veilleuses_St_10_Phares : bool;
                     phares_1_St_10_Phares : bool; codes_St_10_Phares : bool;
                     nr_St_10_Codes : bool; ns_St_10_Codes : st_10;
                     etat_3_St_10_Codes : etatPhares;
                     veilleuses_St_10_Codes : bool;
                     phares_1_St_10_Codes : bool; codes_St_10_Codes : bool;
                     nr_St_10_Veilleuses : bool; ns_St_10_Veilleuses : st_10;
                     etat_3_St_10_Veilleuses : etatPhares;
                     veilleuses_St_10_Veilleuses : bool;
                     phares_1_St_10_Veilleuses : bool;
                     codes_St_10_Veilleuses : bool; nr_St_10_Idle : bool;
                     ns_St_10_Idle : st_10; etat_3_St_10_Idle : etatPhares;
                     veilleuses_St_10_Idle : bool;
                     phares_1_St_10_Idle : bool; codes_St_10_Idle : bool;
                     ck_29 : st_10; v_244 : bool; v_243 : bool; v_242 : bool;
                     v_241 : bool; v_240 : bool; v_239 : bool; v_238 : bool;
                     v_237 : bool; v_236 : bool; v_235 : bool; v_234 : bool;
                     v : bool; s_9 : st_19; ns_9 : st_19; r_9 : bool;
                     nr_9 : bool; pnr_9 : bool; s_8 : st_18; ns_8 : st_18;
                     r_8 : bool; nr_8 : bool; pnr_8 : bool; s_7 : st_17;
                     ns_7 : st_17; r_7 : bool; nr_7 : bool; pnr_7 : bool;
                     s_6 : st_16; ns_6 : st_16; r_6 : bool; nr_6 : bool;
                     pnr_6 : bool; s_5 : st_15; ns_5 : st_15; r_5 : bool;
                     nr_5 : bool; pnr_5 : bool; s_4 : st_14; ns_4 : st_14;
                     r_4 : bool; nr_4 : bool; pnr_4 : bool; s_3 : st_13;
                     ns_3 : st_13; r_3 : bool; nr_3 : bool; pnr_3 : bool;
                     s_2 : st_12; ns_2 : st_12; r_2 : bool; nr_2 : bool;
                     pnr_2 : bool; s_1 : st_11; ns_1 : st_11; r_1 : bool;
                     nr_1 : bool; pnr_1 : bool; s : st_10; ns : st_10;
                     r : bool; nr : bool; pnr : bool; tdn : bool; tin : bool;
                     cpn : bool; codes : bool; phares_1 : bool;
                     veilleuses : bool; etat_3 : etatPhares;
                     deactivated : bool; capteur : float; qt : float;
                     etat_2 : bool; presencePieton : bool;
                     presencevehicule : bool; feu : couleur; frein_2 : bool;
                     causeFreinage_1 : cause;
                     detectionDepassementLigne : bool;
                     detectionVolantLibre_1 : bool;
                     detectionDefaillanceTechnique_1 : bool;
                     detectionVehiculeAngleMort : bool;
                     depassementLigne : bool; volantLibre_1 : bool;
                     defaillanceTechnique_1 : bool; dangerAngleMort : bool;
                     detectionAccident_1 : bool; airbag : bool;
                     emissionAppelUrgence : bool; con_1 : bool;
                     cclose_1 : bool; densite : lum; etat_1 : typeBalayage;
                     normal_1 : bool; jour_1 : bool; nuit_1 : bool;
                     gerer : bool; sortie : retro; frein_1 : bool;
                     accelerateur_1 : bool; avance_1 : bool;
                     boiteDeVitesse_1 : numero; num : numero;
                     commande : bool; cle : bool; etat : bool;
                     lmoteur : bool; lretroviseur : bool; lavance : bool;
                     lairbag : bool; lemissionAppelUrgence : bool;
                     lLigne : bool; lvolantLibre : bool;
                     ldefaillanceTechnique : bool; langleMort : bool;
                     lfrein : bool; letatRegulateurTemperature : bool;
                     lcodes : bool; lphares : bool; lveilleuses : bool;
                     prop1 : bool; prop2 : bool; prop3 : bool; prop4 : bool;
                     prop5 : bool; prop6 : bool; prop7 : bool; prop8 : bool;
                     prop9 : bool; prop10 : bool; prop11 : bool;
                     lessuieGlace : typeBalayage; lnumero : numero;
                     lqt : float; lcause : cause; lstate : etatPhares;
                     lsortie : retro;
  let
    phares = lstate;
    quantiteRegule = lqt;
    vitesses = lnumero;
    causeFreinage = lcause;
    freinage = lfrein;
    angleMort = langleMort;
    defaillanceTechnique = ldefaillanceTechnique;
    volantLibre = lvolantLibre;
    ligne = lLigne;
    accident = (lairbag or lemissionAppelUrgence);
    essuieGlace = lessuieGlace;
    etatRegulateurTemperature = letatRegulateurTemperature;
    retroviseurStatus = lsortie;
    retroviseurActive = lretroviseur;
    avance = lavance;
    moteur = lmoteur;
    v = (prop8 & prop9);
    v_234 = (v & prop10);
    property = (v_234 & prop11);
    prop11 = true;
    v_235 = not(lveilleuses);
    prop10 = (lmoteur or v_235);
    v_236 = not(lphares);
    prop9 = (lmoteur or v_236);
    v_237 = not(lcodes);
    prop8 = (lmoteur or v_237);
    v_238 = not(langleMort);
    prop7 = (lmoteur or v_238);
    v_239 = not(ldefaillanceTechnique);
    prop6 = (lmoteur or v_239);
    v_240 = not(lvolantLibre);
    prop5 = (lmoteur or v_240);
    v_241 = not(lLigne);
    prop4 = (lmoteur or v_241);
    v_242 = (lessuieGlace = Deactivated);
    prop3 = (lmoteur or v_242);
    v_243 = not(lretroviseur);
    prop2 = (lmoteur or v_243);
    v_244 = (lnumero = PointMort);
    prop1 = (lmoteur or v_244);
    lcodes = codes;
    lphares = phares_1;
    lveilleuses = veilleuses;
    lstate = etat_3;
    lqt = qt;
    letatRegulateurTemperature = etat_2;
    lfrein = frein_2;
    lcause = causeFreinage_1;
    lLigne = depassementLigne;
    lvolantLibre = volantLibre_1;
    ldefaillanceTechnique = defaillanceTechnique_1;
    langleMort = dangerAngleMort;
    lairbag = airbag;
    lemissionAppelUrgence = emissionAppelUrgence;
    lessuieGlace = etat_1;
    lretroviseur = gerer;
    lsortie = sortie;
    lavance = avance_1;
    lnumero = num;
    lmoteur = etat;
    r_9 =
      merge ck
        (St_19_Eteint -> r_9_St_19_Eteint)
        (St_19_Allumer -> r_9_St_19_Allumer);
    s_9 =
      merge ck
        (St_19_Eteint -> s_9_St_19_Eteint)
        (St_19_Allumer -> s_9_St_19_Allumer);
    v_245 = ((commande when St_19_Eteint(ck)) or (cle when St_19_Eteint(ck)));
    s_9_St_19_Eteint = if v_245 then St_19_Allumer else St_19_Eteint;
    r_9_St_19_Eteint = if v_245 then true else (pnr_9 when St_19_Eteint(ck));
    v_246 = not((commande when St_19_Allumer(ck)));
    v_247 = not((cle when St_19_Allumer(ck)));
    v_248 = (v_246 & v_247);
    s_9_St_19_Allumer = if v_248 then St_19_Eteint else St_19_Allumer;
    r_9_St_19_Allumer =
      if v_248 then true else (pnr_9 when St_19_Allumer(ck));
    ck = St_19_Allumer fby ns_9;
    nr_9 =
      merge ck_11
        (St_19_Eteint -> nr_9_St_19_Eteint)
        (St_19_Allumer -> nr_9_St_19_Allumer);
    ns_9 =
      merge ck_11
        (St_19_Eteint -> ns_9_St_19_Eteint)
        (St_19_Allumer -> ns_9_St_19_Allumer);
    etat =
      merge ck_11
        (St_19_Eteint -> etat_St_19_Eteint)
        (St_19_Allumer -> etat_St_19_Allumer);
    ns_9_St_19_Eteint = St_19_Eteint;
    nr_9_St_19_Eteint = false;
    etat_St_19_Eteint = false;
    ns_9_St_19_Allumer = St_19_Allumer;
    nr_9_St_19_Allumer = false;
    etat_St_19_Allumer = true;
    ck_11 = s_9;
    pnr_9 = false fby nr_9;
    cle = cleVoiture;
    commande = commandeVoiture;
    r_8 =
      merge ck_12
        (St_18_Arriere -> r_8_St_18_Arriere)
        (St_18_Cinquieme -> r_8_St_18_Cinquieme)
        (St_18_Quatrieme -> r_8_St_18_Quatrieme)
        (St_18_Troisieme -> r_8_St_18_Troisieme)
        (St_18_Deuxieme -> r_8_St_18_Deuxieme)
        (St_18_Premier -> r_8_St_18_Premier)(St_18_Zero -> r_8_St_18_Zero);
    s_8 =
      merge ck_12
        (St_18_Arriere -> s_8_St_18_Arriere)
        (St_18_Cinquieme -> s_8_St_18_Cinquieme)
        (St_18_Quatrieme -> s_8_St_18_Quatrieme)
        (St_18_Troisieme -> s_8_St_18_Troisieme)
        (St_18_Deuxieme -> s_8_St_18_Deuxieme)
        (St_18_Premier -> s_8_St_18_Premier)(St_18_Zero -> s_8_St_18_Zero);
    v_249 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Un);
    v_250 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Deux);
    v_251 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Quatre);
    v_252 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Trois);
    v_253 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Cinq);
    v_254 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = PointMort);
    v_255 = if v_254 then St_18_Zero else St_18_Arriere;
    v_256 = if v_254 then true else (pnr_8 when St_18_Arriere(ck_12));
    v_257 = if v_253 then St_18_Cinquieme else v_255;
    v_258 = if v_253 then true else v_256;
    v_259 = if v_252 then St_18_Troisieme else v_257;
    v_260 = if v_252 then true else v_258;
    v_261 = if v_251 then St_18_Troisieme else v_259;
    v_262 = if v_251 then true else v_260;
    v_263 = if v_250 then St_18_Deuxieme else v_261;
    v_264 = if v_250 then true else v_262;
    s_8_St_18_Arriere = if v_249 then St_18_Premier else v_263;
    r_8_St_18_Arriere = if v_249 then true else v_264;
    v_265 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Un);
    v_266 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Deux);
    v_267 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Quatre);
    v_268 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Trois);
    v_269 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Six);
    v_270 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = PointMort);
    v_271 = if v_270 then St_18_Zero else St_18_Cinquieme;
    v_272 = if v_270 then true else (pnr_8 when St_18_Cinquieme(ck_12));
    v_273 = if v_269 then St_18_Arriere else v_271;
    v_274 = if v_269 then true else v_272;
    v_275 = if v_268 then St_18_Troisieme else v_273;
    v_276 = if v_268 then true else v_274;
    v_277 = if v_267 then St_18_Troisieme else v_275;
    v_278 = if v_267 then true else v_276;
    v_279 = if v_266 then St_18_Deuxieme else v_277;
    v_280 = if v_266 then true else v_278;
    s_8_St_18_Cinquieme = if v_265 then St_18_Premier else v_279;
    r_8_St_18_Cinquieme = if v_265 then true else v_280;
    v_281 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Un);
    v_282 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Deux);
    v_283 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Trois);
    v_284 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Cinq);
    v_285 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Six);
    v_286 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = PointMort);
    v_287 = if v_286 then St_18_Zero else St_18_Quatrieme;
    v_288 = if v_286 then true else (pnr_8 when St_18_Quatrieme(ck_12));
    v_289 = if v_285 then St_18_Arriere else v_287;
    v_290 = if v_285 then true else v_288;
    v_291 = if v_284 then St_18_Cinquieme else v_289;
    v_292 = if v_284 then true else v_290;
    v_293 = if v_283 then St_18_Troisieme else v_291;
    v_294 = if v_283 then true else v_292;
    v_295 = if v_282 then St_18_Deuxieme else v_293;
    v_296 = if v_282 then true else v_294;
    s_8_St_18_Quatrieme = if v_281 then St_18_Premier else v_295;
    r_8_St_18_Quatrieme = if v_281 then true else v_296;
    v_297 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Un);
    v_298 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Deux);
    v_299 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Quatre);
    v_300 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Cinq);
    v_301 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Six);
    v_302 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = PointMort);
    v_303 = if v_302 then St_18_Zero else St_18_Troisieme;
    v_304 = if v_302 then true else (pnr_8 when St_18_Troisieme(ck_12));
    v_305 = if v_301 then St_18_Arriere else v_303;
    v_306 = if v_301 then true else v_304;
    v_307 = if v_300 then St_18_Cinquieme else v_305;
    v_308 = if v_300 then true else v_306;
    v_309 = if v_299 then St_18_Quatrieme else v_307;
    v_310 = if v_299 then true else v_308;
    v_311 = if v_298 then St_18_Deuxieme else v_309;
    v_312 = if v_298 then true else v_310;
    s_8_St_18_Troisieme = if v_297 then St_18_Premier else v_311;
    r_8_St_18_Troisieme = if v_297 then true else v_312;
    v_313 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Un);
    v_314 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Trois);
    v_315 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Quatre);
    v_316 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Cinq);
    v_317 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Six);
    v_318 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = PointMort);
    v_319 = if v_318 then St_18_Zero else St_18_Deuxieme;
    v_320 = if v_318 then true else (pnr_8 when St_18_Deuxieme(ck_12));
    v_321 = if v_317 then St_18_Arriere else v_319;
    v_322 = if v_317 then true else v_320;
    v_323 = if v_316 then St_18_Cinquieme else v_321;
    v_324 = if v_316 then true else v_322;
    v_325 = if v_315 then St_18_Quatrieme else v_323;
    v_326 = if v_315 then true else v_324;
    v_327 = if v_314 then St_18_Troisieme else v_325;
    v_328 = if v_314 then true else v_326;
    s_8_St_18_Deuxieme = if v_313 then St_18_Premier else v_327;
    r_8_St_18_Deuxieme = if v_313 then true else v_328;
    v_329 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Deux);
    v_330 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Trois);
    v_331 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Quatre);
    v_332 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Cinq);
    v_333 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Six);
    v_334 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = PointMort);
    v_335 = if v_334 then St_18_Zero else St_18_Premier;
    v_336 = if v_334 then true else (pnr_8 when St_18_Premier(ck_12));
    v_337 = if v_333 then St_18_Arriere else v_335;
    v_338 = if v_333 then true else v_336;
    v_339 = if v_332 then St_18_Cinquieme else v_337;
    v_340 = if v_332 then true else v_338;
    v_341 = if v_331 then St_18_Quatrieme else v_339;
    v_342 = if v_331 then true else v_340;
    v_343 = if v_330 then St_18_Troisieme else v_341;
    v_344 = if v_330 then true else v_342;
    s_8_St_18_Premier = if v_329 then St_18_Deuxieme else v_343;
    r_8_St_18_Premier = if v_329 then true else v_344;
    v_345 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Deux);
    v_346 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Trois);
    v_347 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Quatre);
    v_348 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Cinq);
    v_349 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Six);
    v_350 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Un);
    v_351 = if v_350 then St_18_Premier else St_18_Zero;
    v_352 = if v_350 then true else (pnr_8 when St_18_Zero(ck_12));
    v_353 = if v_349 then St_18_Arriere else v_351;
    v_354 = if v_349 then true else v_352;
    v_355 = if v_348 then St_18_Cinquieme else v_353;
    v_356 = if v_348 then true else v_354;
    v_357 = if v_347 then St_18_Quatrieme else v_355;
    v_358 = if v_347 then true else v_356;
    v_359 = if v_346 then St_18_Troisieme else v_357;
    v_360 = if v_346 then true else v_358;
    s_8_St_18_Zero = if v_345 then St_18_Deuxieme else v_359;
    r_8_St_18_Zero = if v_345 then true else v_360;
    ck_12 = St_18_Zero fby ns_8;
    nr_8 =
      merge ck_13
        (St_18_Arriere -> nr_8_St_18_Arriere)
        (St_18_Cinquieme -> nr_8_St_18_Cinquieme)
        (St_18_Quatrieme -> nr_8_St_18_Quatrieme)
        (St_18_Troisieme -> nr_8_St_18_Troisieme)
        (St_18_Deuxieme -> nr_8_St_18_Deuxieme)
        (St_18_Premier -> nr_8_St_18_Premier)(St_18_Zero -> nr_8_St_18_Zero);
    ns_8 =
      merge ck_13
        (St_18_Arriere -> ns_8_St_18_Arriere)
        (St_18_Cinquieme -> ns_8_St_18_Cinquieme)
        (St_18_Quatrieme -> ns_8_St_18_Quatrieme)
        (St_18_Troisieme -> ns_8_St_18_Troisieme)
        (St_18_Deuxieme -> ns_8_St_18_Deuxieme)
        (St_18_Premier -> ns_8_St_18_Premier)(St_18_Zero -> ns_8_St_18_Zero);
    num =
      merge ck_13
        (St_18_Arriere -> num_St_18_Arriere)
        (St_18_Cinquieme -> num_St_18_Cinquieme)
        (St_18_Quatrieme -> num_St_18_Quatrieme)
        (St_18_Troisieme -> num_St_18_Troisieme)
        (St_18_Deuxieme -> num_St_18_Deuxieme)
        (St_18_Premier -> num_St_18_Premier)(St_18_Zero -> num_St_18_Zero);
    ns_8_St_18_Arriere = St_18_Arriere;
    nr_8_St_18_Arriere = false;
    num_St_18_Arriere = Six;
    ns_8_St_18_Cinquieme = St_18_Cinquieme;
    nr_8_St_18_Cinquieme = false;
    num_St_18_Cinquieme = Cinq;
    ns_8_St_18_Quatrieme = St_18_Quatrieme;
    nr_8_St_18_Quatrieme = false;
    num_St_18_Quatrieme = Quatre;
    ns_8_St_18_Troisieme = St_18_Troisieme;
    nr_8_St_18_Troisieme = false;
    num_St_18_Troisieme = Trois;
    ns_8_St_18_Deuxieme = St_18_Deuxieme;
    nr_8_St_18_Deuxieme = false;
    num_St_18_Deuxieme = Deux;
    ns_8_St_18_Premier = St_18_Premier;
    nr_8_St_18_Premier = false;
    num_St_18_Premier = Un;
    ns_8_St_18_Zero = St_18_Zero;
    nr_8_St_18_Zero = false;
    num_St_18_Zero = PointMort;
    ck_13 = s_8;
    pnr_8 = false fby nr_8;
    boiteDeVitesse_1 = boiteDeVitesse;
    r_7 =
      merge ck_14
        (St_17_Stop -> r_7_St_17_Stop)(St_17_Move -> r_7_St_17_Move);
    s_7 =
      merge ck_14
        (St_17_Stop -> s_7_St_17_Stop)(St_17_Move -> s_7_St_17_Move);
    s_7_St_17_Stop =
      if (accelerateur_1 when St_17_Stop(ck_14))
      then St_17_Move
      else St_17_Stop;
    r_7_St_17_Stop =
      if (accelerateur_1 when St_17_Stop(ck_14))
      then true
      else (pnr_7 when St_17_Stop(ck_14));
    s_7_St_17_Move =
      if (frein_1 when St_17_Move(ck_14)) then St_17_Stop else St_17_Move;
    r_7_St_17_Move =
      if (frein_1 when St_17_Move(ck_14))
      then true
      else (pnr_7 when St_17_Move(ck_14));
    ck_14 = St_17_Move fby ns_7;
    nr_7 =
      merge ck_15
        (St_17_Stop -> nr_7_St_17_Stop)(St_17_Move -> nr_7_St_17_Move);
    ns_7 =
      merge ck_15
        (St_17_Stop -> ns_7_St_17_Stop)(St_17_Move -> ns_7_St_17_Move);
    avance_1 =
      merge ck_15
        (St_17_Stop -> avance_1_St_17_Stop)
        (St_17_Move -> avance_1_St_17_Move);
    ns_7_St_17_Stop = St_17_Stop;
    nr_7_St_17_Stop = false;
    avance_1_St_17_Stop = false;
    ns_7_St_17_Move = St_17_Move;
    nr_7_St_17_Move = false;
    avance_1_St_17_Move = true;
    ck_15 = s_7;
    pnr_7 = false fby nr_7;
    accelerateur_1 = accelerateur;
    frein_1 = frein;
    r_6 =
      merge ck_16
        (St_16_PositionNuit -> r_6_St_16_PositionNuit)
        (St_16_PositionJour -> r_6_St_16_PositionJour)
        (St_16_PositionNormale -> r_6_St_16_PositionNormale)
        (St_16_Desacitve -> r_6_St_16_Desacitve);
    s_6 =
      merge ck_16
        (St_16_PositionNuit -> s_6_St_16_PositionNuit)
        (St_16_PositionJour -> s_6_St_16_PositionJour)
        (St_16_PositionNormale -> s_6_St_16_PositionNormale)
        (St_16_Desacitve -> s_6_St_16_Desacitve);
    v_361 = not((normal_1 when St_16_PositionNuit(ck_16)));
    v_362 = not((jour_1 when St_16_PositionNuit(ck_16)));
    v_363 = (v_361 & v_362);
    v_364 = not((nuit_1 when St_16_PositionNuit(ck_16)));
    v_365 = (v_363 & v_364);
    v_366 = if v_365 then St_16_Desacitve else St_16_PositionNuit;
    v_367 = if v_365 then true else (pnr_6 when St_16_PositionNuit(ck_16));
    v_368 =
      if (normal_1 when St_16_PositionNuit(ck_16))
      then St_16_PositionNormale
      else v_366;
    v_369 = if (normal_1 when St_16_PositionNuit(ck_16)) then true else v_367;
    s_6_St_16_PositionNuit =
      if (jour_1 when St_16_PositionNuit(ck_16))
      then St_16_PositionJour
      else v_368;
    r_6_St_16_PositionNuit =
      if (jour_1 when St_16_PositionNuit(ck_16)) then true else v_369;
    v_370 = not((normal_1 when St_16_PositionJour(ck_16)));
    v_371 = not((jour_1 when St_16_PositionJour(ck_16)));
    v_372 = (v_370 & v_371);
    v_373 = not((nuit_1 when St_16_PositionJour(ck_16)));
    v_374 = (v_372 & v_373);
    v_375 = if v_374 then St_16_Desacitve else St_16_PositionJour;
    v_376 = if v_374 then true else (pnr_6 when St_16_PositionJour(ck_16));
    v_377 =
      if (nuit_1 when St_16_PositionJour(ck_16))
      then St_16_PositionNuit
      else v_375;
    v_378 = if (nuit_1 when St_16_PositionJour(ck_16)) then true else v_376;
    s_6_St_16_PositionJour =
      if (normal_1 when St_16_PositionJour(ck_16))
      then St_16_PositionNormale
      else v_377;
    r_6_St_16_PositionJour =
      if (normal_1 when St_16_PositionJour(ck_16)) then true else v_378;
    v_379 = not((normal_1 when St_16_PositionNormale(ck_16)));
    v_380 = not((jour_1 when St_16_PositionNormale(ck_16)));
    v_381 = (v_379 & v_380);
    v_382 = not((nuit_1 when St_16_PositionNormale(ck_16)));
    v_383 = (v_381 & v_382);
    v_384 = if v_383 then St_16_Desacitve else St_16_PositionNormale;
    v_385 = if v_383 then true else (pnr_6 when St_16_PositionNormale(ck_16));
    v_386 =
      if (nuit_1 when St_16_PositionNormale(ck_16))
      then St_16_PositionNuit
      else v_384;
    v_387 =
      if (nuit_1 when St_16_PositionNormale(ck_16)) then true else v_385;
    s_6_St_16_PositionNormale =
      if (jour_1 when St_16_PositionNormale(ck_16))
      then St_16_PositionJour
      else v_386;
    r_6_St_16_PositionNormale =
      if (jour_1 when St_16_PositionNormale(ck_16)) then true else v_387;
    v_388 =
      if (normal_1 when St_16_Desacitve(ck_16))
      then St_16_PositionNormale
      else St_16_Desacitve;
    v_389 =
      if (normal_1 when St_16_Desacitve(ck_16))
      then true
      else (pnr_6 when St_16_Desacitve(ck_16));
    v_390 =
      if (nuit_1 when St_16_Desacitve(ck_16))
      then St_16_PositionNuit
      else v_388;
    v_391 = if (nuit_1 when St_16_Desacitve(ck_16)) then true else v_389;
    s_6_St_16_Desacitve =
      if (jour_1 when St_16_Desacitve(ck_16))
      then St_16_PositionJour
      else v_390;
    r_6_St_16_Desacitve =
      if (jour_1 when St_16_Desacitve(ck_16)) then true else v_391;
    ck_16 = St_16_Desacitve fby ns_6;
    nr_6 =
      merge ck_17
        (St_16_PositionNuit -> nr_6_St_16_PositionNuit)
        (St_16_PositionJour -> nr_6_St_16_PositionJour)
        (St_16_PositionNormale -> nr_6_St_16_PositionNormale)
        (St_16_Desacitve -> nr_6_St_16_Desacitve);
    ns_6 =
      merge ck_17
        (St_16_PositionNuit -> ns_6_St_16_PositionNuit)
        (St_16_PositionJour -> ns_6_St_16_PositionJour)
        (St_16_PositionNormale -> ns_6_St_16_PositionNormale)
        (St_16_Desacitve -> ns_6_St_16_Desacitve);
    sortie =
      merge ck_17
        (St_16_PositionNuit -> sortie_St_16_PositionNuit)
        (St_16_PositionJour -> sortie_St_16_PositionJour)
        (St_16_PositionNormale -> sortie_St_16_PositionNormale)
        (St_16_Desacitve -> sortie_St_16_Desacitve);
    gerer =
      merge ck_17
        (St_16_PositionNuit -> gerer_St_16_PositionNuit)
        (St_16_PositionJour -> gerer_St_16_PositionJour)
        (St_16_PositionNormale -> gerer_St_16_PositionNormale)
        (St_16_Desacitve -> gerer_St_16_Desacitve);
    ns_6_St_16_PositionNuit = St_16_PositionNuit;
    nr_6_St_16_PositionNuit = false;
    sortie_St_16_PositionNuit = PositionNuit;
    gerer_St_16_PositionNuit = true;
    ns_6_St_16_PositionJour = St_16_PositionJour;
    nr_6_St_16_PositionJour = false;
    sortie_St_16_PositionJour = PositionJour;
    gerer_St_16_PositionJour = true;
    ns_6_St_16_PositionNormale = St_16_PositionNormale;
    nr_6_St_16_PositionNormale = false;
    sortie_St_16_PositionNormale = PositionNormale;
    gerer_St_16_PositionNormale = true;
    ns_6_St_16_Desacitve = St_16_Desacitve;
    nr_6_St_16_Desacitve = false;
    sortie_St_16_Desacitve = Desactive;
    gerer_St_16_Desacitve = false;
    ck_17 = s_6;
    pnr_6 = false fby nr_6;
    nuit_1 = nuit;
    jour_1 = jour;
    normal_1 = normal;
    r_5 =
      merge ck_18
        (St_15_BalayageContiu -> r_5_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> r_5_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> r_5_St_15_BalayageUnique)
        (St_15_Desactive -> r_5_St_15_Desactive);
    s_5 =
      merge ck_18
        (St_15_BalayageContiu -> s_5_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> s_5_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> s_5_St_15_BalayageUnique)
        (St_15_Desactive -> s_5_St_15_Desactive);
    v_392 = ((densite when St_15_BalayageContiu(ck_18)) = Low);
    v_393 = ((con_1 when St_15_BalayageContiu(ck_18)) & v_392);
    v_394 = ((densite when St_15_BalayageContiu(ck_18)) = Normal);
    v_395 = ((con_1 when St_15_BalayageContiu(ck_18)) & v_394);
    v_396 =
      if v_395 then St_15_BalayageIntermittent else St_15_BalayageContiu;
    v_397 = if v_395 then true else (pnr_5 when St_15_BalayageContiu(ck_18));
    v_398 = if v_393 then St_15_BalayageUnique else v_396;
    v_399 = if v_393 then true else v_397;
    s_5_St_15_BalayageContiu =
      if (cclose_1 when St_15_BalayageContiu(ck_18))
      then St_15_Desactive
      else v_398;
    r_5_St_15_BalayageContiu =
      if (cclose_1 when St_15_BalayageContiu(ck_18)) then true else v_399;
    v_400 = ((densite when St_15_BalayageIntermittent(ck_18)) = High);
    v_401 = ((con_1 when St_15_BalayageIntermittent(ck_18)) & v_400);
    v_402 = ((densite when St_15_BalayageIntermittent(ck_18)) = Low);
    v_403 = ((con_1 when St_15_BalayageIntermittent(ck_18)) & v_402);
    v_404 =
      if v_403 then St_15_BalayageUnique else St_15_BalayageIntermittent;
    v_405 =
      if v_403 then true else (pnr_5 when St_15_BalayageIntermittent(ck_18));
    v_406 = if v_401 then St_15_BalayageContiu else v_404;
    v_407 = if v_401 then true else v_405;
    s_5_St_15_BalayageIntermittent =
      if (cclose_1 when St_15_BalayageIntermittent(ck_18))
      then St_15_Desactive
      else v_406;
    r_5_St_15_BalayageIntermittent =
      if (cclose_1 when St_15_BalayageIntermittent(ck_18))
      then true
      else v_407;
    v_408 = ((densite when St_15_BalayageUnique(ck_18)) = High);
    v_409 = ((con_1 when St_15_BalayageUnique(ck_18)) & v_408);
    v_410 = ((densite when St_15_BalayageUnique(ck_18)) = Normal);
    v_411 = ((con_1 when St_15_BalayageUnique(ck_18)) & v_410);
    v_412 =
      if v_411 then St_15_BalayageIntermittent else St_15_BalayageUnique;
    v_413 = if v_411 then true else (pnr_5 when St_15_BalayageUnique(ck_18));
    v_414 = if v_409 then St_15_BalayageContiu else v_412;
    v_415 = if v_409 then true else v_413;
    s_5_St_15_BalayageUnique =
      if (cclose_1 when St_15_BalayageUnique(ck_18))
      then St_15_Desactive
      else v_414;
    r_5_St_15_BalayageUnique =
      if (cclose_1 when St_15_BalayageUnique(ck_18)) then true else v_415;
    s_5_St_15_Desactive =
      if (con_1 when St_15_Desactive(ck_18))
      then St_15_BalayageUnique
      else St_15_Desactive;
    r_5_St_15_Desactive =
      if (con_1 when St_15_Desactive(ck_18))
      then true
      else (pnr_5 when St_15_Desactive(ck_18));
    ck_18 = St_15_Desactive fby ns_5;
    nr_5 =
      merge ck_19
        (St_15_BalayageContiu -> nr_5_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> nr_5_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> nr_5_St_15_BalayageUnique)
        (St_15_Desactive -> nr_5_St_15_Desactive);
    ns_5 =
      merge ck_19
        (St_15_BalayageContiu -> ns_5_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> ns_5_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> ns_5_St_15_BalayageUnique)
        (St_15_Desactive -> ns_5_St_15_Desactive);
    etat_1 =
      merge ck_19
        (St_15_BalayageContiu -> etat_1_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> etat_1_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> etat_1_St_15_BalayageUnique)
        (St_15_Desactive -> etat_1_St_15_Desactive);
    ns_5_St_15_BalayageContiu = St_15_BalayageContiu;
    nr_5_St_15_BalayageContiu = false;
    etat_1_St_15_BalayageContiu = Contiu;
    ns_5_St_15_BalayageIntermittent = St_15_BalayageIntermittent;
    nr_5_St_15_BalayageIntermittent = false;
    etat_1_St_15_BalayageIntermittent = Intermittent;
    ns_5_St_15_BalayageUnique = St_15_BalayageUnique;
    nr_5_St_15_BalayageUnique = false;
    etat_1_St_15_BalayageUnique = Unique;
    ns_5_St_15_Desactive = St_15_Desactive;
    nr_5_St_15_Desactive = false;
    etat_1_St_15_Desactive = Deactivated;
    ck_19 = s_5;
    pnr_5 = false fby nr_5;
    densite = densitePluie;
    cclose_1 = cclose;
    con_1 = con;
    r_4 =
      merge ck_20
        (St_14_Active -> r_4_St_14_Active)
        (St_14_Desactive -> r_4_St_14_Desactive);
    s_4 =
      merge ck_20
        (St_14_Active -> s_4_St_14_Active)
        (St_14_Desactive -> s_4_St_14_Desactive);
    v_416 = not((detectionAccident_1 when St_14_Active(ck_20)));
    s_4_St_14_Active = if v_416 then St_14_Active else St_14_Active;
    r_4_St_14_Active =
      if v_416 then true else (pnr_4 when St_14_Active(ck_20));
    s_4_St_14_Desactive =
      if (detectionAccident_1 when St_14_Desactive(ck_20))
      then St_14_Active
      else St_14_Desactive;
    r_4_St_14_Desactive =
      if (detectionAccident_1 when St_14_Desactive(ck_20))
      then true
      else (pnr_4 when St_14_Desactive(ck_20));
    ck_20 = St_14_Desactive fby ns_4;
    nr_4 =
      merge ck_21
        (St_14_Active -> nr_4_St_14_Active)
        (St_14_Desactive -> nr_4_St_14_Desactive);
    ns_4 =
      merge ck_21
        (St_14_Active -> ns_4_St_14_Active)
        (St_14_Desactive -> ns_4_St_14_Desactive);
    emissionAppelUrgence =
      merge ck_21
        (St_14_Active -> emissionAppelUrgence_St_14_Active)
        (St_14_Desactive -> emissionAppelUrgence_St_14_Desactive);
    airbag =
      merge ck_21
        (St_14_Active -> airbag_St_14_Active)
        (St_14_Desactive -> airbag_St_14_Desactive);
    ns_4_St_14_Active = St_14_Active;
    nr_4_St_14_Active = false;
    airbag_St_14_Active = true;
    emissionAppelUrgence_St_14_Active = true;
    ns_4_St_14_Desactive = St_14_Desactive;
    nr_4_St_14_Desactive = false;
    airbag_St_14_Desactive = false;
    emissionAppelUrgence_St_14_Desactive = false;
    ck_21 = s_4;
    pnr_4 = false fby nr_4;
    detectionAccident_1 = detectionAccident;
    r_3 =
      merge ck_22
        (St_13_Detection -> r_3_St_13_Detection)
        (St_13_Idle -> r_3_St_13_Idle);
    s_3 =
      merge ck_22
        (St_13_Detection -> s_3_St_13_Detection)
        (St_13_Idle -> s_3_St_13_Idle);
    v_417 = not((detectionDepassementLigne when St_13_Detection(ck_22)));
    v_418 = not((detectionVolantLibre_1 when St_13_Detection(ck_22)));
    v_419 = (v_417 & v_418);
    v_420 =
      not((detectionDefaillanceTechnique_1 when St_13_Detection(ck_22)));
    v_421 = (v_419 & v_420);
    v_422 = not((detectionVehiculeAngleMort when St_13_Detection(ck_22)));
    v_423 = (v_421 & v_422);
    s_3_St_13_Detection = if v_423 then St_13_Idle else St_13_Detection;
    r_3_St_13_Detection =
      if v_423 then true else (pnr_3 when St_13_Detection(ck_22));
    v_424 =
      ((detectionDepassementLigne when St_13_Idle(ck_22)) or
       (detectionVolantLibre_1 when St_13_Idle(ck_22)));
    v_425 =
      (v_424 or (detectionDefaillanceTechnique_1 when St_13_Idle(ck_22)));
    v_426 = (v_425 or (detectionVehiculeAngleMort when St_13_Idle(ck_22)));
    s_3_St_13_Idle = if v_426 then St_13_Detection else St_13_Idle;
    r_3_St_13_Idle = if v_426 then true else (pnr_3 when St_13_Idle(ck_22));
    ck_22 = St_13_Idle fby ns_3;
    nr_3 =
      merge ck_23
        (St_13_Detection -> nr_3_St_13_Detection)
        (St_13_Idle -> nr_3_St_13_Idle);
    ns_3 =
      merge ck_23
        (St_13_Detection -> ns_3_St_13_Detection)
        (St_13_Idle -> ns_3_St_13_Idle);
    dangerAngleMort =
      merge ck_23
        (St_13_Detection -> dangerAngleMort_St_13_Detection)
        (St_13_Idle -> dangerAngleMort_St_13_Idle);
    defaillanceTechnique_1 =
      merge ck_23
        (St_13_Detection -> defaillanceTechnique_1_St_13_Detection)
        (St_13_Idle -> defaillanceTechnique_1_St_13_Idle);
    volantLibre_1 =
      merge ck_23
        (St_13_Detection -> volantLibre_1_St_13_Detection)
        (St_13_Idle -> volantLibre_1_St_13_Idle);
    depassementLigne =
      merge ck_23
        (St_13_Detection -> depassementLigne_St_13_Detection)
        (St_13_Idle -> depassementLigne_St_13_Idle);
    ns_3_St_13_Detection = St_13_Detection;
    nr_3_St_13_Detection = false;
    depassementLigne_St_13_Detection =
      (detectionDepassementLigne when St_13_Detection(ck_23));
    volantLibre_1_St_13_Detection =
      (detectionVolantLibre_1 when St_13_Detection(ck_23));
    defaillanceTechnique_1_St_13_Detection =
      (detectionDefaillanceTechnique_1 when St_13_Detection(ck_23));
    dangerAngleMort_St_13_Detection =
      (detectionVehiculeAngleMort when St_13_Detection(ck_23));
    ns_3_St_13_Idle = St_13_Idle;
    nr_3_St_13_Idle = false;
    depassementLigne_St_13_Idle = false;
    volantLibre_1_St_13_Idle = false;
    defaillanceTechnique_1_St_13_Idle = false;
    dangerAngleMort_St_13_Idle = false;
    ck_23 = s_3;
    pnr_3 = false fby nr_3;
    detectionVehiculeAngleMort = detectionAngleMort;
    detectionDefaillanceTechnique_1 = detectionDefaillanceTechnique;
    detectionVolantLibre_1 = detectionVolantLibre;
    detectionDepassementLigne = detectionLigne;
    r_2 =
      merge ck_24
        (St_12_Feu -> r_2_St_12_Feu)(St_12_Vehicule -> r_2_St_12_Vehicule)
        (St_12_Pieton -> r_2_St_12_Pieton)
        (St_12_Acceleration -> r_2_St_12_Acceleration);
    s_2 =
      merge ck_24
        (St_12_Feu -> s_2_St_12_Feu)(St_12_Vehicule -> s_2_St_12_Vehicule)
        (St_12_Pieton -> s_2_St_12_Pieton)
        (St_12_Acceleration -> s_2_St_12_Acceleration);
    v_427 = not((presencePieton when St_12_Feu(ck_24)));
    v_428 = not((presencevehicule when St_12_Feu(ck_24)));
    v_429 = (v_427 & v_428);
    v_430 = ((feu when St_12_Feu(ck_24)) = Vert);
    v_431 = (v_429 & v_430);
    v_432 = not((presencePieton when St_12_Feu(ck_24)));
    v_433 = (v_432 & (presencevehicule when St_12_Feu(ck_24)));
    v_434 = if v_433 then St_12_Vehicule else St_12_Feu;
    v_435 = if v_433 then true else (pnr_2 when St_12_Feu(ck_24));
    v_436 =
      if (presencePieton when St_12_Feu(ck_24)) then St_12_Pieton else v_434;
    v_437 = if (presencePieton when St_12_Feu(ck_24)) then true else v_435;
    s_2_St_12_Feu = if v_431 then St_12_Acceleration else v_436;
    r_2_St_12_Feu = if v_431 then true else v_437;
    v_438 = not((presencePieton when St_12_Vehicule(ck_24)));
    v_439 = not((presencevehicule when St_12_Vehicule(ck_24)));
    v_440 = (v_438 & v_439);
    v_441 = ((feu when St_12_Vehicule(ck_24)) = Vert);
    v_442 = (v_440 & v_441);
    v_443 = not((presencePieton when St_12_Vehicule(ck_24)));
    v_444 = not((presencevehicule when St_12_Vehicule(ck_24)));
    v_445 = (v_443 & v_444);
    v_446 = ((feu when St_12_Vehicule(ck_24)) = Vert);
    v_447 = not(v_446);
    v_448 = (v_445 & v_447);
    v_449 = if v_448 then St_12_Feu else St_12_Vehicule;
    v_450 = if v_448 then true else (pnr_2 when St_12_Vehicule(ck_24));
    v_451 =
      if (presencePieton when St_12_Vehicule(ck_24))
      then St_12_Pieton
      else v_449;
    v_452 =
      if (presencePieton when St_12_Vehicule(ck_24)) then true else v_450;
    s_2_St_12_Vehicule = if v_442 then St_12_Acceleration else v_451;
    r_2_St_12_Vehicule = if v_442 then true else v_452;
    v_453 = not((presencePieton when St_12_Pieton(ck_24)));
    v_454 = not((presencevehicule when St_12_Pieton(ck_24)));
    v_455 = (v_453 & v_454);
    v_456 = ((feu when St_12_Pieton(ck_24)) = Vert);
    v_457 = (v_455 & v_456);
    v_458 = not((presencePieton when St_12_Pieton(ck_24)));
    v_459 = (v_458 & (presencevehicule when St_12_Pieton(ck_24)));
    v_460 = not((presencePieton when St_12_Pieton(ck_24)));
    v_461 = not((presencevehicule when St_12_Pieton(ck_24)));
    v_462 = (v_460 & v_461);
    v_463 = ((feu when St_12_Pieton(ck_24)) = Vert);
    v_464 = not(v_463);
    v_465 = (v_462 & v_464);
    v_466 = if v_465 then St_12_Feu else St_12_Pieton;
    v_467 = if v_465 then true else (pnr_2 when St_12_Pieton(ck_24));
    v_468 = if v_459 then St_12_Vehicule else v_466;
    v_469 = if v_459 then true else v_467;
    s_2_St_12_Pieton = if v_457 then St_12_Acceleration else v_468;
    r_2_St_12_Pieton = if v_457 then true else v_469;
    v_470 = not((presencePieton when St_12_Acceleration(ck_24)));
    v_471 = (v_470 & (presencevehicule when St_12_Acceleration(ck_24)));
    v_472 = not((presencePieton when St_12_Acceleration(ck_24)));
    v_473 = not((presencevehicule when St_12_Acceleration(ck_24)));
    v_474 = (v_472 & v_473);
    v_475 = ((feu when St_12_Acceleration(ck_24)) = Vert);
    v_476 = not(v_475);
    v_477 = (v_474 & v_476);
    v_478 = if v_477 then St_12_Feu else St_12_Acceleration;
    v_479 = if v_477 then true else (pnr_2 when St_12_Acceleration(ck_24));
    v_480 = if v_471 then St_12_Vehicule else v_478;
    v_481 = if v_471 then true else v_479;
    s_2_St_12_Acceleration =
      if (presencePieton when St_12_Acceleration(ck_24))
      then St_12_Pieton
      else v_480;
    r_2_St_12_Acceleration =
      if (presencePieton when St_12_Acceleration(ck_24)) then true else v_481;
    ck_24 = St_12_Acceleration fby ns_2;
    nr_2 =
      merge ck_25
        (St_12_Feu -> nr_2_St_12_Feu)(St_12_Vehicule -> nr_2_St_12_Vehicule)
        (St_12_Pieton -> nr_2_St_12_Pieton)
        (St_12_Acceleration -> nr_2_St_12_Acceleration);
    ns_2 =
      merge ck_25
        (St_12_Feu -> ns_2_St_12_Feu)(St_12_Vehicule -> ns_2_St_12_Vehicule)
        (St_12_Pieton -> ns_2_St_12_Pieton)
        (St_12_Acceleration -> ns_2_St_12_Acceleration);
    causeFreinage_1 =
      merge ck_25
        (St_12_Feu -> causeFreinage_1_St_12_Feu)
        (St_12_Vehicule -> causeFreinage_1_St_12_Vehicule)
        (St_12_Pieton -> causeFreinage_1_St_12_Pieton)
        (St_12_Acceleration -> causeFreinage_1_St_12_Acceleration);
    frein_2 =
      merge ck_25
        (St_12_Feu -> frein_2_St_12_Feu)
        (St_12_Vehicule -> frein_2_St_12_Vehicule)
        (St_12_Pieton -> frein_2_St_12_Pieton)
        (St_12_Acceleration -> frein_2_St_12_Acceleration);
    ns_2_St_12_Feu = St_12_Feu;
    nr_2_St_12_Feu = false;
    causeFreinage_1_St_12_Feu = Feu;
    frein_2_St_12_Feu = true;
    ns_2_St_12_Vehicule = St_12_Vehicule;
    nr_2_St_12_Vehicule = false;
    causeFreinage_1_St_12_Vehicule = Presencevehicule;
    frein_2_St_12_Vehicule = true;
    ns_2_St_12_Pieton = St_12_Pieton;
    nr_2_St_12_Pieton = false;
    causeFreinage_1_St_12_Pieton = PresencePieton;
    frein_2_St_12_Pieton = true;
    ns_2_St_12_Acceleration = St_12_Acceleration;
    nr_2_St_12_Acceleration = false;
    causeFreinage_1_St_12_Acceleration = None;
    frein_2_St_12_Acceleration = false;
    ck_25 = s_2;
    pnr_2 = false fby nr_2;
    feu = capteurDectecteurFeu;
    presencevehicule = detectionPresencevehicule;
    presencePieton = detectionPresencePieton;
    r_1 =
      merge ck_26
        (St_11_Desactive -> r_1_St_11_Desactive)
        (St_11_Active -> r_1_St_11_Active);
    s_1 =
      merge ck_26
        (St_11_Desactive -> s_1_St_11_Desactive)
        (St_11_Active -> s_1_St_11_Active);
    v_482 = not((deactivated when St_11_Desactive(ck_26)));
    s_1_St_11_Desactive = if v_482 then St_11_Active else St_11_Desactive;
    r_1_St_11_Desactive =
      if v_482 then true else (pnr_1 when St_11_Desactive(ck_26));
    s_1_St_11_Active =
      if (deactivated when St_11_Active(ck_26))
      then St_11_Desactive
      else St_11_Active;
    r_1_St_11_Active =
      if (deactivated when St_11_Active(ck_26))
      then true
      else (pnr_1 when St_11_Active(ck_26));
    ck_26 = St_11_Active fby ns_1;
    nr_1 =
      merge ck_27
        (St_11_Desactive -> nr_1_St_11_Desactive)
        (St_11_Active -> nr_1_St_11_Active);
    ns_1 =
      merge ck_27
        (St_11_Desactive -> ns_1_St_11_Desactive)
        (St_11_Active -> ns_1_St_11_Active);
    etat_2 =
      merge ck_27
        (St_11_Desactive -> etat_2_St_11_Desactive)
        (St_11_Active -> etat_2_St_11_Active);
    qt =
      merge ck_27
        (St_11_Desactive -> qt_St_11_Desactive)
        (St_11_Active -> qt_St_11_Active);
    ns_1_St_11_Desactive = St_11_Desactive;
    nr_1_St_11_Desactive = false;
    qt_St_11_Desactive = 0.000000;
    etat_2_St_11_Desactive = false;
    ns_1_St_11_Active = St_11_Active;
    nr_1_St_11_Active = false;
    qt_St_11_Active = (19.000000 -. (capteur when St_11_Active(ck_27)));
    etat_2_St_11_Active = true;
    ck_27 = s_1;
    pnr_1 = false fby nr_1;
    capteur = capteurTemperature;
    deactivated = desactiveRegulateurTemperature;
    r =
      merge ck_28
        (St_10_Phares -> r_St_10_Phares)(St_10_Codes -> r_St_10_Codes)
        (St_10_Veilleuses -> r_St_10_Veilleuses)(St_10_Idle -> r_St_10_Idle);
    s =
      merge ck_28
        (St_10_Phares -> s_St_10_Phares)(St_10_Codes -> s_St_10_Codes)
        (St_10_Veilleuses -> s_St_10_Veilleuses)(St_10_Idle -> s_St_10_Idle);
    s_St_10_Phares =
      if (cpn when St_10_Phares(ck_28)) then St_10_Codes else St_10_Phares;
    r_St_10_Phares =
      if (cpn when St_10_Phares(ck_28))
      then true
      else (pnr when St_10_Phares(ck_28));
    v_483 =
      if (cpn when St_10_Codes(ck_28)) then St_10_Phares else St_10_Codes;
    v_484 =
      if (cpn when St_10_Codes(ck_28))
      then true
      else (pnr when St_10_Codes(ck_28));
    s_St_10_Codes =
      if (tin when St_10_Codes(ck_28)) then St_10_Veilleuses else v_483;
    r_St_10_Codes = if (tin when St_10_Codes(ck_28)) then true else v_484;
    v_485 =
      if (tdn when St_10_Veilleuses(ck_28))
      then St_10_Codes
      else St_10_Veilleuses;
    v_486 =
      if (tdn when St_10_Veilleuses(ck_28))
      then true
      else (pnr when St_10_Veilleuses(ck_28));
    s_St_10_Veilleuses =
      if (tin when St_10_Veilleuses(ck_28)) then St_10_Idle else v_485;
    r_St_10_Veilleuses =
      if (tin when St_10_Veilleuses(ck_28)) then true else v_486;
    s_St_10_Idle =
      if (tdn when St_10_Idle(ck_28)) then St_10_Veilleuses else St_10_Idle;
    r_St_10_Idle =
      if (tdn when St_10_Idle(ck_28))
      then true
      else (pnr when St_10_Idle(ck_28));
    ck_28 = St_10_Idle fby ns;
    nr =
      merge ck_29
        (St_10_Phares -> nr_St_10_Phares)(St_10_Codes -> nr_St_10_Codes)
        (St_10_Veilleuses -> nr_St_10_Veilleuses)
        (St_10_Idle -> nr_St_10_Idle);
    ns =
      merge ck_29
        (St_10_Phares -> ns_St_10_Phares)(St_10_Codes -> ns_St_10_Codes)
        (St_10_Veilleuses -> ns_St_10_Veilleuses)
        (St_10_Idle -> ns_St_10_Idle);
    etat_3 =
      merge ck_29
        (St_10_Phares -> etat_3_St_10_Phares)
        (St_10_Codes -> etat_3_St_10_Codes)
        (St_10_Veilleuses -> etat_3_St_10_Veilleuses)
        (St_10_Idle -> etat_3_St_10_Idle);
    veilleuses =
      merge ck_29
        (St_10_Phares -> veilleuses_St_10_Phares)
        (St_10_Codes -> veilleuses_St_10_Codes)
        (St_10_Veilleuses -> veilleuses_St_10_Veilleuses)
        (St_10_Idle -> veilleuses_St_10_Idle);
    phares_1 =
      merge ck_29
        (St_10_Phares -> phares_1_St_10_Phares)
        (St_10_Codes -> phares_1_St_10_Codes)
        (St_10_Veilleuses -> phares_1_St_10_Veilleuses)
        (St_10_Idle -> phares_1_St_10_Idle);
    codes =
      merge ck_29
        (St_10_Phares -> codes_St_10_Phares)
        (St_10_Codes -> codes_St_10_Codes)
        (St_10_Veilleuses -> codes_St_10_Veilleuses)
        (St_10_Idle -> codes_St_10_Idle);
    ns_St_10_Phares = St_10_Phares;
    nr_St_10_Phares = false;
    codes_St_10_Phares = false;
    phares_1_St_10_Phares = true;
    veilleuses_St_10_Phares = false;
    etat_3_St_10_Phares = Phares;
    ns_St_10_Codes = St_10_Codes;
    nr_St_10_Codes = false;
    codes_St_10_Codes = true;
    phares_1_St_10_Codes = false;
    veilleuses_St_10_Codes = false;
    etat_3_St_10_Codes = Codes;
    ns_St_10_Veilleuses = St_10_Veilleuses;
    nr_St_10_Veilleuses = false;
    codes_St_10_Veilleuses = false;
    phares_1_St_10_Veilleuses = false;
    veilleuses_St_10_Veilleuses = true;
    etat_3_St_10_Veilleuses = Veilleuses;
    ns_St_10_Idle = St_10_Idle;
    nr_St_10_Idle = false;
    codes_St_10_Idle = false;
    phares_1_St_10_Idle = false;
    veilleuses_St_10_Idle = false;
    etat_3_St_10_Idle = Idle;
    ck_29 = s;
    pnr = false fby nr;
    cpn = cp;
    tin = ti;
    tdn = td
  tel

