type st_19 = St_19_Eteint|St_19_Allumer
type st_18 = St_18_Zero|St_18_Troisieme|St_18_Quatrieme|St_18_Premier|
  St_18_Deuxieme|St_18_Cinquieme|St_18_Arriere
type st_17 = St_17_Stop|St_17_Move
type st_16 = St_16_PositionNuit|St_16_PositionNormale|St_16_PositionJour|
  St_16_Desacitve
type st_15 = St_15_Desactive|St_15_BalayageUnique|St_15_BalayageIntermittent|
  St_15_BalayageContiu
type st_14 = St_14_Desactive|St_14_Active
type st_13 = St_13_Idle|St_13_Detection
type st_12 = St_12_Vehicule|St_12_Pieton|St_12_Feu|St_12_Acceleration
type st_11 = St_11_Desactive|St_11_Active
type st_10 = St_10_Veilleuses|St_10_Phares|St_10_Idle|St_10_Codes
type st_9 = St_9_Veilleuses|St_9_Phares|St_9_Idle|St_9_Codes
type st_8 = St_8_Desactive|St_8_Active
type st_7 = St_7_Vehicule|St_7_Pieton|St_7_Feu|St_7_Acceleration
type st_6 = St_6_Idle|St_6_Detection
type st_5 = St_5_Desactive|St_5_Active
type st_4 = St_4_Desactive|St_4_BalayageUnique|St_4_BalayageIntermittent|
  St_4_BalayageContiu
type st_3 = St_3_PositionNuit|St_3_PositionNormale|St_3_PositionJour|
  St_3_Desacitve
type st_2 = St_2_Stop|St_2_Move
type st_1 = St_1_Zero|St_1_Troisieme|St_1_Quatrieme|St_1_Premier|
  St_1_Deuxieme|St_1_Cinquieme|St_1_Arriere
type st = St_Eteint|St_Allumer
type numero = Un|Deux|Trois|Quatre|Cinq|Six|PointMort
type lum = Null|Low|Normal|High
type couleur = Vert|Jaune|Rouge
type position = Ville|Autoroute
type etatPhares = NoLum|Veilleuses|Codes|Phares
type cause = PresencePieton|Presencevehicule|Feu|None
type retro = Desactive|PositionJour|PositionNuit|PositionNormale
type typeBalayage = Deactivated|Intermittent|Contiu|Unique
node moteur(commande : bool; cle : bool) returns (etat : bool)
var v : bool; v_4 : bool; v_3 : bool; v_2 : bool; r_St_Eteint : bool;
    s_St_Eteint : st; r_St_Allumer : bool; s_St_Allumer : st; ck : st;
    nr_St_Eteint : bool; ns_St_Eteint : st; etat_St_Eteint : bool;
    nr_St_Allumer : bool; ns_St_Allumer : st; etat_St_Allumer : bool;
    ck_1 : st; s : st; ns : st; r : bool; nr : bool; pnr : bool;
let
  r = merge ck (St_Eteint -> r_St_Eteint)(St_Allumer -> r_St_Allumer);
  s = merge ck (St_Eteint -> s_St_Eteint)(St_Allumer -> s_St_Allumer);
  v = ((commande when St_Eteint(ck)) or (cle when St_Eteint(ck)));
  s_St_Eteint = if v then St_Allumer else St_Eteint;
  r_St_Eteint = if v then true else (pnr when St_Eteint(ck));
  v_2 = not((commande when St_Allumer(ck)));
  v_3 = not((cle when St_Allumer(ck)));
  v_4 = (v_2 & v_3);
  s_St_Allumer = if v_4 then St_Eteint else St_Allumer;
  r_St_Allumer = if v_4 then true else (pnr when St_Allumer(ck));
  ck = St_Allumer fby ns;
  nr = merge ck_1 (St_Eteint -> nr_St_Eteint)(St_Allumer -> nr_St_Allumer);
  ns = merge ck_1 (St_Eteint -> ns_St_Eteint)(St_Allumer -> ns_St_Allumer);
  etat =
    merge ck_1 (St_Eteint -> etat_St_Eteint)(St_Allumer -> etat_St_Allumer);
  ns_St_Eteint = St_Eteint;
  nr_St_Eteint = false;
  etat_St_Eteint = false;
  ns_St_Allumer = St_Allumer;
  nr_St_Allumer = false;
  etat_St_Allumer = true;
  ck_1 = s;
  pnr = false fby nr
tel

node vitesse(boiteDeVitesse : numero) returns (num : numero)
var v_19 : bool; v_18 : st_1; v_17 : bool; v_16 : st_1; v_15 : bool;
    v_14 : st_1; v_13 : bool; v_12 : st_1; v_11 : bool; v_10 : st_1;
    v_9 : bool; v_8 : bool; v_7 : bool; v_6 : bool; v_5 : bool; v : bool;
    v_35 : bool; v_34 : st_1; v_33 : bool; v_32 : st_1; v_31 : bool;
    v_30 : st_1; v_29 : bool; v_28 : st_1; v_27 : bool; v_26 : st_1;
    v_25 : bool; v_24 : bool; v_23 : bool; v_22 : bool; v_21 : bool;
    v_20 : bool; v_51 : bool; v_50 : st_1; v_49 : bool; v_48 : st_1;
    v_47 : bool; v_46 : st_1; v_45 : bool; v_44 : st_1; v_43 : bool;
    v_42 : st_1; v_41 : bool; v_40 : bool; v_39 : bool; v_38 : bool;
    v_37 : bool; v_36 : bool; v_67 : bool; v_66 : st_1; v_65 : bool;
    v_64 : st_1; v_63 : bool; v_62 : st_1; v_61 : bool; v_60 : st_1;
    v_59 : bool; v_58 : st_1; v_57 : bool; v_56 : bool; v_55 : bool;
    v_54 : bool; v_53 : bool; v_52 : bool; v_83 : bool; v_82 : st_1;
    v_81 : bool; v_80 : st_1; v_79 : bool; v_78 : st_1; v_77 : bool;
    v_76 : st_1; v_75 : bool; v_74 : st_1; v_73 : bool; v_72 : bool;
    v_71 : bool; v_70 : bool; v_69 : bool; v_68 : bool; v_99 : bool;
    v_98 : st_1; v_97 : bool; v_96 : st_1; v_95 : bool; v_94 : st_1;
    v_93 : bool; v_92 : st_1; v_91 : bool; v_90 : st_1; v_89 : bool;
    v_88 : bool; v_87 : bool; v_86 : bool; v_85 : bool; v_84 : bool;
    v_115 : bool; v_114 : st_1; v_113 : bool; v_112 : st_1; v_111 : bool;
    v_110 : st_1; v_109 : bool; v_108 : st_1; v_107 : bool; v_106 : st_1;
    v_105 : bool; v_104 : bool; v_103 : bool; v_102 : bool; v_101 : bool;
    v_100 : bool; r_St_1_Arriere : bool; s_St_1_Arriere : st_1;
    r_St_1_Cinquieme : bool; s_St_1_Cinquieme : st_1;
    r_St_1_Quatrieme : bool; s_St_1_Quatrieme : st_1;
    r_St_1_Troisieme : bool; s_St_1_Troisieme : st_1; r_St_1_Deuxieme : bool;
    s_St_1_Deuxieme : st_1; r_St_1_Premier : bool; s_St_1_Premier : st_1;
    r_St_1_Zero : bool; s_St_1_Zero : st_1; ck : st_1;
    nr_St_1_Arriere : bool; ns_St_1_Arriere : st_1;
    num_St_1_Arriere : numero; nr_St_1_Cinquieme : bool;
    ns_St_1_Cinquieme : st_1; num_St_1_Cinquieme : numero;
    nr_St_1_Quatrieme : bool; ns_St_1_Quatrieme : st_1;
    num_St_1_Quatrieme : numero; nr_St_1_Troisieme : bool;
    ns_St_1_Troisieme : st_1; num_St_1_Troisieme : numero;
    nr_St_1_Deuxieme : bool; ns_St_1_Deuxieme : st_1;
    num_St_1_Deuxieme : numero; nr_St_1_Premier : bool;
    ns_St_1_Premier : st_1; num_St_1_Premier : numero; nr_St_1_Zero : bool;
    ns_St_1_Zero : st_1; num_St_1_Zero : numero; ck_2 : st_1; s : st_1;
    ns : st_1; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_1_Arriere -> r_St_1_Arriere)(St_1_Cinquieme -> r_St_1_Cinquieme)
      (St_1_Quatrieme -> r_St_1_Quatrieme)
      (St_1_Troisieme -> r_St_1_Troisieme)(St_1_Deuxieme -> r_St_1_Deuxieme)
      (St_1_Premier -> r_St_1_Premier)(St_1_Zero -> r_St_1_Zero);
  s =
    merge ck
      (St_1_Arriere -> s_St_1_Arriere)(St_1_Cinquieme -> s_St_1_Cinquieme)
      (St_1_Quatrieme -> s_St_1_Quatrieme)
      (St_1_Troisieme -> s_St_1_Troisieme)(St_1_Deuxieme -> s_St_1_Deuxieme)
      (St_1_Premier -> s_St_1_Premier)(St_1_Zero -> s_St_1_Zero);
  v = ((boiteDeVitesse when St_1_Arriere(ck)) = Un);
  v_5 = ((boiteDeVitesse when St_1_Arriere(ck)) = Deux);
  v_6 = ((boiteDeVitesse when St_1_Arriere(ck)) = Quatre);
  v_7 = ((boiteDeVitesse when St_1_Arriere(ck)) = Trois);
  v_8 = ((boiteDeVitesse when St_1_Arriere(ck)) = Cinq);
  v_9 = ((boiteDeVitesse when St_1_Arriere(ck)) = PointMort);
  v_10 = if v_9 then St_1_Zero else St_1_Arriere;
  v_11 = if v_9 then true else (pnr when St_1_Arriere(ck));
  v_12 = if v_8 then St_1_Cinquieme else v_10;
  v_13 = if v_8 then true else v_11;
  v_14 = if v_7 then St_1_Troisieme else v_12;
  v_15 = if v_7 then true else v_13;
  v_16 = if v_6 then St_1_Troisieme else v_14;
  v_17 = if v_6 then true else v_15;
  v_18 = if v_5 then St_1_Deuxieme else v_16;
  v_19 = if v_5 then true else v_17;
  s_St_1_Arriere = if v then St_1_Premier else v_18;
  r_St_1_Arriere = if v then true else v_19;
  v_20 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Un);
  v_21 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Deux);
  v_22 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Quatre);
  v_23 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Trois);
  v_24 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = Six);
  v_25 = ((boiteDeVitesse when St_1_Cinquieme(ck)) = PointMort);
  v_26 = if v_25 then St_1_Zero else St_1_Cinquieme;
  v_27 = if v_25 then true else (pnr when St_1_Cinquieme(ck));
  v_28 = if v_24 then St_1_Arriere else v_26;
  v_29 = if v_24 then true else v_27;
  v_30 = if v_23 then St_1_Troisieme else v_28;
  v_31 = if v_23 then true else v_29;
  v_32 = if v_22 then St_1_Troisieme else v_30;
  v_33 = if v_22 then true else v_31;
  v_34 = if v_21 then St_1_Deuxieme else v_32;
  v_35 = if v_21 then true else v_33;
  s_St_1_Cinquieme = if v_20 then St_1_Premier else v_34;
  r_St_1_Cinquieme = if v_20 then true else v_35;
  v_36 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Un);
  v_37 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Deux);
  v_38 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Trois);
  v_39 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Cinq);
  v_40 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = Six);
  v_41 = ((boiteDeVitesse when St_1_Quatrieme(ck)) = PointMort);
  v_42 = if v_41 then St_1_Zero else St_1_Quatrieme;
  v_43 = if v_41 then true else (pnr when St_1_Quatrieme(ck));
  v_44 = if v_40 then St_1_Arriere else v_42;
  v_45 = if v_40 then true else v_43;
  v_46 = if v_39 then St_1_Cinquieme else v_44;
  v_47 = if v_39 then true else v_45;
  v_48 = if v_38 then St_1_Troisieme else v_46;
  v_49 = if v_38 then true else v_47;
  v_50 = if v_37 then St_1_Deuxieme else v_48;
  v_51 = if v_37 then true else v_49;
  s_St_1_Quatrieme = if v_36 then St_1_Premier else v_50;
  r_St_1_Quatrieme = if v_36 then true else v_51;
  v_52 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Un);
  v_53 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Deux);
  v_54 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Quatre);
  v_55 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Cinq);
  v_56 = ((boiteDeVitesse when St_1_Troisieme(ck)) = Six);
  v_57 = ((boiteDeVitesse when St_1_Troisieme(ck)) = PointMort);
  v_58 = if v_57 then St_1_Zero else St_1_Troisieme;
  v_59 = if v_57 then true else (pnr when St_1_Troisieme(ck));
  v_60 = if v_56 then St_1_Arriere else v_58;
  v_61 = if v_56 then true else v_59;
  v_62 = if v_55 then St_1_Cinquieme else v_60;
  v_63 = if v_55 then true else v_61;
  v_64 = if v_54 then St_1_Quatrieme else v_62;
  v_65 = if v_54 then true else v_63;
  v_66 = if v_53 then St_1_Deuxieme else v_64;
  v_67 = if v_53 then true else v_65;
  s_St_1_Troisieme = if v_52 then St_1_Premier else v_66;
  r_St_1_Troisieme = if v_52 then true else v_67;
  v_68 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Un);
  v_69 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Trois);
  v_70 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Quatre);
  v_71 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Cinq);
  v_72 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = Six);
  v_73 = ((boiteDeVitesse when St_1_Deuxieme(ck)) = PointMort);
  v_74 = if v_73 then St_1_Zero else St_1_Deuxieme;
  v_75 = if v_73 then true else (pnr when St_1_Deuxieme(ck));
  v_76 = if v_72 then St_1_Arriere else v_74;
  v_77 = if v_72 then true else v_75;
  v_78 = if v_71 then St_1_Cinquieme else v_76;
  v_79 = if v_71 then true else v_77;
  v_80 = if v_70 then St_1_Quatrieme else v_78;
  v_81 = if v_70 then true else v_79;
  v_82 = if v_69 then St_1_Troisieme else v_80;
  v_83 = if v_69 then true else v_81;
  s_St_1_Deuxieme = if v_68 then St_1_Premier else v_82;
  r_St_1_Deuxieme = if v_68 then true else v_83;
  v_84 = ((boiteDeVitesse when St_1_Premier(ck)) = Deux);
  v_85 = ((boiteDeVitesse when St_1_Premier(ck)) = Trois);
  v_86 = ((boiteDeVitesse when St_1_Premier(ck)) = Quatre);
  v_87 = ((boiteDeVitesse when St_1_Premier(ck)) = Cinq);
  v_88 = ((boiteDeVitesse when St_1_Premier(ck)) = Six);
  v_89 = ((boiteDeVitesse when St_1_Premier(ck)) = PointMort);
  v_90 = if v_89 then St_1_Zero else St_1_Premier;
  v_91 = if v_89 then true else (pnr when St_1_Premier(ck));
  v_92 = if v_88 then St_1_Arriere else v_90;
  v_93 = if v_88 then true else v_91;
  v_94 = if v_87 then St_1_Cinquieme else v_92;
  v_95 = if v_87 then true else v_93;
  v_96 = if v_86 then St_1_Quatrieme else v_94;
  v_97 = if v_86 then true else v_95;
  v_98 = if v_85 then St_1_Troisieme else v_96;
  v_99 = if v_85 then true else v_97;
  s_St_1_Premier = if v_84 then St_1_Deuxieme else v_98;
  r_St_1_Premier = if v_84 then true else v_99;
  v_100 = ((boiteDeVitesse when St_1_Zero(ck)) = Deux);
  v_101 = ((boiteDeVitesse when St_1_Zero(ck)) = Trois);
  v_102 = ((boiteDeVitesse when St_1_Zero(ck)) = Quatre);
  v_103 = ((boiteDeVitesse when St_1_Zero(ck)) = Cinq);
  v_104 = ((boiteDeVitesse when St_1_Zero(ck)) = Six);
  v_105 = ((boiteDeVitesse when St_1_Zero(ck)) = Un);
  v_106 = if v_105 then St_1_Premier else St_1_Zero;
  v_107 = if v_105 then true else (pnr when St_1_Zero(ck));
  v_108 = if v_104 then St_1_Arriere else v_106;
  v_109 = if v_104 then true else v_107;
  v_110 = if v_103 then St_1_Cinquieme else v_108;
  v_111 = if v_103 then true else v_109;
  v_112 = if v_102 then St_1_Quatrieme else v_110;
  v_113 = if v_102 then true else v_111;
  v_114 = if v_101 then St_1_Troisieme else v_112;
  v_115 = if v_101 then true else v_113;
  s_St_1_Zero = if v_100 then St_1_Deuxieme else v_114;
  r_St_1_Zero = if v_100 then true else v_115;
  ck = St_1_Zero fby ns;
  nr =
    merge ck_2
      (St_1_Arriere -> nr_St_1_Arriere)(St_1_Cinquieme -> nr_St_1_Cinquieme)
      (St_1_Quatrieme -> nr_St_1_Quatrieme)
      (St_1_Troisieme -> nr_St_1_Troisieme)
      (St_1_Deuxieme -> nr_St_1_Deuxieme)(St_1_Premier -> nr_St_1_Premier)
      (St_1_Zero -> nr_St_1_Zero);
  ns =
    merge ck_2
      (St_1_Arriere -> ns_St_1_Arriere)(St_1_Cinquieme -> ns_St_1_Cinquieme)
      (St_1_Quatrieme -> ns_St_1_Quatrieme)
      (St_1_Troisieme -> ns_St_1_Troisieme)
      (St_1_Deuxieme -> ns_St_1_Deuxieme)(St_1_Premier -> ns_St_1_Premier)
      (St_1_Zero -> ns_St_1_Zero);
  num =
    merge ck_2
      (St_1_Arriere -> num_St_1_Arriere)
      (St_1_Cinquieme -> num_St_1_Cinquieme)
      (St_1_Quatrieme -> num_St_1_Quatrieme)
      (St_1_Troisieme -> num_St_1_Troisieme)
      (St_1_Deuxieme -> num_St_1_Deuxieme)(St_1_Premier -> num_St_1_Premier)
      (St_1_Zero -> num_St_1_Zero);
  ns_St_1_Arriere = St_1_Arriere;
  nr_St_1_Arriere = false;
  num_St_1_Arriere = Six;
  ns_St_1_Cinquieme = St_1_Cinquieme;
  nr_St_1_Cinquieme = false;
  num_St_1_Cinquieme = Cinq;
  ns_St_1_Quatrieme = St_1_Quatrieme;
  nr_St_1_Quatrieme = false;
  num_St_1_Quatrieme = Quatre;
  ns_St_1_Troisieme = St_1_Troisieme;
  nr_St_1_Troisieme = false;
  num_St_1_Troisieme = Trois;
  ns_St_1_Deuxieme = St_1_Deuxieme;
  nr_St_1_Deuxieme = false;
  num_St_1_Deuxieme = Deux;
  ns_St_1_Premier = St_1_Premier;
  nr_St_1_Premier = false;
  num_St_1_Premier = Un;
  ns_St_1_Zero = St_1_Zero;
  nr_St_1_Zero = false;
  num_St_1_Zero = PointMort;
  ck_2 = s;
  pnr = false fby nr
tel

node acceleration(frein : bool; accelerateur : bool) returns (avance : bool)
var r_St_2_Stop : bool; s_St_2_Stop : st_2; r_St_2_Move : bool;
    s_St_2_Move : st_2; ck : st_2; nr_St_2_Stop : bool; ns_St_2_Stop : st_2;
    avance_St_2_Stop : bool; nr_St_2_Move : bool; ns_St_2_Move : st_2;
    avance_St_2_Move : bool; ck_3 : st_2; s : st_2; ns : st_2; r : bool;
    nr : bool; pnr : bool;
let
  r = merge ck (St_2_Stop -> r_St_2_Stop)(St_2_Move -> r_St_2_Move);
  s = merge ck (St_2_Stop -> s_St_2_Stop)(St_2_Move -> s_St_2_Move);
  s_St_2_Stop =
    if (accelerateur when St_2_Stop(ck)) then St_2_Move else St_2_Stop;
  r_St_2_Stop =
    if (accelerateur when St_2_Stop(ck))
    then true
    else (pnr when St_2_Stop(ck));
  s_St_2_Move = if (frein when St_2_Move(ck)) then St_2_Stop else St_2_Move;
  r_St_2_Move =
    if (frein when St_2_Move(ck)) then true else (pnr when St_2_Move(ck));
  ck = St_2_Move fby ns;
  nr = merge ck_3 (St_2_Stop -> nr_St_2_Stop)(St_2_Move -> nr_St_2_Move);
  ns = merge ck_3 (St_2_Stop -> ns_St_2_Stop)(St_2_Move -> ns_St_2_Move);
  avance =
    merge ck_3 (St_2_Stop -> avance_St_2_Stop)(St_2_Move -> avance_St_2_Move);
  ns_St_2_Stop = St_2_Stop;
  nr_St_2_Stop = false;
  avance_St_2_Stop = false;
  ns_St_2_Move = St_2_Move;
  nr_St_2_Move = false;
  avance_St_2_Move = true;
  ck_3 = s;
  pnr = false fby nr
tel

node retroviseurs(normal : bool; jour : bool; nuit : bool)
returns (gerer : bool; sortie : retro)
var v_123 : bool; v_122 : st_3; v_121 : bool; v_120 : st_3; v_119 : bool;
    v_118 : bool; v_117 : bool; v_116 : bool; v : bool; v_132 : bool;
    v_131 : st_3; v_130 : bool; v_129 : st_3; v_128 : bool; v_127 : bool;
    v_126 : bool; v_125 : bool; v_124 : bool; v_141 : bool; v_140 : st_3;
    v_139 : bool; v_138 : st_3; v_137 : bool; v_136 : bool; v_135 : bool;
    v_134 : bool; v_133 : bool; v_145 : bool; v_144 : st_3; v_143 : bool;
    v_142 : st_3; r_St_3_PositionNuit : bool; s_St_3_PositionNuit : st_3;
    r_St_3_PositionJour : bool; s_St_3_PositionJour : st_3;
    r_St_3_PositionNormale : bool; s_St_3_PositionNormale : st_3;
    r_St_3_Desacitve : bool; s_St_3_Desacitve : st_3; ck : st_3;
    nr_St_3_PositionNuit : bool; ns_St_3_PositionNuit : st_3;
    sortie_St_3_PositionNuit : retro; gerer_St_3_PositionNuit : bool;
    nr_St_3_PositionJour : bool; ns_St_3_PositionJour : st_3;
    sortie_St_3_PositionJour : retro; gerer_St_3_PositionJour : bool;
    nr_St_3_PositionNormale : bool; ns_St_3_PositionNormale : st_3;
    sortie_St_3_PositionNormale : retro; gerer_St_3_PositionNormale : bool;
    nr_St_3_Desacitve : bool; ns_St_3_Desacitve : st_3;
    sortie_St_3_Desacitve : retro; gerer_St_3_Desacitve : bool; ck_4 : st_3;
    s : st_3; ns : st_3; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_3_PositionNuit -> r_St_3_PositionNuit)
      (St_3_PositionJour -> r_St_3_PositionJour)
      (St_3_PositionNormale -> r_St_3_PositionNormale)
      (St_3_Desacitve -> r_St_3_Desacitve);
  s =
    merge ck
      (St_3_PositionNuit -> s_St_3_PositionNuit)
      (St_3_PositionJour -> s_St_3_PositionJour)
      (St_3_PositionNormale -> s_St_3_PositionNormale)
      (St_3_Desacitve -> s_St_3_Desacitve);
  v = not((normal when St_3_PositionNuit(ck)));
  v_116 = not((jour when St_3_PositionNuit(ck)));
  v_117 = (v & v_116);
  v_118 = not((nuit when St_3_PositionNuit(ck)));
  v_119 = (v_117 & v_118);
  v_120 = if v_119 then St_3_Desacitve else St_3_PositionNuit;
  v_121 = if v_119 then true else (pnr when St_3_PositionNuit(ck));
  v_122 =
    if (normal when St_3_PositionNuit(ck))
    then St_3_PositionNormale
    else v_120;
  v_123 = if (normal when St_3_PositionNuit(ck)) then true else v_121;
  s_St_3_PositionNuit =
    if (jour when St_3_PositionNuit(ck)) then St_3_PositionJour else v_122;
  r_St_3_PositionNuit =
    if (jour when St_3_PositionNuit(ck)) then true else v_123;
  v_124 = not((normal when St_3_PositionJour(ck)));
  v_125 = not((jour when St_3_PositionJour(ck)));
  v_126 = (v_124 & v_125);
  v_127 = not((nuit when St_3_PositionJour(ck)));
  v_128 = (v_126 & v_127);
  v_129 = if v_128 then St_3_Desacitve else St_3_PositionJour;
  v_130 = if v_128 then true else (pnr when St_3_PositionJour(ck));
  v_131 =
    if (nuit when St_3_PositionJour(ck)) then St_3_PositionNuit else v_129;
  v_132 = if (nuit when St_3_PositionJour(ck)) then true else v_130;
  s_St_3_PositionJour =
    if (normal when St_3_PositionJour(ck))
    then St_3_PositionNormale
    else v_131;
  r_St_3_PositionJour =
    if (normal when St_3_PositionJour(ck)) then true else v_132;
  v_133 = not((normal when St_3_PositionNormale(ck)));
  v_134 = not((jour when St_3_PositionNormale(ck)));
  v_135 = (v_133 & v_134);
  v_136 = not((nuit when St_3_PositionNormale(ck)));
  v_137 = (v_135 & v_136);
  v_138 = if v_137 then St_3_Desacitve else St_3_PositionNormale;
  v_139 = if v_137 then true else (pnr when St_3_PositionNormale(ck));
  v_140 =
    if (nuit when St_3_PositionNormale(ck)) then St_3_PositionNuit else v_138;
  v_141 = if (nuit when St_3_PositionNormale(ck)) then true else v_139;
  s_St_3_PositionNormale =
    if (jour when St_3_PositionNormale(ck)) then St_3_PositionJour else v_140;
  r_St_3_PositionNormale =
    if (jour when St_3_PositionNormale(ck)) then true else v_141;
  v_142 =
    if (normal when St_3_Desacitve(ck))
    then St_3_PositionNormale
    else St_3_Desacitve;
  v_143 =
    if (normal when St_3_Desacitve(ck))
    then true
    else (pnr when St_3_Desacitve(ck));
  v_144 = if (nuit when St_3_Desacitve(ck)) then St_3_PositionNuit else v_142;
  v_145 = if (nuit when St_3_Desacitve(ck)) then true else v_143;
  s_St_3_Desacitve =
    if (jour when St_3_Desacitve(ck)) then St_3_PositionJour else v_144;
  r_St_3_Desacitve = if (jour when St_3_Desacitve(ck)) then true else v_145;
  ck = St_3_Desacitve fby ns;
  nr =
    merge ck_4
      (St_3_PositionNuit -> nr_St_3_PositionNuit)
      (St_3_PositionJour -> nr_St_3_PositionJour)
      (St_3_PositionNormale -> nr_St_3_PositionNormale)
      (St_3_Desacitve -> nr_St_3_Desacitve);
  ns =
    merge ck_4
      (St_3_PositionNuit -> ns_St_3_PositionNuit)
      (St_3_PositionJour -> ns_St_3_PositionJour)
      (St_3_PositionNormale -> ns_St_3_PositionNormale)
      (St_3_Desacitve -> ns_St_3_Desacitve);
  sortie =
    merge ck_4
      (St_3_PositionNuit -> sortie_St_3_PositionNuit)
      (St_3_PositionJour -> sortie_St_3_PositionJour)
      (St_3_PositionNormale -> sortie_St_3_PositionNormale)
      (St_3_Desacitve -> sortie_St_3_Desacitve);
  gerer =
    merge ck_4
      (St_3_PositionNuit -> gerer_St_3_PositionNuit)
      (St_3_PositionJour -> gerer_St_3_PositionJour)
      (St_3_PositionNormale -> gerer_St_3_PositionNormale)
      (St_3_Desacitve -> gerer_St_3_Desacitve);
  ns_St_3_PositionNuit = St_3_PositionNuit;
  nr_St_3_PositionNuit = false;
  sortie_St_3_PositionNuit = PositionNuit;
  gerer_St_3_PositionNuit = true;
  ns_St_3_PositionJour = St_3_PositionJour;
  nr_St_3_PositionJour = false;
  sortie_St_3_PositionJour = PositionJour;
  gerer_St_3_PositionJour = true;
  ns_St_3_PositionNormale = St_3_PositionNormale;
  nr_St_3_PositionNormale = false;
  sortie_St_3_PositionNormale = PositionNormale;
  gerer_St_3_PositionNormale = true;
  ns_St_3_Desacitve = St_3_Desacitve;
  nr_St_3_Desacitve = false;
  sortie_St_3_Desacitve = Desactive;
  gerer_St_3_Desacitve = false;
  ck_4 = s;
  pnr = false fby nr
tel

node essuieGlace(con : bool; cclose : bool; densite : lum)
returns (etat : typeBalayage)
var v_152 : bool; v_151 : st_4; v_150 : bool; v_149 : st_4; v_148 : bool;
    v_147 : bool; v_146 : bool; v : bool; v_160 : bool; v_159 : st_4;
    v_158 : bool; v_157 : st_4; v_156 : bool; v_155 : bool; v_154 : bool;
    v_153 : bool; v_168 : bool; v_167 : st_4; v_166 : bool; v_165 : st_4;
    v_164 : bool; v_163 : bool; v_162 : bool; v_161 : bool;
    r_St_4_BalayageContiu : bool; s_St_4_BalayageContiu : st_4;
    r_St_4_BalayageIntermittent : bool; s_St_4_BalayageIntermittent : st_4;
    r_St_4_BalayageUnique : bool; s_St_4_BalayageUnique : st_4;
    r_St_4_Desactive : bool; s_St_4_Desactive : st_4; ck : st_4;
    nr_St_4_BalayageContiu : bool; ns_St_4_BalayageContiu : st_4;
    etat_St_4_BalayageContiu : typeBalayage;
    nr_St_4_BalayageIntermittent : bool; ns_St_4_BalayageIntermittent : st_4;
    etat_St_4_BalayageIntermittent : typeBalayage;
    nr_St_4_BalayageUnique : bool; ns_St_4_BalayageUnique : st_4;
    etat_St_4_BalayageUnique : typeBalayage; nr_St_4_Desactive : bool;
    ns_St_4_Desactive : st_4; etat_St_4_Desactive : typeBalayage;
    ck_5 : st_4; s : st_4; ns : st_4; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_4_BalayageContiu -> r_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> r_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> r_St_4_BalayageUnique)
      (St_4_Desactive -> r_St_4_Desactive);
  s =
    merge ck
      (St_4_BalayageContiu -> s_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> s_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> s_St_4_BalayageUnique)
      (St_4_Desactive -> s_St_4_Desactive);
  v = ((densite when St_4_BalayageContiu(ck)) = Low);
  v_146 = ((con when St_4_BalayageContiu(ck)) & v);
  v_147 = ((densite when St_4_BalayageContiu(ck)) = Normal);
  v_148 = ((con when St_4_BalayageContiu(ck)) & v_147);
  v_149 = if v_148 then St_4_BalayageIntermittent else St_4_BalayageContiu;
  v_150 = if v_148 then true else (pnr when St_4_BalayageContiu(ck));
  v_151 = if v_146 then St_4_BalayageUnique else v_149;
  v_152 = if v_146 then true else v_150;
  s_St_4_BalayageContiu =
    if (cclose when St_4_BalayageContiu(ck)) then St_4_Desactive else v_151;
  r_St_4_BalayageContiu =
    if (cclose when St_4_BalayageContiu(ck)) then true else v_152;
  v_153 = ((densite when St_4_BalayageIntermittent(ck)) = High);
  v_154 = ((con when St_4_BalayageIntermittent(ck)) & v_153);
  v_155 = ((densite when St_4_BalayageIntermittent(ck)) = Low);
  v_156 = ((con when St_4_BalayageIntermittent(ck)) & v_155);
  v_157 = if v_156 then St_4_BalayageUnique else St_4_BalayageIntermittent;
  v_158 = if v_156 then true else (pnr when St_4_BalayageIntermittent(ck));
  v_159 = if v_154 then St_4_BalayageContiu else v_157;
  v_160 = if v_154 then true else v_158;
  s_St_4_BalayageIntermittent =
    if (cclose when St_4_BalayageIntermittent(ck))
    then St_4_Desactive
    else v_159;
  r_St_4_BalayageIntermittent =
    if (cclose when St_4_BalayageIntermittent(ck)) then true else v_160;
  v_161 = ((densite when St_4_BalayageUnique(ck)) = High);
  v_162 = ((con when St_4_BalayageUnique(ck)) & v_161);
  v_163 = ((densite when St_4_BalayageUnique(ck)) = Normal);
  v_164 = ((con when St_4_BalayageUnique(ck)) & v_163);
  v_165 = if v_164 then St_4_BalayageIntermittent else St_4_BalayageUnique;
  v_166 = if v_164 then true else (pnr when St_4_BalayageUnique(ck));
  v_167 = if v_162 then St_4_BalayageContiu else v_165;
  v_168 = if v_162 then true else v_166;
  s_St_4_BalayageUnique =
    if (cclose when St_4_BalayageUnique(ck)) then St_4_Desactive else v_167;
  r_St_4_BalayageUnique =
    if (cclose when St_4_BalayageUnique(ck)) then true else v_168;
  s_St_4_Desactive =
    if (con when St_4_Desactive(ck))
    then St_4_BalayageUnique
    else St_4_Desactive;
  r_St_4_Desactive =
    if (con when St_4_Desactive(ck))
    then true
    else (pnr when St_4_Desactive(ck));
  ck = St_4_Desactive fby ns;
  nr =
    merge ck_5
      (St_4_BalayageContiu -> nr_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> nr_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> nr_St_4_BalayageUnique)
      (St_4_Desactive -> nr_St_4_Desactive);
  ns =
    merge ck_5
      (St_4_BalayageContiu -> ns_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> ns_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> ns_St_4_BalayageUnique)
      (St_4_Desactive -> ns_St_4_Desactive);
  etat =
    merge ck_5
      (St_4_BalayageContiu -> etat_St_4_BalayageContiu)
      (St_4_BalayageIntermittent -> etat_St_4_BalayageIntermittent)
      (St_4_BalayageUnique -> etat_St_4_BalayageUnique)
      (St_4_Desactive -> etat_St_4_Desactive);
  ns_St_4_BalayageContiu = St_4_BalayageContiu;
  nr_St_4_BalayageContiu = false;
  etat_St_4_BalayageContiu = Contiu;
  ns_St_4_BalayageIntermittent = St_4_BalayageIntermittent;
  nr_St_4_BalayageIntermittent = false;
  etat_St_4_BalayageIntermittent = Intermittent;
  ns_St_4_BalayageUnique = St_4_BalayageUnique;
  nr_St_4_BalayageUnique = false;
  etat_St_4_BalayageUnique = Unique;
  ns_St_4_Desactive = St_4_Desactive;
  nr_St_4_Desactive = false;
  etat_St_4_Desactive = Deactivated;
  ck_5 = s;
  pnr = false fby nr
tel

node accident(detectionAccident : bool)
returns (airbag : bool; emissionAppelUrgence : bool)
var v : bool; r_St_5_Active : bool; s_St_5_Active : st_5;
    r_St_5_Desactive : bool; s_St_5_Desactive : st_5; ck : st_5;
    nr_St_5_Active : bool; ns_St_5_Active : st_5;
    emissionAppelUrgence_St_5_Active : bool; airbag_St_5_Active : bool;
    nr_St_5_Desactive : bool; ns_St_5_Desactive : st_5;
    emissionAppelUrgence_St_5_Desactive : bool; airbag_St_5_Desactive : bool;
    ck_6 : st_5; s : st_5; ns : st_5; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_5_Active -> r_St_5_Active)(St_5_Desactive -> r_St_5_Desactive);
  s =
    merge ck
      (St_5_Active -> s_St_5_Active)(St_5_Desactive -> s_St_5_Desactive);
  v = not((detectionAccident when St_5_Active(ck)));
  s_St_5_Active = if v then St_5_Active else St_5_Active;
  r_St_5_Active = if v then true else (pnr when St_5_Active(ck));
  s_St_5_Desactive =
    if (detectionAccident when St_5_Desactive(ck))
    then St_5_Active
    else St_5_Desactive;
  r_St_5_Desactive =
    if (detectionAccident when St_5_Desactive(ck))
    then true
    else (pnr when St_5_Desactive(ck));
  ck = St_5_Desactive fby ns;
  nr =
    merge ck_6
      (St_5_Active -> nr_St_5_Active)(St_5_Desactive -> nr_St_5_Desactive);
  ns =
    merge ck_6
      (St_5_Active -> ns_St_5_Active)(St_5_Desactive -> ns_St_5_Desactive);
  emissionAppelUrgence =
    merge ck_6
      (St_5_Active -> emissionAppelUrgence_St_5_Active)
      (St_5_Desactive -> emissionAppelUrgence_St_5_Desactive);
  airbag =
    merge ck_6
      (St_5_Active -> airbag_St_5_Active)
      (St_5_Desactive -> airbag_St_5_Desactive);
  ns_St_5_Active = St_5_Active;
  nr_St_5_Active = false;
  airbag_St_5_Active = true;
  emissionAppelUrgence_St_5_Active = true;
  ns_St_5_Desactive = St_5_Desactive;
  nr_St_5_Desactive = false;
  airbag_St_5_Desactive = false;
  emissionAppelUrgence_St_5_Desactive = false;
  ck_6 = s;
  pnr = false fby nr
tel

node avertissement(detectionDepassementLigne : bool;
                    detectionVolantLibre : bool;
                    detectionDefaillanceTechnique : bool;
                    detectionVehiculeAngleMort : bool)
returns (depassementLigne : bool; volantLibre : bool;
          defaillanceTechnique : bool; dangerAngleMort : bool)
var v_174 : bool; v_173 : bool; v_172 : bool; v_171 : bool; v_170 : bool;
    v_169 : bool; v : bool; v_177 : bool; v_176 : bool; v_175 : bool;
    r_St_6_Detection : bool; s_St_6_Detection : st_6; r_St_6_Idle : bool;
    s_St_6_Idle : st_6; ck : st_6; nr_St_6_Detection : bool;
    ns_St_6_Detection : st_6; dangerAngleMort_St_6_Detection : bool;
    defaillanceTechnique_St_6_Detection : bool;
    volantLibre_St_6_Detection : bool;
    depassementLigne_St_6_Detection : bool; nr_St_6_Idle : bool;
    ns_St_6_Idle : st_6; dangerAngleMort_St_6_Idle : bool;
    defaillanceTechnique_St_6_Idle : bool; volantLibre_St_6_Idle : bool;
    depassementLigne_St_6_Idle : bool; ck_7 : st_6; s : st_6; ns : st_6;
    r : bool; nr : bool; pnr : bool;
let
  r = merge ck (St_6_Detection -> r_St_6_Detection)(St_6_Idle -> r_St_6_Idle);
  s = merge ck (St_6_Detection -> s_St_6_Detection)(St_6_Idle -> s_St_6_Idle);
  v = not((detectionDepassementLigne when St_6_Detection(ck)));
  v_169 = not((detectionVolantLibre when St_6_Detection(ck)));
  v_170 = (v & v_169);
  v_171 = not((detectionDefaillanceTechnique when St_6_Detection(ck)));
  v_172 = (v_170 & v_171);
  v_173 = not((detectionVehiculeAngleMort when St_6_Detection(ck)));
  v_174 = (v_172 & v_173);
  s_St_6_Detection = if v_174 then St_6_Idle else St_6_Detection;
  r_St_6_Detection = if v_174 then true else (pnr when St_6_Detection(ck));
  v_175 =
    ((detectionDepassementLigne when St_6_Idle(ck)) or
     (detectionVolantLibre when St_6_Idle(ck)));
  v_176 = (v_175 or (detectionDefaillanceTechnique when St_6_Idle(ck)));
  v_177 = (v_176 or (detectionVehiculeAngleMort when St_6_Idle(ck)));
  s_St_6_Idle = if v_177 then St_6_Detection else St_6_Idle;
  r_St_6_Idle = if v_177 then true else (pnr when St_6_Idle(ck));
  ck = St_6_Idle fby ns;
  nr =
    merge ck_7
      (St_6_Detection -> nr_St_6_Detection)(St_6_Idle -> nr_St_6_Idle);
  ns =
    merge ck_7
      (St_6_Detection -> ns_St_6_Detection)(St_6_Idle -> ns_St_6_Idle);
  dangerAngleMort =
    merge ck_7
      (St_6_Detection -> dangerAngleMort_St_6_Detection)
      (St_6_Idle -> dangerAngleMort_St_6_Idle);
  defaillanceTechnique =
    merge ck_7
      (St_6_Detection -> defaillanceTechnique_St_6_Detection)
      (St_6_Idle -> defaillanceTechnique_St_6_Idle);
  volantLibre =
    merge ck_7
      (St_6_Detection -> volantLibre_St_6_Detection)
      (St_6_Idle -> volantLibre_St_6_Idle);
  depassementLigne =
    merge ck_7
      (St_6_Detection -> depassementLigne_St_6_Detection)
      (St_6_Idle -> depassementLigne_St_6_Idle);
  ns_St_6_Detection = St_6_Detection;
  nr_St_6_Detection = false;
  depassementLigne_St_6_Detection =
    (detectionDepassementLigne when St_6_Detection(ck_7));
  volantLibre_St_6_Detection =
    (detectionVolantLibre when St_6_Detection(ck_7));
  defaillanceTechnique_St_6_Detection =
    (detectionDefaillanceTechnique when St_6_Detection(ck_7));
  dangerAngleMort_St_6_Detection =
    (detectionVehiculeAngleMort when St_6_Detection(ck_7));
  ns_St_6_Idle = St_6_Idle;
  nr_St_6_Idle = false;
  depassementLigne_St_6_Idle = false;
  volantLibre_St_6_Idle = false;
  defaillanceTechnique_St_6_Idle = false;
  dangerAngleMort_St_6_Idle = false;
  ck_7 = s;
  pnr = false fby nr
tel

node securite(presencePieton : bool; presencevehicule : bool; feu : couleur)
returns (frein : bool; causeFreinage : cause)
var v_187 : bool; v_186 : st_7; v_185 : bool; v_184 : st_7; v_183 : bool;
    v_182 : bool; v_181 : bool; v_180 : bool; v_179 : bool; v_178 : bool;
    v : bool; v_202 : bool; v_201 : st_7; v_200 : bool; v_199 : st_7;
    v_198 : bool; v_197 : bool; v_196 : bool; v_195 : bool; v_194 : bool;
    v_193 : bool; v_192 : bool; v_191 : bool; v_190 : bool; v_189 : bool;
    v_188 : bool; v_219 : bool; v_218 : st_7; v_217 : bool; v_216 : st_7;
    v_215 : bool; v_214 : bool; v_213 : bool; v_212 : bool; v_211 : bool;
    v_210 : bool; v_209 : bool; v_208 : bool; v_207 : bool; v_206 : bool;
    v_205 : bool; v_204 : bool; v_203 : bool; v_231 : bool; v_230 : st_7;
    v_229 : bool; v_228 : st_7; v_227 : bool; v_226 : bool; v_225 : bool;
    v_224 : bool; v_223 : bool; v_222 : bool; v_221 : bool; v_220 : bool;
    r_St_7_Feu : bool; s_St_7_Feu : st_7; r_St_7_Vehicule : bool;
    s_St_7_Vehicule : st_7; r_St_7_Pieton : bool; s_St_7_Pieton : st_7;
    r_St_7_Acceleration : bool; s_St_7_Acceleration : st_7; ck : st_7;
    nr_St_7_Feu : bool; ns_St_7_Feu : st_7; causeFreinage_St_7_Feu : cause;
    frein_St_7_Feu : bool; nr_St_7_Vehicule : bool; ns_St_7_Vehicule : st_7;
    causeFreinage_St_7_Vehicule : cause; frein_St_7_Vehicule : bool;
    nr_St_7_Pieton : bool; ns_St_7_Pieton : st_7;
    causeFreinage_St_7_Pieton : cause; frein_St_7_Pieton : bool;
    nr_St_7_Acceleration : bool; ns_St_7_Acceleration : st_7;
    causeFreinage_St_7_Acceleration : cause; frein_St_7_Acceleration : bool;
    ck_8 : st_7; s : st_7; ns : st_7; r : bool; nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_7_Feu -> r_St_7_Feu)(St_7_Vehicule -> r_St_7_Vehicule)
      (St_7_Pieton -> r_St_7_Pieton)
      (St_7_Acceleration -> r_St_7_Acceleration);
  s =
    merge ck
      (St_7_Feu -> s_St_7_Feu)(St_7_Vehicule -> s_St_7_Vehicule)
      (St_7_Pieton -> s_St_7_Pieton)
      (St_7_Acceleration -> s_St_7_Acceleration);
  v = not((presencePieton when St_7_Feu(ck)));
  v_178 = not((presencevehicule when St_7_Feu(ck)));
  v_179 = (v & v_178);
  v_180 = ((feu when St_7_Feu(ck)) = Vert);
  v_181 = (v_179 & v_180);
  v_182 = not((presencePieton when St_7_Feu(ck)));
  v_183 = (v_182 & (presencevehicule when St_7_Feu(ck)));
  v_184 = if v_183 then St_7_Vehicule else St_7_Feu;
  v_185 = if v_183 then true else (pnr when St_7_Feu(ck));
  v_186 = if (presencePieton when St_7_Feu(ck)) then St_7_Pieton else v_184;
  v_187 = if (presencePieton when St_7_Feu(ck)) then true else v_185;
  s_St_7_Feu = if v_181 then St_7_Acceleration else v_186;
  r_St_7_Feu = if v_181 then true else v_187;
  v_188 = not((presencePieton when St_7_Vehicule(ck)));
  v_189 = not((presencevehicule when St_7_Vehicule(ck)));
  v_190 = (v_188 & v_189);
  v_191 = ((feu when St_7_Vehicule(ck)) = Vert);
  v_192 = (v_190 & v_191);
  v_193 = not((presencePieton when St_7_Vehicule(ck)));
  v_194 = not((presencevehicule when St_7_Vehicule(ck)));
  v_195 = (v_193 & v_194);
  v_196 = ((feu when St_7_Vehicule(ck)) = Vert);
  v_197 = not(v_196);
  v_198 = (v_195 & v_197);
  v_199 = if v_198 then St_7_Feu else St_7_Vehicule;
  v_200 = if v_198 then true else (pnr when St_7_Vehicule(ck));
  v_201 =
    if (presencePieton when St_7_Vehicule(ck)) then St_7_Pieton else v_199;
  v_202 = if (presencePieton when St_7_Vehicule(ck)) then true else v_200;
  s_St_7_Vehicule = if v_192 then St_7_Acceleration else v_201;
  r_St_7_Vehicule = if v_192 then true else v_202;
  v_203 = not((presencePieton when St_7_Pieton(ck)));
  v_204 = not((presencevehicule when St_7_Pieton(ck)));
  v_205 = (v_203 & v_204);
  v_206 = ((feu when St_7_Pieton(ck)) = Vert);
  v_207 = (v_205 & v_206);
  v_208 = not((presencePieton when St_7_Pieton(ck)));
  v_209 = (v_208 & (presencevehicule when St_7_Pieton(ck)));
  v_210 = not((presencePieton when St_7_Pieton(ck)));
  v_211 = not((presencevehicule when St_7_Pieton(ck)));
  v_212 = (v_210 & v_211);
  v_213 = ((feu when St_7_Pieton(ck)) = Vert);
  v_214 = not(v_213);
  v_215 = (v_212 & v_214);
  v_216 = if v_215 then St_7_Feu else St_7_Pieton;
  v_217 = if v_215 then true else (pnr when St_7_Pieton(ck));
  v_218 = if v_209 then St_7_Vehicule else v_216;
  v_219 = if v_209 then true else v_217;
  s_St_7_Pieton = if v_207 then St_7_Acceleration else v_218;
  r_St_7_Pieton = if v_207 then true else v_219;
  v_220 = not((presencePieton when St_7_Acceleration(ck)));
  v_221 = (v_220 & (presencevehicule when St_7_Acceleration(ck)));
  v_222 = not((presencePieton when St_7_Acceleration(ck)));
  v_223 = not((presencevehicule when St_7_Acceleration(ck)));
  v_224 = (v_222 & v_223);
  v_225 = ((feu when St_7_Acceleration(ck)) = Vert);
  v_226 = not(v_225);
  v_227 = (v_224 & v_226);
  v_228 = if v_227 then St_7_Feu else St_7_Acceleration;
  v_229 = if v_227 then true else (pnr when St_7_Acceleration(ck));
  v_230 = if v_221 then St_7_Vehicule else v_228;
  v_231 = if v_221 then true else v_229;
  s_St_7_Acceleration =
    if (presencePieton when St_7_Acceleration(ck))
    then St_7_Pieton
    else v_230;
  r_St_7_Acceleration =
    if (presencePieton when St_7_Acceleration(ck)) then true else v_231;
  ck = St_7_Acceleration fby ns;
  nr =
    merge ck_8
      (St_7_Feu -> nr_St_7_Feu)(St_7_Vehicule -> nr_St_7_Vehicule)
      (St_7_Pieton -> nr_St_7_Pieton)
      (St_7_Acceleration -> nr_St_7_Acceleration);
  ns =
    merge ck_8
      (St_7_Feu -> ns_St_7_Feu)(St_7_Vehicule -> ns_St_7_Vehicule)
      (St_7_Pieton -> ns_St_7_Pieton)
      (St_7_Acceleration -> ns_St_7_Acceleration);
  causeFreinage =
    merge ck_8
      (St_7_Feu -> causeFreinage_St_7_Feu)
      (St_7_Vehicule -> causeFreinage_St_7_Vehicule)
      (St_7_Pieton -> causeFreinage_St_7_Pieton)
      (St_7_Acceleration -> causeFreinage_St_7_Acceleration);
  frein =
    merge ck_8
      (St_7_Feu -> frein_St_7_Feu)(St_7_Vehicule -> frein_St_7_Vehicule)
      (St_7_Pieton -> frein_St_7_Pieton)
      (St_7_Acceleration -> frein_St_7_Acceleration);
  ns_St_7_Feu = St_7_Feu;
  nr_St_7_Feu = false;
  causeFreinage_St_7_Feu = Feu;
  frein_St_7_Feu = true;
  ns_St_7_Vehicule = St_7_Vehicule;
  nr_St_7_Vehicule = false;
  causeFreinage_St_7_Vehicule = Presencevehicule;
  frein_St_7_Vehicule = true;
  ns_St_7_Pieton = St_7_Pieton;
  nr_St_7_Pieton = false;
  causeFreinage_St_7_Pieton = PresencePieton;
  frein_St_7_Pieton = true;
  ns_St_7_Acceleration = St_7_Acceleration;
  nr_St_7_Acceleration = false;
  causeFreinage_St_7_Acceleration = None;
  frein_St_7_Acceleration = false;
  ck_8 = s;
  pnr = false fby nr
tel

node temperature(activated : bool; capteur : float)
returns (qt : float; etat : bool)
var v : bool; r_St_8_Active : bool; s_St_8_Active : st_8;
    r_St_8_Desactive : bool; s_St_8_Desactive : st_8; ck : st_8;
    nr_St_8_Active : bool; ns_St_8_Active : st_8; etat_St_8_Active : bool;
    qt_St_8_Active : float; nr_St_8_Desactive : bool;
    ns_St_8_Desactive : st_8; etat_St_8_Desactive : bool;
    qt_St_8_Desactive : float; ck_9 : st_8; s : st_8; ns : st_8; r : bool;
    nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_8_Active -> r_St_8_Active)(St_8_Desactive -> r_St_8_Desactive);
  s =
    merge ck
      (St_8_Active -> s_St_8_Active)(St_8_Desactive -> s_St_8_Desactive);
  v = not((activated when St_8_Active(ck)));
  s_St_8_Active = if v then St_8_Desactive else St_8_Active;
  r_St_8_Active = if v then true else (pnr when St_8_Active(ck));
  s_St_8_Desactive =
    if (activated when St_8_Desactive(ck))
    then St_8_Active
    else St_8_Desactive;
  r_St_8_Desactive =
    if (activated when St_8_Desactive(ck))
    then true
    else (pnr when St_8_Desactive(ck));
  ck = St_8_Desactive fby ns;
  nr =
    merge ck_9
      (St_8_Active -> nr_St_8_Active)(St_8_Desactive -> nr_St_8_Desactive);
  ns =
    merge ck_9
      (St_8_Active -> ns_St_8_Active)(St_8_Desactive -> ns_St_8_Desactive);
  etat =
    merge ck_9
      (St_8_Active -> etat_St_8_Active)
      (St_8_Desactive -> etat_St_8_Desactive);
  qt =
    merge ck_9
      (St_8_Active -> qt_St_8_Active)(St_8_Desactive -> qt_St_8_Desactive);
  ns_St_8_Active = St_8_Active;
  nr_St_8_Active = false;
  qt_St_8_Active = (19.000000 -. (capteur when St_8_Active(ck_9)));
  etat_St_8_Active = true;
  ns_St_8_Desactive = St_8_Desactive;
  nr_St_8_Desactive = false;
  qt_St_8_Desactive = 0.000000;
  etat_St_8_Desactive = false;
  ck_9 = s;
  pnr = false fby nr
tel

node controleurPhares(tdn : bool; tin : bool; cpn : bool; i : bool; c : bool;
                       v : bool; p : bool)
returns (codes : bool; phares : bool; veilleuses : bool; etat : etatPhares)
var v_235 : bool; v_234 : st_9; v_233 : bool; v_232 : st_9; v_241 : bool;
    v_240 : st_9; v_239 : bool; v_238 : st_9; v_237 : bool; v_236 : st_9;
    v_245 : bool; v_244 : st_9; v_243 : bool; v_242 : st_9; v_249 : bool;
    v_248 : st_9; v_247 : bool; v_246 : st_9; r_St_9_Phares : bool;
    s_St_9_Phares : st_9; r_St_9_Codes : bool; s_St_9_Codes : st_9;
    r_St_9_Veilleuses : bool; s_St_9_Veilleuses : st_9; r_St_9_Idle : bool;
    s_St_9_Idle : st_9; ck : st_9; nr_St_9_Phares : bool;
    ns_St_9_Phares : st_9; etat_St_9_Phares : etatPhares;
    veilleuses_St_9_Phares : bool; phares_St_9_Phares : bool;
    codes_St_9_Phares : bool; nr_St_9_Codes : bool; ns_St_9_Codes : st_9;
    etat_St_9_Codes : etatPhares; veilleuses_St_9_Codes : bool;
    phares_St_9_Codes : bool; codes_St_9_Codes : bool;
    nr_St_9_Veilleuses : bool; ns_St_9_Veilleuses : st_9;
    etat_St_9_Veilleuses : etatPhares; veilleuses_St_9_Veilleuses : bool;
    phares_St_9_Veilleuses : bool; codes_St_9_Veilleuses : bool;
    nr_St_9_Idle : bool; ns_St_9_Idle : st_9; etat_St_9_Idle : etatPhares;
    veilleuses_St_9_Idle : bool; phares_St_9_Idle : bool;
    codes_St_9_Idle : bool; ck_10 : st_9; s : st_9; ns : st_9; r : bool;
    nr : bool; pnr : bool;
let
  r =
    merge ck
      (St_9_Phares -> r_St_9_Phares)(St_9_Codes -> r_St_9_Codes)
      (St_9_Veilleuses -> r_St_9_Veilleuses)(St_9_Idle -> r_St_9_Idle);
  s =
    merge ck
      (St_9_Phares -> s_St_9_Phares)(St_9_Codes -> s_St_9_Codes)
      (St_9_Veilleuses -> s_St_9_Veilleuses)(St_9_Idle -> s_St_9_Idle);
  v_232 = if (i when St_9_Phares(ck)) then St_9_Idle else St_9_Phares;
  v_233 =
    if (i when St_9_Phares(ck)) then true else (pnr when St_9_Phares(ck));
  v_234 = if (v when St_9_Phares(ck)) then St_9_Veilleuses else v_232;
  v_235 = if (v when St_9_Phares(ck)) then true else v_233;
  s_St_9_Phares = if (cpn when St_9_Phares(ck)) then St_9_Codes else v_234;
  r_St_9_Phares = if (cpn when St_9_Phares(ck)) then true else v_235;
  v_236 = if (i when St_9_Codes(ck)) then St_9_Idle else St_9_Codes;
  v_237 = if (i when St_9_Codes(ck)) then true else (pnr when St_9_Codes(ck));
  v_238 = if (c when St_9_Codes(ck)) then St_9_Codes else v_236;
  v_239 = if (c when St_9_Codes(ck)) then true else v_237;
  v_240 = if (cpn when St_9_Codes(ck)) then St_9_Phares else v_238;
  v_241 = if (cpn when St_9_Codes(ck)) then true else v_239;
  s_St_9_Codes = if (tin when St_9_Codes(ck)) then St_9_Veilleuses else v_240;
  r_St_9_Codes = if (tin when St_9_Codes(ck)) then true else v_241;
  v_242 =
    if (p when St_9_Veilleuses(ck)) then St_9_Phares else St_9_Veilleuses;
  v_243 =
    if (p when St_9_Veilleuses(ck))
    then true
    else (pnr when St_9_Veilleuses(ck));
  v_244 = if (tdn when St_9_Veilleuses(ck)) then St_9_Codes else v_242;
  v_245 = if (tdn when St_9_Veilleuses(ck)) then true else v_243;
  s_St_9_Veilleuses =
    if (tin when St_9_Veilleuses(ck)) then St_9_Idle else v_244;
  r_St_9_Veilleuses = if (tin when St_9_Veilleuses(ck)) then true else v_245;
  v_246 = if (p when St_9_Idle(ck)) then St_9_Phares else St_9_Idle;
  v_247 = if (p when St_9_Idle(ck)) then true else (pnr when St_9_Idle(ck));
  v_248 = if (c when St_9_Idle(ck)) then St_9_Codes else v_246;
  v_249 = if (c when St_9_Idle(ck)) then true else v_247;
  s_St_9_Idle = if (tdn when St_9_Idle(ck)) then St_9_Veilleuses else v_248;
  r_St_9_Idle = if (tdn when St_9_Idle(ck)) then true else v_249;
  ck = St_9_Idle fby ns;
  nr =
    merge ck_10
      (St_9_Phares -> nr_St_9_Phares)(St_9_Codes -> nr_St_9_Codes)
      (St_9_Veilleuses -> nr_St_9_Veilleuses)(St_9_Idle -> nr_St_9_Idle);
  ns =
    merge ck_10
      (St_9_Phares -> ns_St_9_Phares)(St_9_Codes -> ns_St_9_Codes)
      (St_9_Veilleuses -> ns_St_9_Veilleuses)(St_9_Idle -> ns_St_9_Idle);
  etat =
    merge ck_10
      (St_9_Phares -> etat_St_9_Phares)(St_9_Codes -> etat_St_9_Codes)
      (St_9_Veilleuses -> etat_St_9_Veilleuses)(St_9_Idle -> etat_St_9_Idle);
  veilleuses =
    merge ck_10
      (St_9_Phares -> veilleuses_St_9_Phares)
      (St_9_Codes -> veilleuses_St_9_Codes)
      (St_9_Veilleuses -> veilleuses_St_9_Veilleuses)
      (St_9_Idle -> veilleuses_St_9_Idle);
  phares =
    merge ck_10
      (St_9_Phares -> phares_St_9_Phares)(St_9_Codes -> phares_St_9_Codes)
      (St_9_Veilleuses -> phares_St_9_Veilleuses)
      (St_9_Idle -> phares_St_9_Idle);
  codes =
    merge ck_10
      (St_9_Phares -> codes_St_9_Phares)(St_9_Codes -> codes_St_9_Codes)
      (St_9_Veilleuses -> codes_St_9_Veilleuses)
      (St_9_Idle -> codes_St_9_Idle);
  ns_St_9_Phares = St_9_Phares;
  nr_St_9_Phares = false;
  codes_St_9_Phares = false;
  phares_St_9_Phares = true;
  veilleuses_St_9_Phares = false;
  etat_St_9_Phares = Phares;
  ns_St_9_Codes = St_9_Codes;
  nr_St_9_Codes = false;
  codes_St_9_Codes = true;
  phares_St_9_Codes = false;
  veilleuses_St_9_Codes = false;
  etat_St_9_Codes = Codes;
  ns_St_9_Veilleuses = St_9_Veilleuses;
  nr_St_9_Veilleuses = false;
  codes_St_9_Veilleuses = false;
  phares_St_9_Veilleuses = false;
  veilleuses_St_9_Veilleuses = true;
  etat_St_9_Veilleuses = Veilleuses;
  ns_St_9_Idle = St_9_Idle;
  nr_St_9_Idle = false;
  codes_St_9_Idle = false;
  phares_St_9_Idle = false;
  veilleuses_St_9_Idle = false;
  etat_St_9_Idle = NoLum;
  ck_10 = s;
  pnr = false fby nr
tel

node automobile(cleVoiture : bool; commandeVoiture : bool;
                 capteurPluie : bool; detectionAccident : bool;
                 detectionLigne : bool; detectionVolantLibre : bool;
                 detectionDefaillanceTechnique : bool;
                 detectionAngleMort : bool; detectionPresencePieton : bool;
                 detectionPresencevehicule : bool;
                 activeRegulateurTemperature : bool; lumiere : lum;
                 densitePluie : lum; capteurTemperature : float;
                 capteurDectecteurFeu : couleur)
returns (moteur : bool; avance : bool; retroviseurActive : bool;
          etatRegulateurTemperature : bool; accident : bool; ligne : bool;
          volantLibre : bool; defaillanceTechnique : bool; angleMort : bool;
          freinage : bool; property : bool; causeFreinage : cause;
          vitesses : numero; quantiteRegule : float; phares : etatPhares;
          retroviseurStatus : retro; essuieGlace : typeBalayage)
contract
  
  assume true@ enforce property]
                 with (con : bool; cclose : bool; td : bool; ti : bool;
                        cp : bool; frein : bool; accelerateur : bool;
                        normal : bool; jour : bool; nuit : bool; i : bool;
                        c : bool; v : bool; p : bool;
                        boiteDeVitesse : numero)
                 var v_337 : bool; v_340 : bool; v_339 : bool; v_338 : bool;
                     r_9_St_19_Eteint : bool; s_9_St_19_Eteint : st_19;
                     r_9_St_19_Allumer : bool; s_9_St_19_Allumer : st_19;
                     ck : st_19; nr_9_St_19_Eteint : bool;
                     ns_9_St_19_Eteint : st_19; etat_St_19_Eteint : bool;
                     nr_9_St_19_Allumer : bool; ns_9_St_19_Allumer : st_19;
                     etat_St_19_Allumer : bool; ck_11 : st_19; v_356 : bool;
                     v_355 : st_18; v_354 : bool; v_353 : st_18;
                     v_352 : bool; v_351 : st_18; v_350 : bool;
                     v_349 : st_18; v_348 : bool; v_347 : st_18;
                     v_346 : bool; v_345 : bool; v_344 : bool; v_343 : bool;
                     v_342 : bool; v_341 : bool; v_372 : bool; v_371 : st_18;
                     v_370 : bool; v_369 : st_18; v_368 : bool;
                     v_367 : st_18; v_366 : bool; v_365 : st_18;
                     v_364 : bool; v_363 : st_18; v_362 : bool; v_361 : bool;
                     v_360 : bool; v_359 : bool; v_358 : bool; v_357 : bool;
                     v_388 : bool; v_387 : st_18; v_386 : bool;
                     v_385 : st_18; v_384 : bool; v_383 : st_18;
                     v_382 : bool; v_381 : st_18; v_380 : bool;
                     v_379 : st_18; v_378 : bool; v_377 : bool; v_376 : bool;
                     v_375 : bool; v_374 : bool; v_373 : bool; v_404 : bool;
                     v_403 : st_18; v_402 : bool; v_401 : st_18;
                     v_400 : bool; v_399 : st_18; v_398 : bool;
                     v_397 : st_18; v_396 : bool; v_395 : st_18;
                     v_394 : bool; v_393 : bool; v_392 : bool; v_391 : bool;
                     v_390 : bool; v_389 : bool; v_420 : bool; v_419 : st_18;
                     v_418 : bool; v_417 : st_18; v_416 : bool;
                     v_415 : st_18; v_414 : bool; v_413 : st_18;
                     v_412 : bool; v_411 : st_18; v_410 : bool; v_409 : bool;
                     v_408 : bool; v_407 : bool; v_406 : bool; v_405 : bool;
                     v_436 : bool; v_435 : st_18; v_434 : bool;
                     v_433 : st_18; v_432 : bool; v_431 : st_18;
                     v_430 : bool; v_429 : st_18; v_428 : bool;
                     v_427 : st_18; v_426 : bool; v_425 : bool; v_424 : bool;
                     v_423 : bool; v_422 : bool; v_421 : bool; v_452 : bool;
                     v_451 : st_18; v_450 : bool; v_449 : st_18;
                     v_448 : bool; v_447 : st_18; v_446 : bool;
                     v_445 : st_18; v_444 : bool; v_443 : st_18;
                     v_442 : bool; v_441 : bool; v_440 : bool; v_439 : bool;
                     v_438 : bool; v_437 : bool; r_8_St_18_Arriere : bool;
                     s_8_St_18_Arriere : st_18; r_8_St_18_Cinquieme : bool;
                     s_8_St_18_Cinquieme : st_18; r_8_St_18_Quatrieme : bool;
                     s_8_St_18_Quatrieme : st_18; r_8_St_18_Troisieme : bool;
                     s_8_St_18_Troisieme : st_18; r_8_St_18_Deuxieme : bool;
                     s_8_St_18_Deuxieme : st_18; r_8_St_18_Premier : bool;
                     s_8_St_18_Premier : st_18; r_8_St_18_Zero : bool;
                     s_8_St_18_Zero : st_18; ck_12 : st_18;
                     nr_8_St_18_Arriere : bool; ns_8_St_18_Arriere : st_18;
                     num_St_18_Arriere : numero; nr_8_St_18_Cinquieme : bool;
                     ns_8_St_18_Cinquieme : st_18;
                     num_St_18_Cinquieme : numero;
                     nr_8_St_18_Quatrieme : bool;
                     ns_8_St_18_Quatrieme : st_18;
                     num_St_18_Quatrieme : numero;
                     nr_8_St_18_Troisieme : bool;
                     ns_8_St_18_Troisieme : st_18;
                     num_St_18_Troisieme : numero;
                     nr_8_St_18_Deuxieme : bool; ns_8_St_18_Deuxieme : st_18;
                     num_St_18_Deuxieme : numero; nr_8_St_18_Premier : bool;
                     ns_8_St_18_Premier : st_18; num_St_18_Premier : numero;
                     nr_8_St_18_Zero : bool; ns_8_St_18_Zero : st_18;
                     num_St_18_Zero : numero; ck_13 : st_18;
                     r_7_St_17_Stop : bool; s_7_St_17_Stop : st_17;
                     r_7_St_17_Move : bool; s_7_St_17_Move : st_17;
                     ck_14 : st_17; nr_7_St_17_Stop : bool;
                     ns_7_St_17_Stop : st_17; avance_1_St_17_Stop : bool;
                     nr_7_St_17_Move : bool; ns_7_St_17_Move : st_17;
                     avance_1_St_17_Move : bool; ck_15 : st_17; v_461 : bool;
                     v_460 : st_16; v_459 : bool; v_458 : st_16;
                     v_457 : bool; v_456 : bool; v_455 : bool; v_454 : bool;
                     v_453 : bool; v_470 : bool; v_469 : st_16; v_468 : bool;
                     v_467 : st_16; v_466 : bool; v_465 : bool; v_464 : bool;
                     v_463 : bool; v_462 : bool; v_479 : bool; v_478 : st_16;
                     v_477 : bool; v_476 : st_16; v_475 : bool; v_474 : bool;
                     v_473 : bool; v_472 : bool; v_471 : bool; v_483 : bool;
                     v_482 : st_16; v_481 : bool; v_480 : st_16;
                     r_6_St_16_PositionNuit : bool;
                     s_6_St_16_PositionNuit : st_16;
                     r_6_St_16_PositionJour : bool;
                     s_6_St_16_PositionJour : st_16;
                     r_6_St_16_PositionNormale : bool;
                     s_6_St_16_PositionNormale : st_16;
                     r_6_St_16_Desacitve : bool; s_6_St_16_Desacitve : st_16;
                     ck_16 : st_16; nr_6_St_16_PositionNuit : bool;
                     ns_6_St_16_PositionNuit : st_16;
                     sortie_St_16_PositionNuit : retro;
                     gerer_St_16_PositionNuit : bool;
                     nr_6_St_16_PositionJour : bool;
                     ns_6_St_16_PositionJour : st_16;
                     sortie_St_16_PositionJour : retro;
                     gerer_St_16_PositionJour : bool;
                     nr_6_St_16_PositionNormale : bool;
                     ns_6_St_16_PositionNormale : st_16;
                     sortie_St_16_PositionNormale : retro;
                     gerer_St_16_PositionNormale : bool;
                     nr_6_St_16_Desacitve : bool;
                     ns_6_St_16_Desacitve : st_16;
                     sortie_St_16_Desacitve : retro;
                     gerer_St_16_Desacitve : bool; ck_17 : st_16;
                     v_491 : bool; v_490 : st_15; v_489 : bool;
                     v_488 : st_15; v_487 : bool; v_486 : bool; v_485 : bool;
                     v_484 : bool; v_499 : bool; v_498 : st_15; v_497 : bool;
                     v_496 : st_15; v_495 : bool; v_494 : bool; v_493 : bool;
                     v_492 : bool; v_507 : bool; v_506 : st_15; v_505 : bool;
                     v_504 : st_15; v_503 : bool; v_502 : bool; v_501 : bool;
                     v_500 : bool; r_5_St_15_BalayageContiu : bool;
                     s_5_St_15_BalayageContiu : st_15;
                     r_5_St_15_BalayageIntermittent : bool;
                     s_5_St_15_BalayageIntermittent : st_15;
                     r_5_St_15_BalayageUnique : bool;
                     s_5_St_15_BalayageUnique : st_15;
                     r_5_St_15_Desactive : bool; s_5_St_15_Desactive : st_15;
                     ck_18 : st_15; nr_5_St_15_BalayageContiu : bool;
                     ns_5_St_15_BalayageContiu : st_15;
                     etat_1_St_15_BalayageContiu : typeBalayage;
                     nr_5_St_15_BalayageIntermittent : bool;
                     ns_5_St_15_BalayageIntermittent : st_15;
                     etat_1_St_15_BalayageIntermittent : typeBalayage;
                     nr_5_St_15_BalayageUnique : bool;
                     ns_5_St_15_BalayageUnique : st_15;
                     etat_1_St_15_BalayageUnique : typeBalayage;
                     nr_5_St_15_Desactive : bool;
                     ns_5_St_15_Desactive : st_15;
                     etat_1_St_15_Desactive : typeBalayage; ck_19 : st_15;
                     v_508 : bool; r_4_St_14_Active : bool;
                     s_4_St_14_Active : st_14; r_4_St_14_Desactive : bool;
                     s_4_St_14_Desactive : st_14; ck_20 : st_14;
                     nr_4_St_14_Active : bool; ns_4_St_14_Active : st_14;
                     emissionAppelUrgence_St_14_Active : bool;
                     airbag_St_14_Active : bool; nr_4_St_14_Desactive : bool;
                     ns_4_St_14_Desactive : st_14;
                     emissionAppelUrgence_St_14_Desactive : bool;
                     airbag_St_14_Desactive : bool; ck_21 : st_14;
                     v_515 : bool; v_514 : bool; v_513 : bool; v_512 : bool;
                     v_511 : bool; v_510 : bool; v_509 : bool; v_518 : bool;
                     v_517 : bool; v_516 : bool; r_3_St_13_Detection : bool;
                     s_3_St_13_Detection : st_13; r_3_St_13_Idle : bool;
                     s_3_St_13_Idle : st_13; ck_22 : st_13;
                     nr_3_St_13_Detection : bool;
                     ns_3_St_13_Detection : st_13;
                     dangerAngleMort_St_13_Detection : bool;
                     defaillanceTechnique_1_St_13_Detection : bool;
                     volantLibre_1_St_13_Detection : bool;
                     depassementLigne_St_13_Detection : bool;
                     nr_3_St_13_Idle : bool; ns_3_St_13_Idle : st_13;
                     dangerAngleMort_St_13_Idle : bool;
                     defaillanceTechnique_1_St_13_Idle : bool;
                     volantLibre_1_St_13_Idle : bool;
                     depassementLigne_St_13_Idle : bool; ck_23 : st_13;
                     v_529 : bool; v_528 : st_12; v_527 : bool;
                     v_526 : st_12; v_525 : bool; v_524 : bool; v_523 : bool;
                     v_522 : bool; v_521 : bool; v_520 : bool; v_519 : bool;
                     v_544 : bool; v_543 : st_12; v_542 : bool;
                     v_541 : st_12; v_540 : bool; v_539 : bool; v_538 : bool;
                     v_537 : bool; v_536 : bool; v_535 : bool; v_534 : bool;
                     v_533 : bool; v_532 : bool; v_531 : bool; v_530 : bool;
                     v_561 : bool; v_560 : st_12; v_559 : bool;
                     v_558 : st_12; v_557 : bool; v_556 : bool; v_555 : bool;
                     v_554 : bool; v_553 : bool; v_552 : bool; v_551 : bool;
                     v_550 : bool; v_549 : bool; v_548 : bool; v_547 : bool;
                     v_546 : bool; v_545 : bool; v_573 : bool; v_572 : st_12;
                     v_571 : bool; v_570 : st_12; v_569 : bool; v_568 : bool;
                     v_567 : bool; v_566 : bool; v_565 : bool; v_564 : bool;
                     v_563 : bool; v_562 : bool; r_2_St_12_Feu : bool;
                     s_2_St_12_Feu : st_12; r_2_St_12_Vehicule : bool;
                     s_2_St_12_Vehicule : st_12; r_2_St_12_Pieton : bool;
                     s_2_St_12_Pieton : st_12; r_2_St_12_Acceleration : bool;
                     s_2_St_12_Acceleration : st_12; ck_24 : st_12;
                     nr_2_St_12_Feu : bool; ns_2_St_12_Feu : st_12;
                     causeFreinage_1_St_12_Feu : cause;
                     frein_2_St_12_Feu : bool; nr_2_St_12_Vehicule : bool;
                     ns_2_St_12_Vehicule : st_12;
                     causeFreinage_1_St_12_Vehicule : cause;
                     frein_2_St_12_Vehicule : bool; nr_2_St_12_Pieton : bool;
                     ns_2_St_12_Pieton : st_12;
                     causeFreinage_1_St_12_Pieton : cause;
                     frein_2_St_12_Pieton : bool;
                     nr_2_St_12_Acceleration : bool;
                     ns_2_St_12_Acceleration : st_12;
                     causeFreinage_1_St_12_Acceleration : cause;
                     frein_2_St_12_Acceleration : bool; ck_25 : st_12;
                     v_574 : bool; r_1_St_11_Active : bool;
                     s_1_St_11_Active : st_11; r_1_St_11_Desactive : bool;
                     s_1_St_11_Desactive : st_11; ck_26 : st_11;
                     nr_1_St_11_Active : bool; ns_1_St_11_Active : st_11;
                     etat_2_St_11_Active : bool; qt_St_11_Active : float;
                     nr_1_St_11_Desactive : bool;
                     ns_1_St_11_Desactive : st_11;
                     etat_2_St_11_Desactive : bool;
                     qt_St_11_Desactive : float; ck_27 : st_11; v_578 : bool;
                     v_577 : st_10; v_576 : bool; v_575 : st_10;
                     v_584 : bool; v_583 : st_10; v_582 : bool;
                     v_581 : st_10; v_580 : bool; v_579 : st_10;
                     v_588 : bool; v_587 : st_10; v_586 : bool;
                     v_585 : st_10; v_592 : bool; v_591 : st_10;
                     v_590 : bool; v_589 : st_10; r_St_10_Phares : bool;
                     s_St_10_Phares : st_10; r_St_10_Codes : bool;
                     s_St_10_Codes : st_10; r_St_10_Veilleuses : bool;
                     s_St_10_Veilleuses : st_10; r_St_10_Idle : bool;
                     s_St_10_Idle : st_10; ck_28 : st_10;
                     nr_St_10_Phares : bool; ns_St_10_Phares : st_10;
                     etat_3_St_10_Phares : etatPhares;
                     veilleuses_St_10_Phares : bool;
                     phares_1_St_10_Phares : bool; codes_St_10_Phares : bool;
                     nr_St_10_Codes : bool; ns_St_10_Codes : st_10;
                     etat_3_St_10_Codes : etatPhares;
                     veilleuses_St_10_Codes : bool;
                     phares_1_St_10_Codes : bool; codes_St_10_Codes : bool;
                     nr_St_10_Veilleuses : bool; ns_St_10_Veilleuses : st_10;
                     etat_3_St_10_Veilleuses : etatPhares;
                     veilleuses_St_10_Veilleuses : bool;
                     phares_1_St_10_Veilleuses : bool;
                     codes_St_10_Veilleuses : bool; nr_St_10_Idle : bool;
                     ns_St_10_Idle : st_10; etat_3_St_10_Idle : etatPhares;
                     veilleuses_St_10_Idle : bool;
                     phares_1_St_10_Idle : bool; codes_St_10_Idle : bool;
                     ck_29 : st_10; v_336 : bool; v_335 : bool; v_334 : bool;
                     v_333 : bool; v_332 : bool; v_331 : bool; v_330 : bool;
                     v_329 : bool; v_328 : bool; v_327 : bool; v_326 : bool;
                     v_325 : bool; v_324 : bool; v_323 : bool; v_322 : bool;
                     v_321 : bool; v_320 : bool; v_319 : bool; v_318 : bool;
                     v_317 : bool; v_316 : bool; v_315 : bool; v_314 : bool;
                     v_313 : bool; v_312 : bool; v_311 : bool; v_310 : bool;
                     v_309 : bool; v_308 : bool; v_307 : bool; v_306 : bool;
                     v_305 : bool; v_304 : bool; v_303 : bool; v_302 : bool;
                     v_301 : bool; v_300 : bool; v_299 : bool; v_298 : bool;
                     v_297 : bool; v_296 : bool; v_295 : bool; v_294 : bool;
                     v_293 : bool; v_292 : bool; v_291 : bool; v_290 : bool;
                     v_289 : bool; v_288 : bool; v_287 : bool; v_286 : bool;
                     v_285 : bool; v_284 : bool; v_283 : bool; v_282 : bool;
                     v_281 : bool; v_280 : bool; v_279 : bool; v_278 : bool;
                     v_277 : bool; v_276 : bool; v_275 : bool; v_274 : bool;
                     v_273 : bool; v_272 : bool; v_271 : bool; v_270 : bool;
                     v_269 : bool; v_268 : bool; v_267 : bool; v_266 : bool;
                     v_265 : bool; v_264 : bool; v_263 : bool; v_262 : bool;
                     v_261 : bool; v_260 : bool; v_259 : bool; v_258 : bool;
                     v_257 : bool; v_256 : bool; v_255 : bool; v_254 : bool;
                     v_253 : bool; v_252 : bool; v_251 : bool; v_250 : bool;
                     s_9 : st_19; ns_9 : st_19; r_9 : bool; nr_9 : bool;
                     pnr_9 : bool; s_8 : st_18; ns_8 : st_18; r_8 : bool;
                     nr_8 : bool; pnr_8 : bool; s_7 : st_17; ns_7 : st_17;
                     r_7 : bool; nr_7 : bool; pnr_7 : bool; s_6 : st_16;
                     ns_6 : st_16; r_6 : bool; nr_6 : bool; pnr_6 : bool;
                     s_5 : st_15; ns_5 : st_15; r_5 : bool; nr_5 : bool;
                     pnr_5 : bool; s_4 : st_14; ns_4 : st_14; r_4 : bool;
                     nr_4 : bool; pnr_4 : bool; s_3 : st_13; ns_3 : st_13;
                     r_3 : bool; nr_3 : bool; pnr_3 : bool; s_2 : st_12;
                     ns_2 : st_12; r_2 : bool; nr_2 : bool; pnr_2 : bool;
                     s_1 : st_11; ns_1 : st_11; r_1 : bool; nr_1 : bool;
                     pnr_1 : bool; s : st_10; ns : st_10; r : bool;
                     nr : bool; pnr : bool; tdn : bool; tin : bool;
                     cpn : bool; i_1 : bool; c_1 : bool; v_1 : bool;
                     p_1 : bool; codes : bool; phares_1 : bool;
                     veilleuses : bool; etat_3 : etatPhares;
                     activated : bool; capteur : float; qt : float;
                     etat_2 : bool; presencePieton : bool;
                     presencevehicule : bool; feu : couleur; frein_2 : bool;
                     causeFreinage_1 : cause;
                     detectionDepassementLigne : bool;
                     detectionVolantLibre_1 : bool;
                     detectionDefaillanceTechnique_1 : bool;
                     detectionVehiculeAngleMort : bool;
                     depassementLigne : bool; volantLibre_1 : bool;
                     defaillanceTechnique_1 : bool; dangerAngleMort : bool;
                     detectionAccident_1 : bool; airbag : bool;
                     emissionAppelUrgence : bool; con_1 : bool;
                     cclose_1 : bool; densite : lum; etat_1 : typeBalayage;
                     normal_1 : bool; jour_1 : bool; nuit_1 : bool;
                     gerer : bool; sortie : retro; frein_1 : bool;
                     accelerateur_1 : bool; avance_1 : bool;
                     boiteDeVitesse_1 : numero; num : numero;
                     commande : bool; cle : bool; etat : bool;
                     lmoteur : bool; lretroviseur : bool; lavance : bool;
                     lairbag : bool; lemissionAppelUrgence : bool;
                     lLigne : bool; lvolantLibre : bool;
                     ldefaillanceTechnique : bool; langleMort : bool;
                     lfrein : bool; letatRegulateurTemperature : bool;
                     lcodes : bool; lphares : bool; lveilleuses : bool;
                     prop1 : bool; prop2 : bool; prop3 : bool; prop4 : bool;
                     prop5 : bool; prop6 : bool; prop7 : bool; prop8 : bool;
                     prop9 : bool; prop10 : bool; prop11 : bool;
                     prop12 : bool; prop13 : bool; prop14 : bool;
                     prop15 : bool; prop16 : bool; prop17 : bool;
                     prop18 : bool; prop19 : bool; prop20 : bool;
                     prop21 : bool; prop22 : bool; prop23 : bool;
                     prop24 : bool; prop25 : bool; prop26 : bool;
                     lessuieGlace : typeBalayage; lnumero : numero;
                     lqt : float; lcause : cause; lstate : etatPhares;
                     lsortie : retro;
  let
    quantiteRegule = lqt;
    etatRegulateurTemperature = letatRegulateurTemperature;
    causeFreinage = lcause;
    freinage = lfrein;
    angleMort = langleMort;
    defaillanceTechnique = ldefaillanceTechnique;
    volantLibre = lvolantLibre;
    ligne = lLigne;
    accident = (lairbag or lemissionAppelUrgence);
    essuieGlace = lessuieGlace;
    retroviseurStatus = lsortie;
    retroviseurActive = lretroviseur;
    phares = lstate;
    vitesses = lnumero;
    avance = lavance;
    moteur = lmoteur;
    v_250 = (prop1 & prop2);
    v_251 = (v_250 & prop3);
    v_252 = (v_251 & prop8);
    v_253 = (v_252 & prop9);
    v_254 = (v_253 & prop10);
    v_255 = (v_254 & prop11);
    v_256 = (v_255 & prop12);
    v_257 = (v_256 & prop13);
    v_258 = (v_257 & prop14);
    v_259 = (v_258 & prop15);
    v_260 = (v_259 & prop16);
    v_261 = (v_260 & prop17);
    v_262 = (v_261 & prop18);
    v_263 = (v_262 & prop19);
    v_264 = (v_263 & prop20);
    v_265 = (v_264 & prop21);
    v_266 = (v_265 & prop22);
    v_267 = (v_266 & prop23);
    v_268 = (v_267 & prop24);
    v_269 = (v_268 & prop25);
    property = (v_269 & prop26);
    v_270 = not(lairbag);
    v_271 = (lmoteur & v_270);
    v_272 = not(lvolantLibre);
    v_273 = (v_271 & v_272);
    v_274 = not(lLigne);
    v_275 = (v_273 & v_274);
    v_276 = not(ldefaillanceTechnique);
    v_277 = (v_275 & v_276);
    v_278 = not(langleMort);
    v_279 = (v_277 & v_278);
    v_280 = not(lfrein);
    v_281 = (v_279 & v_280);
    v_282 = not(v_281);
    prop26 = (v_282 or lavance);
    v_283 = not(lmoteur);
    v_284 = (lstate = NoLum);
    v_285 = not(v_284);
    prop25 = (v_283 or v_285);
    v_286 = (lumiere = Null);
    v_287 = (lmoteur & v_286);
    v_288 = not(v_287);
    v_289 = (lsortie = PositionNormale);
    prop24 = (v_288 or v_289);
    v_290 = not(lemissionAppelUrgence);
    v_291 = not(lavance);
    prop23 = (v_290 or v_291);
    v_292 = (lumiere = Low);
    v_293 = (lmoteur & v_292);
    v_294 = not(v_293);
    v_295 = (lstate = Phares);
    prop22 = (v_294 or v_295);
    v_296 = (lumiere = Normal);
    v_297 = (lmoteur & v_296);
    v_298 = not(v_297);
    v_299 = (lstate = Veilleuses);
    prop21 = (v_298 or v_299);
    v_300 = not(lmoteur);
    v_301 = (lsortie = Desactive);
    v_302 = not(v_301);
    prop20 = (v_300 or v_302);
    v_303 = (lmoteur & capteurPluie);
    v_304 = not(v_303);
    v_305 = (lessuieGlace = Deactivated);
    v_306 = not(v_305);
    prop19 = (v_304 or v_306);
    v_307 = (lessuieGlace = Deactivated);
    prop18 = (capteurPluie or v_307);
    v_308 = (lumiere = High);
    v_309 = (lmoteur & v_308);
    v_310 = not(v_309);
    v_311 = (lsortie = PositionJour);
    prop17 = (v_310 or v_311);
    v_312 = (lumiere = Low);
    v_313 = (lmoteur & v_312);
    v_314 = not(v_313);
    v_315 = (lsortie = PositionNuit);
    prop16 = (v_314 or v_315);
    v_316 = (lumiere = Normal);
    v_317 = (lmoteur & v_316);
    v_318 = not(v_317);
    v_319 = (lsortie = PositionNormale);
    prop15 = (v_318 or v_319);
    v_320 = not(lfrein);
    v_321 = not(lavance);
    prop14 = (v_320 or v_321);
    v_322 = not(lavance);
    v_323 = (lnumero = PointMort);
    v_324 = not(v_323);
    prop13 = (v_322 or v_324);
    v_325 = (lnumero = PointMort);
    prop12 = (lavance or v_325);
    v_326 = not(lavance);
    prop11 = (lmoteur or v_326);
    v_327 = not(lveilleuses);
    prop10 = (lmoteur or v_327);
    v_328 = not(lphares);
    prop9 = (lmoteur or v_328);
    v_329 = not(lcodes);
    prop8 = (lmoteur or v_329);
    v_330 = not(langleMort);
    prop7 = (lmoteur or v_330);
    v_331 = not(ldefaillanceTechnique);
    prop6 = (lmoteur or v_331);
    v_332 = not(lvolantLibre);
    prop5 = (lmoteur or v_332);
    v_333 = not(lLigne);
    prop4 = (lmoteur or v_333);
    v_334 = (lessuieGlace = Deactivated);
    prop3 = (lmoteur or v_334);
    v_335 = not(lretroviseur);
    prop2 = (lmoteur or v_335);
    v_336 = (lnumero = PointMort);
    prop1 = (lmoteur or v_336);
    lcodes = codes;
    lphares = phares_1;
    lveilleuses = veilleuses;
    lstate = etat_3;
    lqt = qt;
    letatRegulateurTemperature = etat_2;
    lfrein = frein_2;
    lcause = causeFreinage_1;
    lLigne = depassementLigne;
    lvolantLibre = volantLibre_1;
    ldefaillanceTechnique = defaillanceTechnique_1;
    langleMort = dangerAngleMort;
    lairbag = airbag;
    lemissionAppelUrgence = emissionAppelUrgence;
    lessuieGlace = etat_1;
    lretroviseur = gerer;
    lsortie = sortie;
    lavance = avance_1;
    lnumero = num;
    lmoteur = etat;
    r_9 =
      merge ck
        (St_19_Eteint -> r_9_St_19_Eteint)
        (St_19_Allumer -> r_9_St_19_Allumer);
    s_9 =
      merge ck
        (St_19_Eteint -> s_9_St_19_Eteint)
        (St_19_Allumer -> s_9_St_19_Allumer);
    v_337 = ((commande when St_19_Eteint(ck)) or (cle when St_19_Eteint(ck)));
    s_9_St_19_Eteint = if v_337 then St_19_Allumer else St_19_Eteint;
    r_9_St_19_Eteint = if v_337 then true else (pnr_9 when St_19_Eteint(ck));
    v_338 = not((commande when St_19_Allumer(ck)));
    v_339 = not((cle when St_19_Allumer(ck)));
    v_340 = (v_338 & v_339);
    s_9_St_19_Allumer = if v_340 then St_19_Eteint else St_19_Allumer;
    r_9_St_19_Allumer =
      if v_340 then true else (pnr_9 when St_19_Allumer(ck));
    ck = St_19_Allumer fby ns_9;
    nr_9 =
      merge ck_11
        (St_19_Eteint -> nr_9_St_19_Eteint)
        (St_19_Allumer -> nr_9_St_19_Allumer);
    ns_9 =
      merge ck_11
        (St_19_Eteint -> ns_9_St_19_Eteint)
        (St_19_Allumer -> ns_9_St_19_Allumer);
    etat =
      merge ck_11
        (St_19_Eteint -> etat_St_19_Eteint)
        (St_19_Allumer -> etat_St_19_Allumer);
    ns_9_St_19_Eteint = St_19_Eteint;
    nr_9_St_19_Eteint = false;
    etat_St_19_Eteint = false;
    ns_9_St_19_Allumer = St_19_Allumer;
    nr_9_St_19_Allumer = false;
    etat_St_19_Allumer = true;
    ck_11 = s_9;
    pnr_9 = false fby nr_9;
    cle = cleVoiture;
    commande = commandeVoiture;
    r_8 =
      merge ck_12
        (St_18_Arriere -> r_8_St_18_Arriere)
        (St_18_Cinquieme -> r_8_St_18_Cinquieme)
        (St_18_Quatrieme -> r_8_St_18_Quatrieme)
        (St_18_Troisieme -> r_8_St_18_Troisieme)
        (St_18_Deuxieme -> r_8_St_18_Deuxieme)
        (St_18_Premier -> r_8_St_18_Premier)(St_18_Zero -> r_8_St_18_Zero);
    s_8 =
      merge ck_12
        (St_18_Arriere -> s_8_St_18_Arriere)
        (St_18_Cinquieme -> s_8_St_18_Cinquieme)
        (St_18_Quatrieme -> s_8_St_18_Quatrieme)
        (St_18_Troisieme -> s_8_St_18_Troisieme)
        (St_18_Deuxieme -> s_8_St_18_Deuxieme)
        (St_18_Premier -> s_8_St_18_Premier)(St_18_Zero -> s_8_St_18_Zero);
    v_341 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Un);
    v_342 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Deux);
    v_343 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Quatre);
    v_344 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Trois);
    v_345 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = Cinq);
    v_346 = ((boiteDeVitesse_1 when St_18_Arriere(ck_12)) = PointMort);
    v_347 = if v_346 then St_18_Zero else St_18_Arriere;
    v_348 = if v_346 then true else (pnr_8 when St_18_Arriere(ck_12));
    v_349 = if v_345 then St_18_Cinquieme else v_347;
    v_350 = if v_345 then true else v_348;
    v_351 = if v_344 then St_18_Troisieme else v_349;
    v_352 = if v_344 then true else v_350;
    v_353 = if v_343 then St_18_Troisieme else v_351;
    v_354 = if v_343 then true else v_352;
    v_355 = if v_342 then St_18_Deuxieme else v_353;
    v_356 = if v_342 then true else v_354;
    s_8_St_18_Arriere = if v_341 then St_18_Premier else v_355;
    r_8_St_18_Arriere = if v_341 then true else v_356;
    v_357 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Un);
    v_358 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Deux);
    v_359 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Quatre);
    v_360 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Trois);
    v_361 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = Six);
    v_362 = ((boiteDeVitesse_1 when St_18_Cinquieme(ck_12)) = PointMort);
    v_363 = if v_362 then St_18_Zero else St_18_Cinquieme;
    v_364 = if v_362 then true else (pnr_8 when St_18_Cinquieme(ck_12));
    v_365 = if v_361 then St_18_Arriere else v_363;
    v_366 = if v_361 then true else v_364;
    v_367 = if v_360 then St_18_Troisieme else v_365;
    v_368 = if v_360 then true else v_366;
    v_369 = if v_359 then St_18_Troisieme else v_367;
    v_370 = if v_359 then true else v_368;
    v_371 = if v_358 then St_18_Deuxieme else v_369;
    v_372 = if v_358 then true else v_370;
    s_8_St_18_Cinquieme = if v_357 then St_18_Premier else v_371;
    r_8_St_18_Cinquieme = if v_357 then true else v_372;
    v_373 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Un);
    v_374 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Deux);
    v_375 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Trois);
    v_376 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Cinq);
    v_377 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = Six);
    v_378 = ((boiteDeVitesse_1 when St_18_Quatrieme(ck_12)) = PointMort);
    v_379 = if v_378 then St_18_Zero else St_18_Quatrieme;
    v_380 = if v_378 then true else (pnr_8 when St_18_Quatrieme(ck_12));
    v_381 = if v_377 then St_18_Arriere else v_379;
    v_382 = if v_377 then true else v_380;
    v_383 = if v_376 then St_18_Cinquieme else v_381;
    v_384 = if v_376 then true else v_382;
    v_385 = if v_375 then St_18_Troisieme else v_383;
    v_386 = if v_375 then true else v_384;
    v_387 = if v_374 then St_18_Deuxieme else v_385;
    v_388 = if v_374 then true else v_386;
    s_8_St_18_Quatrieme = if v_373 then St_18_Premier else v_387;
    r_8_St_18_Quatrieme = if v_373 then true else v_388;
    v_389 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Un);
    v_390 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Deux);
    v_391 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Quatre);
    v_392 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Cinq);
    v_393 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = Six);
    v_394 = ((boiteDeVitesse_1 when St_18_Troisieme(ck_12)) = PointMort);
    v_395 = if v_394 then St_18_Zero else St_18_Troisieme;
    v_396 = if v_394 then true else (pnr_8 when St_18_Troisieme(ck_12));
    v_397 = if v_393 then St_18_Arriere else v_395;
    v_398 = if v_393 then true else v_396;
    v_399 = if v_392 then St_18_Cinquieme else v_397;
    v_400 = if v_392 then true else v_398;
    v_401 = if v_391 then St_18_Quatrieme else v_399;
    v_402 = if v_391 then true else v_400;
    v_403 = if v_390 then St_18_Deuxieme else v_401;
    v_404 = if v_390 then true else v_402;
    s_8_St_18_Troisieme = if v_389 then St_18_Premier else v_403;
    r_8_St_18_Troisieme = if v_389 then true else v_404;
    v_405 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Un);
    v_406 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Trois);
    v_407 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Quatre);
    v_408 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Cinq);
    v_409 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = Six);
    v_410 = ((boiteDeVitesse_1 when St_18_Deuxieme(ck_12)) = PointMort);
    v_411 = if v_410 then St_18_Zero else St_18_Deuxieme;
    v_412 = if v_410 then true else (pnr_8 when St_18_Deuxieme(ck_12));
    v_413 = if v_409 then St_18_Arriere else v_411;
    v_414 = if v_409 then true else v_412;
    v_415 = if v_408 then St_18_Cinquieme else v_413;
    v_416 = if v_408 then true else v_414;
    v_417 = if v_407 then St_18_Quatrieme else v_415;
    v_418 = if v_407 then true else v_416;
    v_419 = if v_406 then St_18_Troisieme else v_417;
    v_420 = if v_406 then true else v_418;
    s_8_St_18_Deuxieme = if v_405 then St_18_Premier else v_419;
    r_8_St_18_Deuxieme = if v_405 then true else v_420;
    v_421 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Deux);
    v_422 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Trois);
    v_423 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Quatre);
    v_424 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Cinq);
    v_425 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = Six);
    v_426 = ((boiteDeVitesse_1 when St_18_Premier(ck_12)) = PointMort);
    v_427 = if v_426 then St_18_Zero else St_18_Premier;
    v_428 = if v_426 then true else (pnr_8 when St_18_Premier(ck_12));
    v_429 = if v_425 then St_18_Arriere else v_427;
    v_430 = if v_425 then true else v_428;
    v_431 = if v_424 then St_18_Cinquieme else v_429;
    v_432 = if v_424 then true else v_430;
    v_433 = if v_423 then St_18_Quatrieme else v_431;
    v_434 = if v_423 then true else v_432;
    v_435 = if v_422 then St_18_Troisieme else v_433;
    v_436 = if v_422 then true else v_434;
    s_8_St_18_Premier = if v_421 then St_18_Deuxieme else v_435;
    r_8_St_18_Premier = if v_421 then true else v_436;
    v_437 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Deux);
    v_438 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Trois);
    v_439 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Quatre);
    v_440 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Cinq);
    v_441 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Six);
    v_442 = ((boiteDeVitesse_1 when St_18_Zero(ck_12)) = Un);
    v_443 = if v_442 then St_18_Premier else St_18_Zero;
    v_444 = if v_442 then true else (pnr_8 when St_18_Zero(ck_12));
    v_445 = if v_441 then St_18_Arriere else v_443;
    v_446 = if v_441 then true else v_444;
    v_447 = if v_440 then St_18_Cinquieme else v_445;
    v_448 = if v_440 then true else v_446;
    v_449 = if v_439 then St_18_Quatrieme else v_447;
    v_450 = if v_439 then true else v_448;
    v_451 = if v_438 then St_18_Troisieme else v_449;
    v_452 = if v_438 then true else v_450;
    s_8_St_18_Zero = if v_437 then St_18_Deuxieme else v_451;
    r_8_St_18_Zero = if v_437 then true else v_452;
    ck_12 = St_18_Zero fby ns_8;
    nr_8 =
      merge ck_13
        (St_18_Arriere -> nr_8_St_18_Arriere)
        (St_18_Cinquieme -> nr_8_St_18_Cinquieme)
        (St_18_Quatrieme -> nr_8_St_18_Quatrieme)
        (St_18_Troisieme -> nr_8_St_18_Troisieme)
        (St_18_Deuxieme -> nr_8_St_18_Deuxieme)
        (St_18_Premier -> nr_8_St_18_Premier)(St_18_Zero -> nr_8_St_18_Zero);
    ns_8 =
      merge ck_13
        (St_18_Arriere -> ns_8_St_18_Arriere)
        (St_18_Cinquieme -> ns_8_St_18_Cinquieme)
        (St_18_Quatrieme -> ns_8_St_18_Quatrieme)
        (St_18_Troisieme -> ns_8_St_18_Troisieme)
        (St_18_Deuxieme -> ns_8_St_18_Deuxieme)
        (St_18_Premier -> ns_8_St_18_Premier)(St_18_Zero -> ns_8_St_18_Zero);
    num =
      merge ck_13
        (St_18_Arriere -> num_St_18_Arriere)
        (St_18_Cinquieme -> num_St_18_Cinquieme)
        (St_18_Quatrieme -> num_St_18_Quatrieme)
        (St_18_Troisieme -> num_St_18_Troisieme)
        (St_18_Deuxieme -> num_St_18_Deuxieme)
        (St_18_Premier -> num_St_18_Premier)(St_18_Zero -> num_St_18_Zero);
    ns_8_St_18_Arriere = St_18_Arriere;
    nr_8_St_18_Arriere = false;
    num_St_18_Arriere = Six;
    ns_8_St_18_Cinquieme = St_18_Cinquieme;
    nr_8_St_18_Cinquieme = false;
    num_St_18_Cinquieme = Cinq;
    ns_8_St_18_Quatrieme = St_18_Quatrieme;
    nr_8_St_18_Quatrieme = false;
    num_St_18_Quatrieme = Quatre;
    ns_8_St_18_Troisieme = St_18_Troisieme;
    nr_8_St_18_Troisieme = false;
    num_St_18_Troisieme = Trois;
    ns_8_St_18_Deuxieme = St_18_Deuxieme;
    nr_8_St_18_Deuxieme = false;
    num_St_18_Deuxieme = Deux;
    ns_8_St_18_Premier = St_18_Premier;
    nr_8_St_18_Premier = false;
    num_St_18_Premier = Un;
    ns_8_St_18_Zero = St_18_Zero;
    nr_8_St_18_Zero = false;
    num_St_18_Zero = PointMort;
    ck_13 = s_8;
    pnr_8 = false fby nr_8;
    boiteDeVitesse_1 = boiteDeVitesse;
    r_7 =
      merge ck_14
        (St_17_Stop -> r_7_St_17_Stop)(St_17_Move -> r_7_St_17_Move);
    s_7 =
      merge ck_14
        (St_17_Stop -> s_7_St_17_Stop)(St_17_Move -> s_7_St_17_Move);
    s_7_St_17_Stop =
      if (accelerateur_1 when St_17_Stop(ck_14))
      then St_17_Move
      else St_17_Stop;
    r_7_St_17_Stop =
      if (accelerateur_1 when St_17_Stop(ck_14))
      then true
      else (pnr_7 when St_17_Stop(ck_14));
    s_7_St_17_Move =
      if (frein_1 when St_17_Move(ck_14)) then St_17_Stop else St_17_Move;
    r_7_St_17_Move =
      if (frein_1 when St_17_Move(ck_14))
      then true
      else (pnr_7 when St_17_Move(ck_14));
    ck_14 = St_17_Move fby ns_7;
    nr_7 =
      merge ck_15
        (St_17_Stop -> nr_7_St_17_Stop)(St_17_Move -> nr_7_St_17_Move);
    ns_7 =
      merge ck_15
        (St_17_Stop -> ns_7_St_17_Stop)(St_17_Move -> ns_7_St_17_Move);
    avance_1 =
      merge ck_15
        (St_17_Stop -> avance_1_St_17_Stop)
        (St_17_Move -> avance_1_St_17_Move);
    ns_7_St_17_Stop = St_17_Stop;
    nr_7_St_17_Stop = false;
    avance_1_St_17_Stop = false;
    ns_7_St_17_Move = St_17_Move;
    nr_7_St_17_Move = false;
    avance_1_St_17_Move = true;
    ck_15 = s_7;
    pnr_7 = false fby nr_7;
    accelerateur_1 = accelerateur;
    frein_1 = frein;
    r_6 =
      merge ck_16
        (St_16_PositionNuit -> r_6_St_16_PositionNuit)
        (St_16_PositionJour -> r_6_St_16_PositionJour)
        (St_16_PositionNormale -> r_6_St_16_PositionNormale)
        (St_16_Desacitve -> r_6_St_16_Desacitve);
    s_6 =
      merge ck_16
        (St_16_PositionNuit -> s_6_St_16_PositionNuit)
        (St_16_PositionJour -> s_6_St_16_PositionJour)
        (St_16_PositionNormale -> s_6_St_16_PositionNormale)
        (St_16_Desacitve -> s_6_St_16_Desacitve);
    v_453 = not((normal_1 when St_16_PositionNuit(ck_16)));
    v_454 = not((jour_1 when St_16_PositionNuit(ck_16)));
    v_455 = (v_453 & v_454);
    v_456 = not((nuit_1 when St_16_PositionNuit(ck_16)));
    v_457 = (v_455 & v_456);
    v_458 = if v_457 then St_16_Desacitve else St_16_PositionNuit;
    v_459 = if v_457 then true else (pnr_6 when St_16_PositionNuit(ck_16));
    v_460 =
      if (normal_1 when St_16_PositionNuit(ck_16))
      then St_16_PositionNormale
      else v_458;
    v_461 = if (normal_1 when St_16_PositionNuit(ck_16)) then true else v_459;
    s_6_St_16_PositionNuit =
      if (jour_1 when St_16_PositionNuit(ck_16))
      then St_16_PositionJour
      else v_460;
    r_6_St_16_PositionNuit =
      if (jour_1 when St_16_PositionNuit(ck_16)) then true else v_461;
    v_462 = not((normal_1 when St_16_PositionJour(ck_16)));
    v_463 = not((jour_1 when St_16_PositionJour(ck_16)));
    v_464 = (v_462 & v_463);
    v_465 = not((nuit_1 when St_16_PositionJour(ck_16)));
    v_466 = (v_464 & v_465);
    v_467 = if v_466 then St_16_Desacitve else St_16_PositionJour;
    v_468 = if v_466 then true else (pnr_6 when St_16_PositionJour(ck_16));
    v_469 =
      if (nuit_1 when St_16_PositionJour(ck_16))
      then St_16_PositionNuit
      else v_467;
    v_470 = if (nuit_1 when St_16_PositionJour(ck_16)) then true else v_468;
    s_6_St_16_PositionJour =
      if (normal_1 when St_16_PositionJour(ck_16))
      then St_16_PositionNormale
      else v_469;
    r_6_St_16_PositionJour =
      if (normal_1 when St_16_PositionJour(ck_16)) then true else v_470;
    v_471 = not((normal_1 when St_16_PositionNormale(ck_16)));
    v_472 = not((jour_1 when St_16_PositionNormale(ck_16)));
    v_473 = (v_471 & v_472);
    v_474 = not((nuit_1 when St_16_PositionNormale(ck_16)));
    v_475 = (v_473 & v_474);
    v_476 = if v_475 then St_16_Desacitve else St_16_PositionNormale;
    v_477 = if v_475 then true else (pnr_6 when St_16_PositionNormale(ck_16));
    v_478 =
      if (nuit_1 when St_16_PositionNormale(ck_16))
      then St_16_PositionNuit
      else v_476;
    v_479 =
      if (nuit_1 when St_16_PositionNormale(ck_16)) then true else v_477;
    s_6_St_16_PositionNormale =
      if (jour_1 when St_16_PositionNormale(ck_16))
      then St_16_PositionJour
      else v_478;
    r_6_St_16_PositionNormale =
      if (jour_1 when St_16_PositionNormale(ck_16)) then true else v_479;
    v_480 =
      if (normal_1 when St_16_Desacitve(ck_16))
      then St_16_PositionNormale
      else St_16_Desacitve;
    v_481 =
      if (normal_1 when St_16_Desacitve(ck_16))
      then true
      else (pnr_6 when St_16_Desacitve(ck_16));
    v_482 =
      if (nuit_1 when St_16_Desacitve(ck_16))
      then St_16_PositionNuit
      else v_480;
    v_483 = if (nuit_1 when St_16_Desacitve(ck_16)) then true else v_481;
    s_6_St_16_Desacitve =
      if (jour_1 when St_16_Desacitve(ck_16))
      then St_16_PositionJour
      else v_482;
    r_6_St_16_Desacitve =
      if (jour_1 when St_16_Desacitve(ck_16)) then true else v_483;
    ck_16 = St_16_Desacitve fby ns_6;
    nr_6 =
      merge ck_17
        (St_16_PositionNuit -> nr_6_St_16_PositionNuit)
        (St_16_PositionJour -> nr_6_St_16_PositionJour)
        (St_16_PositionNormale -> nr_6_St_16_PositionNormale)
        (St_16_Desacitve -> nr_6_St_16_Desacitve);
    ns_6 =
      merge ck_17
        (St_16_PositionNuit -> ns_6_St_16_PositionNuit)
        (St_16_PositionJour -> ns_6_St_16_PositionJour)
        (St_16_PositionNormale -> ns_6_St_16_PositionNormale)
        (St_16_Desacitve -> ns_6_St_16_Desacitve);
    sortie =
      merge ck_17
        (St_16_PositionNuit -> sortie_St_16_PositionNuit)
        (St_16_PositionJour -> sortie_St_16_PositionJour)
        (St_16_PositionNormale -> sortie_St_16_PositionNormale)
        (St_16_Desacitve -> sortie_St_16_Desacitve);
    gerer =
      merge ck_17
        (St_16_PositionNuit -> gerer_St_16_PositionNuit)
        (St_16_PositionJour -> gerer_St_16_PositionJour)
        (St_16_PositionNormale -> gerer_St_16_PositionNormale)
        (St_16_Desacitve -> gerer_St_16_Desacitve);
    ns_6_St_16_PositionNuit = St_16_PositionNuit;
    nr_6_St_16_PositionNuit = false;
    sortie_St_16_PositionNuit = PositionNuit;
    gerer_St_16_PositionNuit = true;
    ns_6_St_16_PositionJour = St_16_PositionJour;
    nr_6_St_16_PositionJour = false;
    sortie_St_16_PositionJour = PositionJour;
    gerer_St_16_PositionJour = true;
    ns_6_St_16_PositionNormale = St_16_PositionNormale;
    nr_6_St_16_PositionNormale = false;
    sortie_St_16_PositionNormale = PositionNormale;
    gerer_St_16_PositionNormale = true;
    ns_6_St_16_Desacitve = St_16_Desacitve;
    nr_6_St_16_Desacitve = false;
    sortie_St_16_Desacitve = Desactive;
    gerer_St_16_Desacitve = false;
    ck_17 = s_6;
    pnr_6 = false fby nr_6;
    nuit_1 = nuit;
    jour_1 = jour;
    normal_1 = normal;
    r_5 =
      merge ck_18
        (St_15_BalayageContiu -> r_5_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> r_5_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> r_5_St_15_BalayageUnique)
        (St_15_Desactive -> r_5_St_15_Desactive);
    s_5 =
      merge ck_18
        (St_15_BalayageContiu -> s_5_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> s_5_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> s_5_St_15_BalayageUnique)
        (St_15_Desactive -> s_5_St_15_Desactive);
    v_484 = ((densite when St_15_BalayageContiu(ck_18)) = Low);
    v_485 = ((con_1 when St_15_BalayageContiu(ck_18)) & v_484);
    v_486 = ((densite when St_15_BalayageContiu(ck_18)) = Normal);
    v_487 = ((con_1 when St_15_BalayageContiu(ck_18)) & v_486);
    v_488 =
      if v_487 then St_15_BalayageIntermittent else St_15_BalayageContiu;
    v_489 = if v_487 then true else (pnr_5 when St_15_BalayageContiu(ck_18));
    v_490 = if v_485 then St_15_BalayageUnique else v_488;
    v_491 = if v_485 then true else v_489;
    s_5_St_15_BalayageContiu =
      if (cclose_1 when St_15_BalayageContiu(ck_18))
      then St_15_Desactive
      else v_490;
    r_5_St_15_BalayageContiu =
      if (cclose_1 when St_15_BalayageContiu(ck_18)) then true else v_491;
    v_492 = ((densite when St_15_BalayageIntermittent(ck_18)) = High);
    v_493 = ((con_1 when St_15_BalayageIntermittent(ck_18)) & v_492);
    v_494 = ((densite when St_15_BalayageIntermittent(ck_18)) = Low);
    v_495 = ((con_1 when St_15_BalayageIntermittent(ck_18)) & v_494);
    v_496 =
      if v_495 then St_15_BalayageUnique else St_15_BalayageIntermittent;
    v_497 =
      if v_495 then true else (pnr_5 when St_15_BalayageIntermittent(ck_18));
    v_498 = if v_493 then St_15_BalayageContiu else v_496;
    v_499 = if v_493 then true else v_497;
    s_5_St_15_BalayageIntermittent =
      if (cclose_1 when St_15_BalayageIntermittent(ck_18))
      then St_15_Desactive
      else v_498;
    r_5_St_15_BalayageIntermittent =
      if (cclose_1 when St_15_BalayageIntermittent(ck_18))
      then true
      else v_499;
    v_500 = ((densite when St_15_BalayageUnique(ck_18)) = High);
    v_501 = ((con_1 when St_15_BalayageUnique(ck_18)) & v_500);
    v_502 = ((densite when St_15_BalayageUnique(ck_18)) = Normal);
    v_503 = ((con_1 when St_15_BalayageUnique(ck_18)) & v_502);
    v_504 =
      if v_503 then St_15_BalayageIntermittent else St_15_BalayageUnique;
    v_505 = if v_503 then true else (pnr_5 when St_15_BalayageUnique(ck_18));
    v_506 = if v_501 then St_15_BalayageContiu else v_504;
    v_507 = if v_501 then true else v_505;
    s_5_St_15_BalayageUnique =
      if (cclose_1 when St_15_BalayageUnique(ck_18))
      then St_15_Desactive
      else v_506;
    r_5_St_15_BalayageUnique =
      if (cclose_1 when St_15_BalayageUnique(ck_18)) then true else v_507;
    s_5_St_15_Desactive =
      if (con_1 when St_15_Desactive(ck_18))
      then St_15_BalayageUnique
      else St_15_Desactive;
    r_5_St_15_Desactive =
      if (con_1 when St_15_Desactive(ck_18))
      then true
      else (pnr_5 when St_15_Desactive(ck_18));
    ck_18 = St_15_Desactive fby ns_5;
    nr_5 =
      merge ck_19
        (St_15_BalayageContiu -> nr_5_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> nr_5_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> nr_5_St_15_BalayageUnique)
        (St_15_Desactive -> nr_5_St_15_Desactive);
    ns_5 =
      merge ck_19
        (St_15_BalayageContiu -> ns_5_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> ns_5_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> ns_5_St_15_BalayageUnique)
        (St_15_Desactive -> ns_5_St_15_Desactive);
    etat_1 =
      merge ck_19
        (St_15_BalayageContiu -> etat_1_St_15_BalayageContiu)
        (St_15_BalayageIntermittent -> etat_1_St_15_BalayageIntermittent)
        (St_15_BalayageUnique -> etat_1_St_15_BalayageUnique)
        (St_15_Desactive -> etat_1_St_15_Desactive);
    ns_5_St_15_BalayageContiu = St_15_BalayageContiu;
    nr_5_St_15_BalayageContiu = false;
    etat_1_St_15_BalayageContiu = Contiu;
    ns_5_St_15_BalayageIntermittent = St_15_BalayageIntermittent;
    nr_5_St_15_BalayageIntermittent = false;
    etat_1_St_15_BalayageIntermittent = Intermittent;
    ns_5_St_15_BalayageUnique = St_15_BalayageUnique;
    nr_5_St_15_BalayageUnique = false;
    etat_1_St_15_BalayageUnique = Unique;
    ns_5_St_15_Desactive = St_15_Desactive;
    nr_5_St_15_Desactive = false;
    etat_1_St_15_Desactive = Deactivated;
    ck_19 = s_5;
    pnr_5 = false fby nr_5;
    densite = densitePluie;
    cclose_1 = cclose;
    con_1 = con;
    r_4 =
      merge ck_20
        (St_14_Active -> r_4_St_14_Active)
        (St_14_Desactive -> r_4_St_14_Desactive);
    s_4 =
      merge ck_20
        (St_14_Active -> s_4_St_14_Active)
        (St_14_Desactive -> s_4_St_14_Desactive);
    v_508 = not((detectionAccident_1 when St_14_Active(ck_20)));
    s_4_St_14_Active = if v_508 then St_14_Active else St_14_Active;
    r_4_St_14_Active =
      if v_508 then true else (pnr_4 when St_14_Active(ck_20));
    s_4_St_14_Desactive =
      if (detectionAccident_1 when St_14_Desactive(ck_20))
      then St_14_Active
      else St_14_Desactive;
    r_4_St_14_Desactive =
      if (detectionAccident_1 when St_14_Desactive(ck_20))
      then true
      else (pnr_4 when St_14_Desactive(ck_20));
    ck_20 = St_14_Desactive fby ns_4;
    nr_4 =
      merge ck_21
        (St_14_Active -> nr_4_St_14_Active)
        (St_14_Desactive -> nr_4_St_14_Desactive);
    ns_4 =
      merge ck_21
        (St_14_Active -> ns_4_St_14_Active)
        (St_14_Desactive -> ns_4_St_14_Desactive);
    emissionAppelUrgence =
      merge ck_21
        (St_14_Active -> emissionAppelUrgence_St_14_Active)
        (St_14_Desactive -> emissionAppelUrgence_St_14_Desactive);
    airbag =
      merge ck_21
        (St_14_Active -> airbag_St_14_Active)
        (St_14_Desactive -> airbag_St_14_Desactive);
    ns_4_St_14_Active = St_14_Active;
    nr_4_St_14_Active = false;
    airbag_St_14_Active = true;
    emissionAppelUrgence_St_14_Active = true;
    ns_4_St_14_Desactive = St_14_Desactive;
    nr_4_St_14_Desactive = false;
    airbag_St_14_Desactive = false;
    emissionAppelUrgence_St_14_Desactive = false;
    ck_21 = s_4;
    pnr_4 = false fby nr_4;
    detectionAccident_1 = detectionAccident;
    r_3 =
      merge ck_22
        (St_13_Detection -> r_3_St_13_Detection)
        (St_13_Idle -> r_3_St_13_Idle);
    s_3 =
      merge ck_22
        (St_13_Detection -> s_3_St_13_Detection)
        (St_13_Idle -> s_3_St_13_Idle);
    v_509 = not((detectionDepassementLigne when St_13_Detection(ck_22)));
    v_510 = not((detectionVolantLibre_1 when St_13_Detection(ck_22)));
    v_511 = (v_509 & v_510);
    v_512 =
      not((detectionDefaillanceTechnique_1 when St_13_Detection(ck_22)));
    v_513 = (v_511 & v_512);
    v_514 = not((detectionVehiculeAngleMort when St_13_Detection(ck_22)));
    v_515 = (v_513 & v_514);
    s_3_St_13_Detection = if v_515 then St_13_Idle else St_13_Detection;
    r_3_St_13_Detection =
      if v_515 then true else (pnr_3 when St_13_Detection(ck_22));
    v_516 =
      ((detectionDepassementLigne when St_13_Idle(ck_22)) or
       (detectionVolantLibre_1 when St_13_Idle(ck_22)));
    v_517 =
      (v_516 or (detectionDefaillanceTechnique_1 when St_13_Idle(ck_22)));
    v_518 = (v_517 or (detectionVehiculeAngleMort when St_13_Idle(ck_22)));
    s_3_St_13_Idle = if v_518 then St_13_Detection else St_13_Idle;
    r_3_St_13_Idle = if v_518 then true else (pnr_3 when St_13_Idle(ck_22));
    ck_22 = St_13_Idle fby ns_3;
    nr_3 =
      merge ck_23
        (St_13_Detection -> nr_3_St_13_Detection)
        (St_13_Idle -> nr_3_St_13_Idle);
    ns_3 =
      merge ck_23
        (St_13_Detection -> ns_3_St_13_Detection)
        (St_13_Idle -> ns_3_St_13_Idle);
    dangerAngleMort =
      merge ck_23
        (St_13_Detection -> dangerAngleMort_St_13_Detection)
        (St_13_Idle -> dangerAngleMort_St_13_Idle);
    defaillanceTechnique_1 =
      merge ck_23
        (St_13_Detection -> defaillanceTechnique_1_St_13_Detection)
        (St_13_Idle -> defaillanceTechnique_1_St_13_Idle);
    volantLibre_1 =
      merge ck_23
        (St_13_Detection -> volantLibre_1_St_13_Detection)
        (St_13_Idle -> volantLibre_1_St_13_Idle);
    depassementLigne =
      merge ck_23
        (St_13_Detection -> depassementLigne_St_13_Detection)
        (St_13_Idle -> depassementLigne_St_13_Idle);
    ns_3_St_13_Detection = St_13_Detection;
    nr_3_St_13_Detection = false;
    depassementLigne_St_13_Detection =
      (detectionDepassementLigne when St_13_Detection(ck_23));
    volantLibre_1_St_13_Detection =
      (detectionVolantLibre_1 when St_13_Detection(ck_23));
    defaillanceTechnique_1_St_13_Detection =
      (detectionDefaillanceTechnique_1 when St_13_Detection(ck_23));
    dangerAngleMort_St_13_Detection =
      (detectionVehiculeAngleMort when St_13_Detection(ck_23));
    ns_3_St_13_Idle = St_13_Idle;
    nr_3_St_13_Idle = false;
    depassementLigne_St_13_Idle = false;
    volantLibre_1_St_13_Idle = false;
    defaillanceTechnique_1_St_13_Idle = false;
    dangerAngleMort_St_13_Idle = false;
    ck_23 = s_3;
    pnr_3 = false fby nr_3;
    detectionVehiculeAngleMort = detectionAngleMort;
    detectionDefaillanceTechnique_1 = detectionDefaillanceTechnique;
    detectionVolantLibre_1 = detectionVolantLibre;
    detectionDepassementLigne = detectionLigne;
    r_2 =
      merge ck_24
        (St_12_Feu -> r_2_St_12_Feu)(St_12_Vehicule -> r_2_St_12_Vehicule)
        (St_12_Pieton -> r_2_St_12_Pieton)
        (St_12_Acceleration -> r_2_St_12_Acceleration);
    s_2 =
      merge ck_24
        (St_12_Feu -> s_2_St_12_Feu)(St_12_Vehicule -> s_2_St_12_Vehicule)
        (St_12_Pieton -> s_2_St_12_Pieton)
        (St_12_Acceleration -> s_2_St_12_Acceleration);
    v_519 = not((presencePieton when St_12_Feu(ck_24)));
    v_520 = not((presencevehicule when St_12_Feu(ck_24)));
    v_521 = (v_519 & v_520);
    v_522 = ((feu when St_12_Feu(ck_24)) = Vert);
    v_523 = (v_521 & v_522);
    v_524 = not((presencePieton when St_12_Feu(ck_24)));
    v_525 = (v_524 & (presencevehicule when St_12_Feu(ck_24)));
    v_526 = if v_525 then St_12_Vehicule else St_12_Feu;
    v_527 = if v_525 then true else (pnr_2 when St_12_Feu(ck_24));
    v_528 =
      if (presencePieton when St_12_Feu(ck_24)) then St_12_Pieton else v_526;
    v_529 = if (presencePieton when St_12_Feu(ck_24)) then true else v_527;
    s_2_St_12_Feu = if v_523 then St_12_Acceleration else v_528;
    r_2_St_12_Feu = if v_523 then true else v_529;
    v_530 = not((presencePieton when St_12_Vehicule(ck_24)));
    v_531 = not((presencevehicule when St_12_Vehicule(ck_24)));
    v_532 = (v_530 & v_531);
    v_533 = ((feu when St_12_Vehicule(ck_24)) = Vert);
    v_534 = (v_532 & v_533);
    v_535 = not((presencePieton when St_12_Vehicule(ck_24)));
    v_536 = not((presencevehicule when St_12_Vehicule(ck_24)));
    v_537 = (v_535 & v_536);
    v_538 = ((feu when St_12_Vehicule(ck_24)) = Vert);
    v_539 = not(v_538);
    v_540 = (v_537 & v_539);
    v_541 = if v_540 then St_12_Feu else St_12_Vehicule;
    v_542 = if v_540 then true else (pnr_2 when St_12_Vehicule(ck_24));
    v_543 =
      if (presencePieton when St_12_Vehicule(ck_24))
      then St_12_Pieton
      else v_541;
    v_544 =
      if (presencePieton when St_12_Vehicule(ck_24)) then true else v_542;
    s_2_St_12_Vehicule = if v_534 then St_12_Acceleration else v_543;
    r_2_St_12_Vehicule = if v_534 then true else v_544;
    v_545 = not((presencePieton when St_12_Pieton(ck_24)));
    v_546 = not((presencevehicule when St_12_Pieton(ck_24)));
    v_547 = (v_545 & v_546);
    v_548 = ((feu when St_12_Pieton(ck_24)) = Vert);
    v_549 = (v_547 & v_548);
    v_550 = not((presencePieton when St_12_Pieton(ck_24)));
    v_551 = (v_550 & (presencevehicule when St_12_Pieton(ck_24)));
    v_552 = not((presencePieton when St_12_Pieton(ck_24)));
    v_553 = not((presencevehicule when St_12_Pieton(ck_24)));
    v_554 = (v_552 & v_553);
    v_555 = ((feu when St_12_Pieton(ck_24)) = Vert);
    v_556 = not(v_555);
    v_557 = (v_554 & v_556);
    v_558 = if v_557 then St_12_Feu else St_12_Pieton;
    v_559 = if v_557 then true else (pnr_2 when St_12_Pieton(ck_24));
    v_560 = if v_551 then St_12_Vehicule else v_558;
    v_561 = if v_551 then true else v_559;
    s_2_St_12_Pieton = if v_549 then St_12_Acceleration else v_560;
    r_2_St_12_Pieton = if v_549 then true else v_561;
    v_562 = not((presencePieton when St_12_Acceleration(ck_24)));
    v_563 = (v_562 & (presencevehicule when St_12_Acceleration(ck_24)));
    v_564 = not((presencePieton when St_12_Acceleration(ck_24)));
    v_565 = not((presencevehicule when St_12_Acceleration(ck_24)));
    v_566 = (v_564 & v_565);
    v_567 = ((feu when St_12_Acceleration(ck_24)) = Vert);
    v_568 = not(v_567);
    v_569 = (v_566 & v_568);
    v_570 = if v_569 then St_12_Feu else St_12_Acceleration;
    v_571 = if v_569 then true else (pnr_2 when St_12_Acceleration(ck_24));
    v_572 = if v_563 then St_12_Vehicule else v_570;
    v_573 = if v_563 then true else v_571;
    s_2_St_12_Acceleration =
      if (presencePieton when St_12_Acceleration(ck_24))
      then St_12_Pieton
      else v_572;
    r_2_St_12_Acceleration =
      if (presencePieton when St_12_Acceleration(ck_24)) then true else v_573;
    ck_24 = St_12_Acceleration fby ns_2;
    nr_2 =
      merge ck_25
        (St_12_Feu -> nr_2_St_12_Feu)(St_12_Vehicule -> nr_2_St_12_Vehicule)
        (St_12_Pieton -> nr_2_St_12_Pieton)
        (St_12_Acceleration -> nr_2_St_12_Acceleration);
    ns_2 =
      merge ck_25
        (St_12_Feu -> ns_2_St_12_Feu)(St_12_Vehicule -> ns_2_St_12_Vehicule)
        (St_12_Pieton -> ns_2_St_12_Pieton)
        (St_12_Acceleration -> ns_2_St_12_Acceleration);
    causeFreinage_1 =
      merge ck_25
        (St_12_Feu -> causeFreinage_1_St_12_Feu)
        (St_12_Vehicule -> causeFreinage_1_St_12_Vehicule)
        (St_12_Pieton -> causeFreinage_1_St_12_Pieton)
        (St_12_Acceleration -> causeFreinage_1_St_12_Acceleration);
    frein_2 =
      merge ck_25
        (St_12_Feu -> frein_2_St_12_Feu)
        (St_12_Vehicule -> frein_2_St_12_Vehicule)
        (St_12_Pieton -> frein_2_St_12_Pieton)
        (St_12_Acceleration -> frein_2_St_12_Acceleration);
    ns_2_St_12_Feu = St_12_Feu;
    nr_2_St_12_Feu = false;
    causeFreinage_1_St_12_Feu = Feu;
    frein_2_St_12_Feu = true;
    ns_2_St_12_Vehicule = St_12_Vehicule;
    nr_2_St_12_Vehicule = false;
    causeFreinage_1_St_12_Vehicule = Presencevehicule;
    frein_2_St_12_Vehicule = true;
    ns_2_St_12_Pieton = St_12_Pieton;
    nr_2_St_12_Pieton = false;
    causeFreinage_1_St_12_Pieton = PresencePieton;
    frein_2_St_12_Pieton = true;
    ns_2_St_12_Acceleration = St_12_Acceleration;
    nr_2_St_12_Acceleration = false;
    causeFreinage_1_St_12_Acceleration = None;
    frein_2_St_12_Acceleration = false;
    ck_25 = s_2;
    pnr_2 = false fby nr_2;
    feu = capteurDectecteurFeu;
    presencevehicule = detectionPresencevehicule;
    presencePieton = detectionPresencePieton;
    r_1 =
      merge ck_26
        (St_11_Active -> r_1_St_11_Active)
        (St_11_Desactive -> r_1_St_11_Desactive);
    s_1 =
      merge ck_26
        (St_11_Active -> s_1_St_11_Active)
        (St_11_Desactive -> s_1_St_11_Desactive);
    v_574 = not((activated when St_11_Active(ck_26)));
    s_1_St_11_Active = if v_574 then St_11_Desactive else St_11_Active;
    r_1_St_11_Active =
      if v_574 then true else (pnr_1 when St_11_Active(ck_26));
    s_1_St_11_Desactive =
      if (activated when St_11_Desactive(ck_26))
      then St_11_Active
      else St_11_Desactive;
    r_1_St_11_Desactive =
      if (activated when St_11_Desactive(ck_26))
      then true
      else (pnr_1 when St_11_Desactive(ck_26));
    ck_26 = St_11_Desactive fby ns_1;
    nr_1 =
      merge ck_27
        (St_11_Active -> nr_1_St_11_Active)
        (St_11_Desactive -> nr_1_St_11_Desactive);
    ns_1 =
      merge ck_27
        (St_11_Active -> ns_1_St_11_Active)
        (St_11_Desactive -> ns_1_St_11_Desactive);
    etat_2 =
      merge ck_27
        (St_11_Active -> etat_2_St_11_Active)
        (St_11_Desactive -> etat_2_St_11_Desactive);
    qt =
      merge ck_27
        (St_11_Active -> qt_St_11_Active)
        (St_11_Desactive -> qt_St_11_Desactive);
    ns_1_St_11_Active = St_11_Active;
    nr_1_St_11_Active = false;
    qt_St_11_Active = (19.000000 -. (capteur when St_11_Active(ck_27)));
    etat_2_St_11_Active = true;
    ns_1_St_11_Desactive = St_11_Desactive;
    nr_1_St_11_Desactive = false;
    qt_St_11_Desactive = 0.000000;
    etat_2_St_11_Desactive = false;
    ck_27 = s_1;
    pnr_1 = false fby nr_1;
    capteur = capteurTemperature;
    activated = activeRegulateurTemperature;
    r =
      merge ck_28
        (St_10_Phares -> r_St_10_Phares)(St_10_Codes -> r_St_10_Codes)
        (St_10_Veilleuses -> r_St_10_Veilleuses)(St_10_Idle -> r_St_10_Idle);
    s =
      merge ck_28
        (St_10_Phares -> s_St_10_Phares)(St_10_Codes -> s_St_10_Codes)
        (St_10_Veilleuses -> s_St_10_Veilleuses)(St_10_Idle -> s_St_10_Idle);
    v_575 =
      if (i_1 when St_10_Phares(ck_28)) then St_10_Idle else St_10_Phares;
    v_576 =
      if (i_1 when St_10_Phares(ck_28))
      then true
      else (pnr when St_10_Phares(ck_28));
    v_577 =
      if (v_1 when St_10_Phares(ck_28)) then St_10_Veilleuses else v_575;
    v_578 = if (v_1 when St_10_Phares(ck_28)) then true else v_576;
    s_St_10_Phares =
      if (cpn when St_10_Phares(ck_28)) then St_10_Codes else v_577;
    r_St_10_Phares = if (cpn when St_10_Phares(ck_28)) then true else v_578;
    v_579 = if (i_1 when St_10_Codes(ck_28)) then St_10_Idle else St_10_Codes;
    v_580 =
      if (i_1 when St_10_Codes(ck_28))
      then true
      else (pnr when St_10_Codes(ck_28));
    v_581 = if (c_1 when St_10_Codes(ck_28)) then St_10_Codes else v_579;
    v_582 = if (c_1 when St_10_Codes(ck_28)) then true else v_580;
    v_583 = if (cpn when St_10_Codes(ck_28)) then St_10_Phares else v_581;
    v_584 = if (cpn when St_10_Codes(ck_28)) then true else v_582;
    s_St_10_Codes =
      if (tin when St_10_Codes(ck_28)) then St_10_Veilleuses else v_583;
    r_St_10_Codes = if (tin when St_10_Codes(ck_28)) then true else v_584;
    v_585 =
      if (p_1 when St_10_Veilleuses(ck_28))
      then St_10_Phares
      else St_10_Veilleuses;
    v_586 =
      if (p_1 when St_10_Veilleuses(ck_28))
      then true
      else (pnr when St_10_Veilleuses(ck_28));
    v_587 = if (tdn when St_10_Veilleuses(ck_28)) then St_10_Codes else v_585;
    v_588 = if (tdn when St_10_Veilleuses(ck_28)) then true else v_586;
    s_St_10_Veilleuses =
      if (tin when St_10_Veilleuses(ck_28)) then St_10_Idle else v_587;
    r_St_10_Veilleuses =
      if (tin when St_10_Veilleuses(ck_28)) then true else v_588;
    v_589 = if (p_1 when St_10_Idle(ck_28)) then St_10_Phares else St_10_Idle;
    v_590 =
      if (p_1 when St_10_Idle(ck_28))
      then true
      else (pnr when St_10_Idle(ck_28));
    v_591 = if (c_1 when St_10_Idle(ck_28)) then St_10_Codes else v_589;
    v_592 = if (c_1 when St_10_Idle(ck_28)) then true else v_590;
    s_St_10_Idle =
      if (tdn when St_10_Idle(ck_28)) then St_10_Veilleuses else v_591;
    r_St_10_Idle = if (tdn when St_10_Idle(ck_28)) then true else v_592;
    ck_28 = St_10_Idle fby ns;
    nr =
      merge ck_29
        (St_10_Phares -> nr_St_10_Phares)(St_10_Codes -> nr_St_10_Codes)
        (St_10_Veilleuses -> nr_St_10_Veilleuses)
        (St_10_Idle -> nr_St_10_Idle);
    ns =
      merge ck_29
        (St_10_Phares -> ns_St_10_Phares)(St_10_Codes -> ns_St_10_Codes)
        (St_10_Veilleuses -> ns_St_10_Veilleuses)
        (St_10_Idle -> ns_St_10_Idle);
    etat_3 =
      merge ck_29
        (St_10_Phares -> etat_3_St_10_Phares)
        (St_10_Codes -> etat_3_St_10_Codes)
        (St_10_Veilleuses -> etat_3_St_10_Veilleuses)
        (St_10_Idle -> etat_3_St_10_Idle);
    veilleuses =
      merge ck_29
        (St_10_Phares -> veilleuses_St_10_Phares)
        (St_10_Codes -> veilleuses_St_10_Codes)
        (St_10_Veilleuses -> veilleuses_St_10_Veilleuses)
        (St_10_Idle -> veilleuses_St_10_Idle);
    phares_1 =
      merge ck_29
        (St_10_Phares -> phares_1_St_10_Phares)
        (St_10_Codes -> phares_1_St_10_Codes)
        (St_10_Veilleuses -> phares_1_St_10_Veilleuses)
        (St_10_Idle -> phares_1_St_10_Idle);
    codes =
      merge ck_29
        (St_10_Phares -> codes_St_10_Phares)
        (St_10_Codes -> codes_St_10_Codes)
        (St_10_Veilleuses -> codes_St_10_Veilleuses)
        (St_10_Idle -> codes_St_10_Idle);
    ns_St_10_Phares = St_10_Phares;
    nr_St_10_Phares = false;
    codes_St_10_Phares = false;
    phares_1_St_10_Phares = true;
    veilleuses_St_10_Phares = false;
    etat_3_St_10_Phares = Phares;
    ns_St_10_Codes = St_10_Codes;
    nr_St_10_Codes = false;
    codes_St_10_Codes = true;
    phares_1_St_10_Codes = false;
    veilleuses_St_10_Codes = false;
    etat_3_St_10_Codes = Codes;
    ns_St_10_Veilleuses = St_10_Veilleuses;
    nr_St_10_Veilleuses = false;
    codes_St_10_Veilleuses = false;
    phares_1_St_10_Veilleuses = false;
    veilleuses_St_10_Veilleuses = true;
    etat_3_St_10_Veilleuses = Veilleuses;
    ns_St_10_Idle = St_10_Idle;
    nr_St_10_Idle = false;
    codes_St_10_Idle = false;
    phares_1_St_10_Idle = false;
    veilleuses_St_10_Idle = false;
    etat_3_St_10_Idle = NoLum;
    ck_29 = s;
    pnr = false fby nr;
    p_1 = p;
    v_1 = v;
    c_1 = c;
    i_1 = i;
    cpn = cp;
    tin = ti;
    tdn = td
  tel

