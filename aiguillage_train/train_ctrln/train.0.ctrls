!typedef
  St_14 = enum {St_14_Haut, St_14_Bas};
  St_13 = enum {St_13_Haut, St_13_Bas};
  St_12 = enum {St_12_Vert, St_12_Rouge};
  St_11 = enum {St_11_Vert, St_11_Rouge};
  St_10 = enum {St_10_Vert, St_10_Rouge};
  St_9 = enum {St_9_Vert, St_9_Rouge};
  St_8 = enum {St_8_PresenceNiveau, St_8_NiveauVide};
  St_7 = enum {St_7_PresenceNiveau, St_7_NiveauVide};
  St_6 = enum {St_6_PresenceNiveau, St_6_NiveauVide};
  St_5 = enum {St_5_PresenceNiveau, St_5_NiveauVide};
  St_4 = enum {St_4_PresenceNiveau, St_4_NiveauVide};
  St_3 = enum {St_3_PresenceNiveau, St_3_NiveauVide};
  St_2 = enum {St_2_PresenceNiveau, St_2_NiveauVide};
  St_1 = enum {St_1_Vert, St_1_Rouge};
  St = enum {St_Haut, St_Bas};
  
!input
  ck: St_14;
  ck_5: St_13;
  ck_7: St_12;
  ck_9: St_11;
  ck_11: St_10;
  ck_13: St_9;
  ck_15: St_8;
  ck_17: St_7;
  ck_19: St_6;
  ck_21: St_5;
  ck_23: St_4;
  ck_25: St_3;
  pnr_11: bool;
  pnr_10: bool;
  pnr_9: bool;
  pnr_8: bool;
  pnr_7: bool;
  pnr_6: bool;
  pnr_5: bool;
  pnr_4: bool;
  pnr_3: bool;
  pnr_2: bool;
  pnr_1: bool;
  pnr: bool;
  __init__: bool;
  ok: bool;
  property: bool;
  aiguillage2Haut: bool;
  aiguillage2Bas: bool;
  feuGare2: bool;
  aiguillage1Haut: bool;
  aiguillage1Bas: bool;
  feu2: bool;
  feuGare1: bool;
  feu1: bool;
  presenceSection1: bool;
  presenceAiguillage1: bool;
  presenceAiguillage2: bool;
  presenceGare1: bool;
  presenceGare2: bool;
  presenceSection2: bool;
  
!output
  demandeActionnerAig1Haut: bool;
  demandeActionnerAig1Bas: bool;
  demandeActionnerAig2Haut: bool;
  demandeActionnerAig2Bas: bool;
  
!local
  l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10: bool;
  
!definition
  demandeActionnerAig1Haut = true;
  demandeActionnerAig2Bas = true;
  l0 = (ck_23 = St_4_PresenceNiveau);
  l1 = (ck_23 = St_4_NiveauVide);
  l7 = (ck_19 = St_6_PresenceNiveau);
  l8 = (ck_19 = St_6_NiveauVide);
  l2 = (if presenceGare2 then l1 else l0);
  l9 = (if presenceAiguillage2 then l8 else l7);
  l3 = (ck_17 = St_7_PresenceNiveau) and l2;
  l4 = not ((ck_17 = St_7_PresenceNiveau)) and l2;
  l10 = ((ck_5 = St_13_Haut) or l9);
  demandeActionnerAig2Haut = l10;
  l5 = (if presenceAiguillage1 then l4 else l3);
  l6 = ((ck = St_14_Bas) or l5);
  demandeActionnerAig1Bas = l6;
  
!assertion
  true;
